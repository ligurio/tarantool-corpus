select {
  option: NONE
  column {
    any_fallback {
    }
  }
  from_clause {
    join_source_fallback {
      table_name_fallback {
        code: 0
      }
    }
  }
  from_clause_present_flag: false
  group_by_exr {
    expr {
      binary_operator_expression {
        left_operand {
          func {
            unary_operator_expression_fallback {
              unary_operator: NOT
              term {
                column_name {
                  code: 126
                }
                constant_fallback {
                  value: 0
                  type {
                    collatable_type {
                      type_enum_fallback: STRING
                    }
                    type_enum_fallback: BOOLEAN
                  }
                }
              }
            }
          }
          constant_fallback {
            value: 0
            type {
              type_enum_fallback: BOOLEAN
            }
          }
        }
        binary_operator: MINUS
        right_operand {
          constant_fallback {
            value: 0
            type {
              type_enum_fallback: UNSIGNED
            }
          }
        }
      }
      unary_operator_expression_fallback {
        unary_operator: NOT
        term {
          func {
            unary_operator_expression_fallback {
              unary_operator: NOT
              term {
                column_name {
                  code: 126
                }
                constant_fallback {
                  value: 0
                  type {
                    type_enum_fallback: BOOLEAN
                  }
                }
              }
            }
          }
          constant_fallback {
            value: 0
            type {
              type_enum_fallback: BOOLEAN
            }
          }
        }
      }
    }
  }
  having_expr {
    expr {
      compare {
        left_operand {
          constant_fallback {
            value: 0
            type {
              type_enum: UNSIGNED
              type_enum_fallback: BOOLEAN
            }
          }
        }
        comporator: LESS_EQUAL
        right_operand {
          constant_fallback {
            value: 0
            type {
              type_enum_fallback: BOOLEAN
            }
          }
        }
      }
      bool_constant_fallback: false
    }
  }
}
