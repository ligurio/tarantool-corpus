select {
  option: ALL
  column {
    any_fallback {
    }
  }
  from_clause {
    option2 {
      select_statement {
        option: DISTINCT
        column {
          select_column_expression {
            expression {
              binary_operator_expression {
                left_operand {
                  constant_fallback {
                    value: 0
                    type {
                      type_enum_fallback: BOOLEAN
                    }
                  }
                }
                binary_operator: MULTIPLY
                right_operand {
                  constant_fallback {
                    value: 0
                    type {
                      type_enum_fallback: UNSIGNED
                    }
                  }
                }
              }
              unary_operator_expression_fallback {
                unary_operator: NOT
                term {
                  constant_fallback {
                    value: 0
                    type {
                      type_enum_fallback: BOOLEAN
                    }
                  }
                }
              }
            }
          }
          any_fallback {
          }
        }
        from_clause {
          join_source_fallback {
            table_name_fallback {
              code: 67108864
            }
          }
        }
        from_clause_present_flag: true
        where_expr {
          expr {
            bool_constant_fallback: true
          }
        }
      }
      as_construction_present_flag: true
    }
    join_source_fallback {
      table_name_fallback {
        code: 39
      }
    }
  }
  from_clause_present_flag: false
  group_by_exr {
    expr {
      unary_operator_expression_fallback {
        unary_operator: PLUS
        term {
          constant_fallback {
            value: 0
            type {
              type_enum_fallback: BOOLEAN
            }
          }
        }
      }
    }
  }
  having_expr {
    expr {
      compare {
        left_operand {
          func {
            binary_operator_expression {
              left_operand {
                constant_fallback {
                  value: 0
                  type {
                    type_enum_fallback: BOOLEAN
                  }
                }
              }
              binary_operator: MULTIPLY
              right_operand {
                constant_fallback {
                  value: 0
                  type {
                    type_enum_fallback: UNSIGNED
                  }
                }
              }
            }
            unary_operator_expression_fallback {
              unary_operator: NOT
              term {
                constant_fallback {
                  value: 0
                  type {
                    type_enum_fallback: BOOLEAN
                  }
                }
              }
            }
          }
          constant_fallback {
            value: 0
            type {
              type_enum_fallback: BOOLEAN
            }
          }
        }
        comporator: LESS
        right_operand {
          constant_fallback {
            value: 0
            type {
              type_enum_fallback: BOOLEAN
            }
          }
        }
      }
      bool_constant_fallback: true
    }
  }
  order_by {
    expr {
      column_name {
        code: 0
      }
      order: ASCENDING
    }
  }
}
