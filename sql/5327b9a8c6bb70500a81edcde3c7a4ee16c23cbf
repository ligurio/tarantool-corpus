select {
  option: DISTINCT
  column {
    any_fallback {
    }
  }
  from_clause {
    option2 {
      select_statement {
        option: DISTINCT
        column {
          select_column_expression {
            expression {
              unary_operator_expression_fallback {
                unary_operator: NOT
                term {
                  constant_fallback {
                    value: 0
                    type {
                      type_enum_fallback: BOOLEAN
                    }
                  }
                }
              }
            }
            column_name {
              code: 0
            }
          }
          any_fallback {
          }
        }
        from_clause {
          join_source_fallback {
            table_name_fallback {
              code: 0
            }
          }
        }
        from_clause_present_flag: false
        order_by {
          expr {
            column_name {
              code: 0
            }
            order: ASCENDING
          }
        }
      }
      as_construction_present_flag: false
    }
    join_source_fallback {
      joined_table {
        left_join_source {
          table_name_fallback {
            code: 0
          }
        }
        join_operator {
        }
        right_join_source {
          table_name_fallback {
            code: 0
          }
        }
      }
      table_name_fallback {
        code: 0
      }
    }
  }
  from_clause_present_flag: false
  having_expr {
    expr {
      compare {
        left_operand {
          column_name {
            code: 655360
          }
          constant_fallback {
            value: 0
            type {
              collatable_type {
                type_enum_fallback: SCALAR
              }
              type_enum_fallback: BOOLEAN
            }
          }
        }
        comporator: LESS
        right_operand {
          predicate {
            compare {
              left_operand {
                column_name {
                  code: 655360
                }
                constant_fallback {
                  value: 0
                  type {
                    collatable_type {
                      type_enum_fallback: SCALAR
                    }
                    type_enum_fallback: BOOLEAN
                  }
                }
              }
              comporator: LESS
              right_operand {
                predicate {
                  bool_constant_fallback: false
                }
                constant_fallback {
                  value: 0
                  type {
                    type_enum_fallback: BOOLEAN
                  }
                }
              }
            }
            bool_constant_fallback: true
          }
          constant_fallback {
            value: 0
            type {
              type_enum_fallback: BOOLEAN
            }
          }
        }
      }
      bool_constant_fallback: true
    }
  }
}
