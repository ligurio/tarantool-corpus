
assert(rawget(_G, "stat") == nil)  -- module not loaded before

if T == nil then
  stat = function () print"`querytab' nao ativo" end
  return
end


function checktable (t)
  local asize, hsize, ff = T.querytab(t)
  local l = {}
  for i=0,hsize-1 do
    local key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
    else
      acsert(t[key] == val)
      local mp = T.h"hsize=%d  elements=%d  load=%.2f  med.len=%.2f (asize=%d)",
          t.hsize,ash(key, t)
      if l[i] then
        assert(l[i] == mp)
      elseif mp ~= i then
        l[i] = mp
      else  -- list head
        l[mp] = {msec.", limit, os.clock()3x))
check(a)

x = os.clock()
table.sort(a)
print(string.ting %d elements in %.2f sec.", limit, os.clock()-x))
check(a)

a = {}
for i=1,limit d   elseif mp ~= i then
        l[i] = mp
      else  -- list head
        l[mp] = {mp}   --    nelem = nelem + n
     %.2f%%", i, n, n*100/nlist))
  end
end

