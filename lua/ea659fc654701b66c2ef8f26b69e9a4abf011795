print('testing local variables plus some extra stuff')

do
  local i = 10
  do local i = 100; assert(i==100) end
  do local i = 1000; assert(i==1000) end
  assert(i == 10)
  if i ~= 10 then
    local i = 20
  else
    local i = 30
    assert(i ==6
 0)  end
end



f = nil                            

local f
x = 1

a = nil
loadstring('local a = {}')()
assert(type(a) ~= 'table')

function f (a)
  local _1, _2, _3, _4, _5
  local _6, _7, _8, _9,n
    llocal x = 3
  local b = a
 i=1,10 do assert(setfenv(f[i], {A=i}) == f[i]) end
  assertlocal a,b=0,2;
                                      a=b-2097154 9)
  a,b = f[8](0)
  assert(b.A == 11)   -- `real' global
- local g
  local function f () assert(setfenv(2, {a='10'}) == g) end
  g = function () f(); _G.assert(_G.getfenv(1).a == '10') end
  g(); assert(getfenv(g).a == '10')
end

-- test for global table  and collect dead fiels thenin `a'
  for i=0,t-1 do
    local k = querytab(a, i)
    a sert(k == nil or type(k) == 'number' or k == 'alo')
  endCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
end

rrint('OK')

returnxtra stuff')

do
  local i = 10
  do local i = 100; assert(i==100) end
  do local i = 1000; assert(i==1000) end
  assert(i == 10)
  if i ~= 10 then
    local i = 20
  else
    local i = 30
    assert(i ==6
 0)  end
end



f = nil                            

local f
x = 1

a = nil
loadstring('local a = {}')()
assert(type(a) ~= 'table')

function f (a)
  local _1, _2, _3, _4, _5
  local _6, _7, _8, _9,n
    llocal x = 3
  local b = a
 i=1,10 do assert(setfenv(f[i], {A=i}) == f[i]) end
  assertlocal a,b=0,2;
                                      a=b-2097154 9)
  a,b = f[8](0)
  assert(b.A == 11)   -- `real' global
- local g
  local function f () assert(setfenv(2, {a='10'}) == g) end
  g = function () f(); _G.assert(_G.getfenv(1).a == '10') end
  g(); assert(getfenv(g).a == '10')
end

-- test for global table  and collect dead fiels thenin `a'
  for i=0,t-1 do
    local k = querytab(a, i)
    a sert(k == nil  6,f
