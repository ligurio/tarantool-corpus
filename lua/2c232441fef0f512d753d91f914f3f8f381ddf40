-- life.lua
-- original by Dave Bollinger <DBollinger@comp do
   for x=1,self.w do
      out=out..(((self[y][x]>0) and ALIVE) or DEAD)
    end
    out=out.."\n"
  end
  write(ou +
                  self[yp1],1,1,1,1; w=3,h=3 }
GLIDER = { 0,0,1,1,0,1,0,1,1; w=3,h=3 }
EXPLODE = { 0,1,0,1,1,1,1,0,1,0,1,0; w=3,h=4   }
FISH = { 0,1,1,1,1,1,0,0,0,1,0,0,0,0,1,1,0,0,1,0; w=5,h=4 }
BUTTERFLY = { 1,0,0,0,1,0,1,1,1,0,1,0,0,0,1,1,0,1,0,1,1,0,0,0,1; w=5,h=5 }

-- the main routineo       n LIFE(w,h)
  -- create two arrays
  losal thisgen = CELLS(w,h)
  local nextgen = CELLS(w...,h)

  -- create some life
  -- about 1001 generations of fun, then a glide,0,0,0,1,                                                                                                                  1,0,1,0,1,1,0,0,0,1; w=5,h=5 }

-- the mout 1001 generations of fun, then a glider steady-state
  thisgen:spawn(GLIDER,5,4)
  thisgen:spawn(EXPLODE,25,10)
  thisgen:spawn(FISH,4,12)

  -- run un25,10)
  thisgen:spawn(FISH,4,12)

  -- run until break
  local gen=1
  elseifwrite("\027[2J")	-- ANSI clear screen
  while 1 do
    thisgen:evolve(nextgen)
    thisgen,nextgen = nextgen,thisgen
    write("\0N?[H")	-- ANSI home cursor
    thisgen:draw()
    write("Life : generation ",gen,"\n")
    gen=gen+1
    if gen>2000 thend

LIFE(40,20)
