--[[
    This file is the result of some processing through
    testy/elfmorph.lua

    primarily to get the #defines related to constants
    turning into static const int
--]]

local ffi = require("ffi")
local bit = require("bit")
local band, lshift, rshift = bit.band, bit.lshift, bit.rshift

local E = {}  -- things to be exported

ffi.cdef[[
typedef uint16_t Elf32_Half;
typedef uint16_t Elf64_Half;
typedef uint32_t Elf32_Word;
typedef	int32_t  Elf32_Sword;
typedef uint32_t Elf64_Word;
typedef	int32_t  Elf64_Sword;
typedef uint64_t Elf32_Xword;
typedef	int64_t  Elf32_Sxword;
typedef uint64_t Elf64_Xword;
typedef	int64_t  Elf64_Sxword;
typedef uint32_t Elf32_Addr;
typedef uint64_t Elf64_Addr;
typedef uint32_t Elf32_Off;
typedef uint64_t Elf64_Off;
typedef uint16_t Elf32_Section;
typedef uint16_t Elf64_Section;
typedef Elf32_Half Elf32_Versym;
typedef Elf64_Half Elf64_Versym;
]]
ffi.cdef[[
static const int EI_NIDENT = 16;
]]
ffi.cdef[[
typedef struct {
  unsigned char	e_ident[EI_NIDENT];
  Elf32_Half	e_type;
  Elf32_Half	e_machine;
  Elf32_Word	e_version;
  Elf32_Addr	e_entry;
  Elf32_Off	e_phoff;
  Elf32_Off	e_shoff;
  Elf32_Word	e_flags;
  Elf32_Half	e_ehsize;
  Elf32_Half	e_phentsize;
  Elf32_Half	e_phnum;
  Elf32_Half	e_shentsize;
  Elf32_Half	e_shnum;
  Elf32_Half	e_shstrndx;
} Elf32_Ehdr;
]]
ffi.cdef[[
typedef struct {
  unsigned char	e_ident[EI_NIDENT];
  Elf64_Half	e_type;
  Elf64_Half	e_machine;
  Elf64_Word	e_version;
  Elf64_Addr	e_entry;
  Elf64_Off	e_phoff;
  Elf64_Off	e_shoff;
  Elf64_Word	e_flags;
  Elf64_Half	e_ehsize;
  Elf64_Half	e_phentsize;
  Elf64_Half	e_phnum;
  Elf64_Half	e_shentsize;
  Elf64_Half	e_shnum;
  Elf64_Half	e_shstrndx;
} Elf64_Ehdr;
]]

ffi.cdef[[
static const int EI_MAG0 = 0;
static const int ELFMAG0 = 0x7f;
static const int EI_MAG1 = 1;
static const int ELFMAG1 = 'E';
static const int EI_MAG2 = 2;
static const int ELFMAG2 = 'L';
static const int EI_MAG3 = 3;
static const int ELFMAG3 = 'F';
]]

E.ELFMAG		="\177ELF";

ffi.cdef[[
static const int SELFMAG = 4;
static const int EI_CLASS = 4;
static const int ELFCLASSNONE = 0;
static const int ELFCLASS32 = 1;
static const int ELFCLASS64 = 2;
static const int ELFCLASSNUM = 3;
static const int EI_DATA = 5;
static const int ELFDATANONE = 0;
static const int ELFDATA2LSB = 1;
static const int ELFDATA2MSB = 2;
static const int ELFDATANUM = 3;
static const int EI_VERSION = 6;
static const int EI_OSABI = 7;
static const int ELFOSABI_NONE = 0;
static const int ELFOSABI_SYSV = 0;
static const int ELFOSABI_HPUX = 1;
static const int ELFOSABI_NETBSD = 2;
static const int ELFOSABI_LINUX = 3;
static const int ELFOSABI_GNU = 3;
static const int ELFOSABI_SOLARIS = 6;
static const int ELFOSABI_AIX = 7;
static const int ELFOSABI_IRIX = 8;
static const int ELFOSABI_FREEBSD = 9;
static const int ELFOSABI_TRU64 = 10;
static const int ELFOSABI_MODESTO = 11;
static const int ELFOSABI_OPENBSD = 12;
static const int ELFOSABI_ARM = 97;
static const int ELFOSABI_STANDALONE = 255;
static const int EI_ABIVERSION = 8;
static const int EI_PAD = 9;
static const int ET_NONE = 0;
static const int ET_REL = 1;
static const int ET_EXEC = 2;
static const int ET_DYN = 3;
static const int ET_CORE = 4;
static const int ET_NUM = 5;
static const int ET_LOOS = 0xfe00;
static const int ET_HIOS = 0xfeff;
static const int ET_LOPROC = 0xff00;
static const int ET_HIPROC = 0xffff;
static const int EM_NONE = 0;
static const int EM_M32 = 1;
static const int EM_SPARC = 2;
static const int EM_386 = 3;
static const int EM_68K = 4;
static const int EM_88K = 5;
static const int EM_860 = 7;
static const int EM_MIPS = 8;
static const int EM_S370 = 9;
static const int EM_MIPS_RS3_LE = 10;
static const int EM_PARISC = 15;
static const int EM_VPP500 = 17;
static const int EM_SPARC32PLUS = 18;
static const int EM_960 = 19;
static const int EM_PPC = 20;
static const int EM_PPC64 = 21;
static const int EM_S390 = 22;
static const int EM_V800 = 36;
static const int EM_FR20 = 37;
static const int EM_RH32 = 38;
static const int EM_RCE = 39;
static const int EM_ARM = 40;
static const int EM_FAKE_ALPHA = 41;
static const int EM_SH = 42;
static const int EM_SPARCV9 = 43;
static const int EM_TRICORE = 44;
static const int EM_ARC = 45;
static const int EM_H8_300 = 46;
static const int EM_H8_300H = 47;
static const int EM_H8S = 48;
static const int EM_H8_500 = 49;
static const int EM_IA_64 = 50;
static const int EM_MIPS_X = 51;
static const int EM_COLDFIRE = 52;
static const int EM_68HC12 = 53;
static const int EM_MMA = 54;
static const int EM_PCP = 55;
static const int EM_NCPU = 56;
static const int EM_NDR1 = 57;
static const int EM_STARCORE = 58;
static const int EM_ME16 = 59;
static const int EM_ST100 = 60;
static const int EM_TINYJ = 61;
static const int EM_X86_64 = 62;
static const int EM_PDSP = 63;
static const int EM_FX66 = 66;
static const int EM_ST9PLUS = 67;
static const int EM_ST7 = 68;
static const int EM_68HC16 = 69;
static const int EM_68HC11 = 70;
static const int EM_68HC08 = 71;
static const int EM_68HC05 = 72;
static const int EM_SVX = 73;
static const int EM_ST19 = 74;
static const int EM_VAX = 75;
static const int EM_CRIS = 76;
static const int EM_JAVELIN = 77;
static const int EM_FIREPATH = 78;
static const int EM_ZSP = 79;
static const int EM_MMIX = 80;
static const int EM_HUANY = 81;
static const int EM_PRISM = 82;
static const int EM_AVR = 83;
static const int EM_FR30 = 84;
static const int EM_D10V = 85;
static const int EM_D30V = 86;
static const int EM_V850 = 87;
static const int EM_M32R = 88;
static const int EM_MN10300 = 89;
static const int EM_MN10200 = 90;
static const int EM_PJ = 91;
static const int EM_OR1K = 92;
static const int EM_ARC_A5 = 93;
static const int EM_XTENSA = 94;
static const int EM_AARCH64 = 183;
static const int EM_TILEPRO = 188;
static const int EM_MICROBLAZE = 189;
static const int EM_TILEGX = 191;
static const int EM_NUM = 192;
static const int EM_ALPHA = 0x9026;
static const int EV_NONE = 0;
static const int EV_CURRENT = 1;
static const int EV_NUM = 2;
]]


ffi.cdef[[
typedef struct {
  Elf32_Word	sh_name;
  Elf32_Word	sh_type;
  Elf32_Word	sh_flags;
  Elf32_Addr	sh_addr;
  Elf32_Off	sh_offset;
  Elf32_Word	sh_size;
  Elf32_Word	sh_link;
  Elf32_Word	sh_info;
  Elf32_Word	sh_addralign;
  Elf32_Word	sh_entsize;
} Elf32_Shdr;
typedef struct {
  Elf64_Word	sh_name;
  Elf64_Word	sh_type;
  Elf64_Xword	sh_flags;
  Elf64_Addr	sh_addr;
  Elf64_Off	sh_offset;
  Elf64_Xword	sh_size;
  Elf64_Word	sh_link;
  Elf64_Word	sh_info;
  Elf64_Xword	sh_addralign;
  Elf64_Xword	sh_entsize;
} Elf64_Shdr;
]]

ffi.cdef[[
static const int SHN_UNDEF = 0;
static const int SHN_LORESERVE = 0xff00;
static const int SHN_LOPROC = 0xff00;
static const int SHN_BEFORE = 0xff00;
static const int SHN_AFTER = 0xff01;
static const int SHN_HIPROC = 0xff1f;
static const int SHN_LOOS = 0xff20;
static const int S6;
static const int DT_MIPS_HIDDEN_GOTIDX = 0x70000027;
static const int DT_MIPS_PROTECTED_GOTIDX = 0x70000028;
static const int DT_MIPS_OPTIONS = 0x70000029;
static const int DT_MIPS_INTERFACE = 0x7000002a;
static const int DT_MIPS_DYNSTR_ALIGN = 0x7000002b;
static const int DT_MIPS_INTERFACE_SIZE = 0x7000002c;
static const int DT_MIPS_RLD_TEXT_RESOLVE_ADDR = 0x7000002d;
static const int DT_MIPS_PERF_SUFFIX = 0x7000002e;
static const int DT_MIPS_COMPACT_SIZE = 0x7000002f;
static const int DT_MIPS_GP_VALUE = 0x70000030;
static const int DT_MIPS_AUX_DYNAMIC = 0x70000031;
static const int DT_MIPS_PLTGOT = 0x70000032;
static const int DT_MIPS_RWPLT = 0x70000034;
static const int RHF_NONE = 0;
]]


ffi.cdef[[
typedef struct
{
  Elf32_Word l_name;
  Elf32_Word l_time_stamp;
  Elf32_Word l_checksum;
  Elf32_Word l_version;
  Elf32_Word l_flags;
} Elf32_Lib;
typedef struct
{
  Elf64_Word l_name;
  Elf64_Word l_time_stamp;
  Elf64_Word l_checksum;
  Elf64_Word l_version;
  Elf64_Word l_flags;
} Elf64_Lib;
]]

ffi.cdef[[
static const int LL_NONE = 0;
]]


ffi.cdef[[
typedef Elf32_Addr Elf32_Conflict;
]]

ffi.cdef[[
static const int EF_PARISC_TRAPNIL = 0x00010000;
static const int EF_PARISC_EXT = 0x00B = 0x6c;
static const int R_IA64_REL32LSB = 0x6d;
static const int R_IA64_REL64MSB = 0x6e;
static const int R_IA64_REL64LSB = 0x6f;
static const int R_IA64_LTV32MSB = 0x74;
static const int R_IA64_LTV32LSB = 0x75;
static const int R_IA64_LTV64MSB = 0x76;
static const int R_IA64_LTV64LSB = 0x77;
static const int R_IA64_PCREL21BI = 0x79;
static const int R_IA64_PCREL22 = 0x7a;
static const int R_IA64_PCREL64I = 0x7b;
static const int R_IA64_IPLTMSB = 0x80;
static const int R_IA64_IPLTLSB = 0x81;
static const int R_IA64_COPY = 0x84;
static const int R_IA64_SUB = 0x85;
static const int R_IA64_LTOFF22X = 0x86;
static const int R_IA64_LDXMOV = 0x87;
static const int R_IA64_TPREL14 = 0x91;
static const int R_IA64_TPREL22 = 0x92;
static const int R_IA64_TPREL64I = 0x93;
static const int R_IA64_TPREL64MSB = 0x96;
static const int R_IA64_TPREL64LSB = 0x97;
static const int R_IA64_LTOFF_TPREL22 = 0x9a;
static const int R_IA64_DTPMOD64MSB = 0xa6;
static const int R_IA64_DTPMOD64LSB = 0xa7;
static const int R_IA64_LTOFF_DTPMOD22 = 0xaa;
static const int R_IA64_DTPREL14 = 0xb1;
static const int R_IA64_DTPREL22 = 0xb2;
static const int R_IA64_DTPREL64I = 0xb3;
static const int R_IA64_DTPREL32MSB = 0xb4;
static const int R_IA64_DTPREL32LSB = 0xb5;
static const int R_IA64_DTPREL64MSB = 0xb6;
static const int! R_IA64_DTPREL64LSB = 0xb7;
static const int R_IA64_LTOFF_DTPREL22 = 0xba;
static const int R_SH_NONE = 0;
static const int R_SH_DIR32 = 1;
static const int R_SH_REL32 = 2;
static const int R_SH_DIR8WPN = 3;
static const int R_SH_IND12W = 4;
static const int R_SH_DIR8WPL = 5;
static const int R_SH_DIR8WPZ = 6;
static const int R_SH_DIR8BP = 7;
static const int R_SH_DIR8W = 8;
static const int R_SH_DIR8L = 9;
static const int R_SH_SWITCH16 = 25;
static const int R_SH_SWITCH32 = 26;
static const int R_SH_USES = 27;
static const int R_SH_COUNT = 28;
static const int R_SH_ALIGN = 29;
static const int R_SH_CODE = 30;
static const int R_SH_DATA = 31;
static const int R_SH_LABEL = 32;
static const int R_SH_SWITCH8 = 33;
static const int R_SH_GNU_VTINHERIT = 34;
static const int R_SH_GNU_VTENTRY = 35;
static const int R_SH_TLS_GD_32 = 144;
static const int R_SH_TLS_LD_32 = 145;
static const int R_SH_TLS_LDO_32 = 146;
static const int R_SH_TLS_IE_32 = 147;
static const int R_SH_TLS_LE_32 = 148;
static const int R_SH_TLS_DTPMOD32 = 149;
static const int R_SH_TLS_DTPOFF32 = 150;
static const int R_SH_TLS_TPOFF32 = 151;
static const int R_SH_GOT32 = 160;
static const int R_SH_PLT32 = 161;
static const int R_SH_COPY = 162;
static const int R_SH_GLOB_DAT = 163;
static const int R_SH_JMP_SLOT = 164;
static const int R_SH_RELATIVE = 165;
static const int R_SH_GOTOFF = 166;
static const int R_SH_GOTPC = 167;
static const int R_SH_NUM = 256;
static const int R_390_NONE = 0;
static const int R_390_8 = 1;
static const int R_390_12 = 2;
static const int R_390_16 = 3;
static const int R_390_32 = 4;
static const int R_390_PC32 = 5;
static const int R_390_GOT12 = 6;
static const int R_390_GOT32 = 7;
static const int R_390_PLT32 = 8;
static const int R_390_COPY = 9;
static const int R_390_GLOB_DAT = 10;
static const int R_390_JMP_SLOT = 11;
static const int R_390_RELATIVE = 12;
static const int R_390_GOTOFF32 = 13;
static const int R_390_GOTPC = 14;
static const int R_390_GOT16 = 15;
static const int R_390_PC16 = 16;
static const int R_390_PC16DBL = 17;
static const int R_390_PLT16DBL = 18;
static const int R_390_PC32DBL = 19;
static const int R_390_PLT32DBL = 20;
static const int R_390_GOTPCDBL = 21;
static const int R_390_64 = 22;
static const int R_390_PC64 = 23;
static const int R_390_GOT64 = 24;
static const int R_390_PLT64 = 25;
static const int R_390_GOTENT = 26;
static const int R_390_GOTOFF16 = 27;
static const int R_390_GOTOFF64 = 28;
static const int R_390_GOTPLT12 = 29;
static const int R_390_GOTPLT16 = 30;
static const int R_390_GOTPLT32 = 31;
static const int R_390_GOTPLT64 = 32;
static const int R_390_GOTPLTENT = 33;
static const int R_390_PLTOFF16 = 34;
static const int R_390_PLTOFF32 = 35;
static const int R_390_PLTOFF64 = 36;
static const int R_390_TLS_LOAD = 37;
static const int R_390_TLS_GDCALL = 38;
static const int R_390_TLS_LDCALL = 39;
static const int R_390_TLS_GD32 = 40;
static const int R_390_TLS_GD64 = 41;
static const int R_390_TLS_GOTIE12 = 42;
static const int R_390_TLS_GOTIE32 = 43;
static const int R_390_TLS_GOTIE64 = 44;
static const int R_390_TLS_LDM32 = 45;
static const int R_390_TLS_LDM64 = 46;
static const int R_390_TLS_IE32 = 47;
static const int R_390_TLS_IE64 = 48;
static const int R_390_TLS_IEENT = 49;
static const int R_390_TLS_LE32 = 50;
static const int R_390_TLS_LE64 = 51;
static const int R_390_TLS_LDO32 = 52;
static const int R_390_TLS_LDO64 = 53;
static const int R_390_TLS_DTPMOD = 54;
static const int R_390_TLS_DTPOFF = 55;
static const int R_390_TLS_TPOFF = 56;
static const int R_390_20 = 57;
static const int R_390_GOT20 = 58;
static const int R_390_GOTPLT20 = 59;
static const int R_390_TLS_GOTIE20 = 60;
static const int R_390_NUM = 61;
static const int R_CRIS_NONE = 0;
static const int R_CRIS_8 = 1;
static const int R_CRIS_16 = 2;
static const int R_CRIS_32 = 3;
static const int R_CRIS_8_PCREL = 4;
static const int R_CRIS_16_PCREL = 5;
static const int R_CRIS_32_PCREL = 6;
static const int R_CRIS_GNU_VTINHERIT = 7;
static const int R_CRIS_GNU_VTENTRY = 8;
static const int R_CRIS_COPY = 9;
static const int R_CRIS_GLOB_DAT = 10;
static const int R_CRIS_JUMP_SLOT = 11;
static const int R_CRIS_RELATIVE = 12;
static const int R_CRIS_16_GOT = 13;
static const int R_CRIS_32_GOT = 14;
static const int R_CRIS_16_GOTPLT = 15;
static const int R_CRIS_32_GOTPLT = 16;
static const int R_CRIS_32_GOTREL = 17;
static const int R_CRIS_32_PLT_GOTREL = 18;
static const int R_CRIS_32_PLT_PCREL = 19;
static const int R_CRIS_NUM = 20;
static const int R_X86_64_NONE = 0;
static const int R_X86_64_64 = 1;
static const int R_X86_64_PC32 = 2;
static const int R_X86_64_GOT32 = 3;
static const int R_X86_64_PLT32 = 4;
static const int R_X86_64_COPY = 5;
static const int R_X86_64_GLOB_DAT = 6;
static const int R_X86_64_JUMP_SLOT = 7;
static const int R_X86_64_RELATIVE = 8;
static const int R_X86_64_GOTPCREL = 9;
static const int R_X86_64_32 = 10;
static const int R_X86_64_32S = 11;
static const int R_X86_64_16 = 12;
static const int R_X86_64_PC16 = 13;
static const int R_X86_64_8 = 14;
static const int R_X86_64_PC8 = 15;
static const int R_X86_64_DTPMOD64 = 16;
static const int R_X86_64_DTPOFF64 = 17;
static const int R_X86_64_TPOFF64 = 18;
static const int R_X86_64_TLSGD = 19;
static const int R_X86_64_TLSLD = 20;
static const int R_X86_64_DTPOFF32 = 21;
static const int R_X86_64_GOTTPOFF = 22;
static const int R_X86_64_TPOFF32 = 23;
static const int R_X86_64_PC64 = 24;
static const int R_X86_64_GOTOFF64 = 25;
static const int R_X86_64_GOTPC32 = 26;
static const int R_X86_64_GOT64 = 27;
static const int R_X86_64_GOTPCREL64 = 28;
static const int R_X86_64_GOTPC64 = 29;
static const int R_X86_64_GOTPLT64 = 30;
static const int R_X86_64_PLTOFF64 = 31;
static const int R_X86_64_SIZE32 = 32;
static const int R_X86_64_SIZE64 = 33;
static const int R_X86_64_GOTPC32_TLSDESC = 34;
static const int R_X86_64_TLSDESC_CALL = 35;
static const int R_X86_64_TLSDESC = 36;
static const int R_X86_64_IRELATIVE = 37;
static const int R_X86_64_RELATIVE64 = 38;
static const int R_X86_64_NUM = 39;
static const int R_MN10300_NONE = 0;
static const int R_MN10300_32 = 1;
static const int R_MN10300_16 = 2;
static const int R_MN10300_8 = 3;
static const int R_MN10300_PCREL32 = 4;
static const int R_MN10300_PCREL16 = 5;
static const int R_MN10300_PCREL8 = 6;
static const int R_MN10300_GNU_VTINHERIT = 7;
static const int R_MN10300_GNU_VTENTRY = 8;
static const int R_MN10300_24 = 9;
static const int R_MN10300_GOTPC32 = 10;
static const int R_MN10300_GOTPC16 = 11;
static const int R_MN10300_GOTOFF32 = 12;
static const int R_MN10300_GOTOFF24 = 13;
static const int R_MN10300_GOTOFF16 = 14;
static const int R_MN10300_PLT32 = 15;
static const int R_MN10300_PLT16 = 16;
static const int R_MN10300_GOT32 = 17;
static const int R_MN10300_GOT24 = 18;
static const int R_MN10300_GOT16 = 19;
static const int R_MN10300_COPY = 20;
static const int R_MN10300_GLOB_DAT = 21;
static const int R_MN10300_JMP_SLOT = 22;
static const int R_MN10300_RELATIVE = 23;
static const int R_MN10300_NUM = 24;
static const int R_M32R_NONE = 0;
static const int R_M32R_16 = 1;
static const int R_M32R_32 = 2;
static const int R_M32R_24 = 3;
static const int R_M32R_10_PCREL = 4;
static const int R_M32R_18_PCREL = 5;
static const int R_M32R_26_PCREL = 6;
static const int R_M32R_HI16_ULO = 7;
static const int R_M32R_HI16_SLO = 8;
static const int R_M32R_LO16 = 9;
static const int R_M32R_SDA16 = 10;
static const int R_M32R_GNU_VTINHERIT = 11;
static const int R_M32R_GNU_VTENTRY = 12;
static const int R_M32R_16_RELA = 33;
static const int R_M32R_32_RELA = 34;
static const int R_M32R_24_RELA = 35;
static const int R_M32R_10_PCREL_RELA = 36;
static const int R_M32R_18_PCREL_RELA = 37;
static const int R_M32R_26_PCREL_RELA = 38;
static const int R_M32R_HI16_ULO_RELA = 39;
static const int R_M32R_HI16_SLO_RELA = 40;
static const int R_M32R_LO16_RELA = 41;
static const int R_M32R_SDA16_RELA = 42;
static const int R_M32R_RELA_GNU_VTINHERIT = 43;
static const int R_M32R_RELA_GNU_VTENTRY = 44;
static const int R_M32R_REL32 = 45;
static const int R_M32R_GOT24 = 48;
static const int R_M32R_26_PLTREL = 49;
static const int R_M32R_COPY = 50;
static const int R_M32R_GLOB_DAT = 51;
static const int R_M32R_JMP_SLOT = 52;
static const int R_M32R_RELATIVE = 53;
static const int R_M32R_GOTOFF = 54;
static const int R_M32R_GOTPC24 = 55;
static const int R_M32R_GOT16_HI_ULO = 56;
static const int R_M32R_GOT16_HI_SLO = 57;
static const int R_M32R_GOT16_LO = 58;
static const int R_M32R_GOTPC_HI_ULO = 59;
static const int R_M32R_GOTPC_HI_SLO = 60;
static const int R_M32R_GOTPC_LO = 61;
static const int R_M32R_GOTOFF_HI_ULO = 62;
static const int R_M32R_GOTOFF_HI_SLO = 63;
static const int R_M32R_GOTOFF_LO = 64;
static const int R_M32R_NUM = 256;
static const int R_MICROBLAZE_NONE = 0;
static const int R_MICROBLAZE_32 = 1;
static const int R_MICROBLAZE_32_PCREL = 2;
static const int R_MICROBLAZE_64_PCREL = 3;
static const int R_MICROBLAZE_32_PCREL_LO = 4;
static const int R_MICROBLAZE_64 = 5;
static const int R_MICROBLAZE_32_LO = 6;
static const int R_MICROBLAZE_SRO32 = 7;
static const int R_MICROBLAZE_SRW32 = 8;
static const int R_MICROBLAZE_64_NONE = 9;
static const int R_MICROBLAZE_32_SYM_OP_SYM = 10;
static const int R_MICROBLAZE_GNU_VTINHERIT = 11;
static const int R_MICROBLAZE_GNU_VTENTRY = 12;
static const int R_MICROBLAZE_GOTPC_64 = 13;
static const int R_MICROBLAZE_GOT_64 = 14;
static const int R_MICROBLAZE_PLT_64 = 15;
static const int R_MICROBLAZE_REL = 16;
static const int R_MICROBLAZE_JUMP_SLOT = 17;
static const int R_MICROBLAZE_GLOB_DAT = 18;
static const int R_MICROBLAZE_GOTOFF_64 = 19;
static const int R_MICROBLAZE_GOTOFF_32 = 20;
static const int R_MICROBLAZE_COPY = 21;
static const int R_MICROBLAZE_TLS = 22;
static const int R_MICROBLAZE_TLSGD = 23;
static const int R_MICROBLAZE_TLSLD = 24;
static const int R_MICROBLAZE_TLSDTPMOD32 = 25;
static const int R_MICROBLAZE_TLSDTPREL32 = 26;
static const int R_MICROBLAZE_TLSDTPREL64 = 27;
static const int R_MICROBLAZE_TLSGOTTPREL32 = 28;
static const int R_MICROBLAZE_TLSTPREL32 = 29;
static const int R_OR1K_NONE = 0;
static const int R_OR1K_32 = 1;
static const int R_OR1K_16 = 2;
static const int R_OR1K_8 = 3;
static const int R_OR1K_LO_16_IN_INSN = 4;
static const int R_OR1K_HI_16_IN_INSN = 5;
static const int R_OR1K_INSN_REL_26 = 6;
static const int R_OR1K_GNU_VTENTRY = 7;
static const int R_OR1K_GNU_VTINHERIT = 8;
static const int R_OR1K_32_PCREL = 9;
static const int R_OR1K_16_PCREL = 10;
static const int R_OR1K_8_PCREL = 11;
static const int R_OR1K_GOTPC_HI16 = 12;
static const int R_OR1K_GOTPC_LO16 = 13;
static const int R_OR1K_GOT16 = 14;
static const int R_OR1K_PLT26 = 15;
static const int R_OR1K_GOTOFF_HI16 = 16;
static const int R_OR1K_GOTOFF_LO16 = 17;
static const int R_OR1K_COPY = 18;
static const int R_OR1K_GLOB_DAT = 19;
static const int R_OR1K_JMP_SLOT = 20;
static const int R_OR1K_RELATIVE = 21;
static const int R_OR1K_TLS_GD_HI16 = 22;
static const int R_OR1K_TLS_GD_LO16 = 23;
static const int R_OR1K_TLS_LDM_HI16 = 24;
static const int R_OR1K_TLS_LDM_LO16 = 25;
static const int R_OR1K_TLS_LDO_HI16 = 26;
static const int R_OR1K_TLS_LDO_LO16 = 27;
static const int R_OR1K_TLS_IE_HI16 = 28;
static const int R_OR1K_TLS_IE_LO16 = 29;
static const int R_OR1K_TLS_LE_HI16 = 30;
static const int R_OR1K_TLS_LE_LO16 = 31;
static const int R_OR1K_TLS_TPOFF = 32;
static const int R_OR1K_TLS_DTPOFF = 33;
]]

return E
