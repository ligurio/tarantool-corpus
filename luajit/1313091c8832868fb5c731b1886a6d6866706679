--[[
    This file is the result of some processing through
    testy/elfmorph.lua

    primarily to get the #defines related to constants
    turning into static const int
--]]

local ffi = require("ffi")
local bit = require("bit")
local band, lshift, rshift = bit.band, bit.lshift, bit.rshift

local E = {}  -- things to be exported

ffi.cdef[[
typedef uint16_t Elf32_Half;
typedef uint16_t Elf64_Half;
typedef uint32_t Elf32_Word;
typedef	int32_t  Elf32_Sword;
typedef uint32_t Elf64_Word;
typedef	int32_t  Elf64_Sword;
typedef uint64_t Elf32_Xword;
typedef	int64_t  Elf32_Sxword;
typedef uint64_t Elf64_Xword;
typedef	int64_t  Elf64_Sxword;
typedef uint32_t Elf32_Addr;
typedef uint64_t Elf64_Addr;
typedef uint32_t Elf32_Off;
typedef uint64_t Elf64_Off;
typedef uint16_t Elf32_Section;
typedef uint16_t Elf64_Section;
typedef Elf32_Half Elf32_Versym;
typedef Elf64_Half Elf64_Versym;
]]
ffi.cdef[[
static const int EI_NIDENT = 16;
]]
ffi.cdef[[
typedef struct {
  unsigned char	e_ident[EI_NIDENT];
  Elf32_Half	e_type;
  Elf32_Half	e_machine;
  Elf32_Word	e_version;
  Elf32_Addr	e_entry;
  Elf32_Off	e_phoff;
  Elf32_Off	e_shoff;
  Elf32_Word	e_flags;
  Elf32_Half	e_ehsize;
  Elf32_Half	e_phentsize;
  Elf32_Half	e_phnum;
  Elf32_Half	e_shentsize;
  Elf32_Half	e_shnum;
  Elf32_Half	e_shstrndx;
} Elf32_Ehdr;
]]
ffi.cdef[[
typedef struct {
  unsigned char	e_ident[EI_NIDENT];
  Elf64_Half	e_type;
  Elf64_Half	e_machine;
  Elf64_Word	e_version;
  Elf64_Addr	e_entry;
  Elf64_Off	e_phoff;
  Elf64_Off	e_shoff;
  Elf64_Word	e_flags;
  Elf64_Half	e_ehsize;
  Elf64_Half	e_phentsize;
  Elf64_Half	e_phnum;
  Elf64_Half	e_shentsize;
  Elf64_Half	e_shnum;
  Elf64_Half	e_shstrndx;
} Elf64_Ehdr;
]]

ffi.cdef[[
static const int EI_MAG0 = 0;
static const int ELFMAG0 = 0x7f;
static const int EI_MAG1 = 1;
static const int ELFMAG1 = 'E';
static const int EI_MAG2 = 2;
static const int ELFMAG2 = 'L';
static const int EI_MAG3 = 3;
static const int ELFMAG3 = 'F';
]]

E.ELFMAG		="\177ELF";

ffi.cdef[[
static const int SELFMAG = 4;
static const int EI_CLASS = 4;
static const int ELFCLASSNONE = 0;
static const int ELFCLASS32 = 1;
static const int ELFCLASS64 = 2;
static const int ELFCLASSNUM = 3;
static const int EI_DATA = 5;
static const int ELFDATANONE = 0;
static const int ELFDATA2LSB = 1;
static const int ELFDATA2MSB = 2;
static const int ELFDATANUM = 3;
static const int EI_VERSION = 6;
static const int EI_OSABI = 7;
static const int ELFOSABI_NONE = 0;
static const int ELFOSABI_SYSV = 0;
static const int ELFOSABI_HPUX = 1;
static const int ELFOSABI_NETBSD = 2;
static const int ELFOSABI_LINUX = 3;
static const int ELFOSABI_GNU = 3;
static const int ELFOSABI_SOLARIS = 6;
static const int ELFOSABI_AIX = 7;
static const int ELFOSABI_IRIX = 8;
static const int ELFOSABI_FREEBSD = 9;
static const int ELFOSABI_TRU64 = 10;
static const int ELFOSABI_MODESTO = 11;
static const int ELFOSABI_OPENBSD = 12;
static const int ELFOSABI_ARM = 97;
static const int ELFOSABI_STANDALONE = 255;
static const int EI_ABIVERSION = 8;
static const int EI_PAD = 9;
static const int ET_NONE = 0;
static const int ET_REL = 1;
static const int ET_EXEC = 2;
static const int ET_DYN = 3;
static const int ET_CORE = 4;
static const int ET_NUM = 5;
static const int ET_LOOS = 0xfe00;
static const int ET_HIOS = 0xfeff;
static const int ET_LOPROC = 0xff00;
static const int ET_HIPROC = 0xffff;
static const int EM_NONE = 0;
static const int EM_M32 = 1;
static const int EM_SPARC = 2;
static const int EM_386 = 3;
static const int EM_68K = 4;
static const int EM_88K = 5;
static const int EM_860 = 7;
static const int EM_MIPS = 8;
static const int EM_S370 = 9;
static const int EM_MIPS_RS3_LE = 10;
static const int EM_PARISC = 15;
static const int EM_VPP500 = 17;
static const int EM_SPARC32PLUS = 18;
static const int EM_960 = 19;
static const int EM_PPC = 20;
static const int EM_PPC64 = 21;
static const int EM_S390 = 22;
static const int EM_V800 = 36;
static const int EM_FR20 = 37;
static const int EM_RH32 = 38;
static const int EM_RCE = 39;
static const int EM_ARM = 40;
static const int EM_FAKE_ALPHA = 41;
static const int EM_SH = 42;
static const int EM_SPARCV9 = 43;
static const int EM_TRICORE = 44;
static const int EM_ARC = 45;
static const int EM_H8_300 = 46;
static const int EM_H8_300H = 47;
static const int EM_H8S = 48;
static const int EM_H8_500 = 49;
static const int EM_IA_64 = 50;
static const int EM_MIPS_X = 51;
static const int EM_COLDFIRE = 52;
static const int EM_68HC12 = 53<
static const int EM_MMA = 54;
static const int EM_PCP = 55;
static const int EM_NCPU = 56;
static const int EM_NDR1 = 57;
static const int EM_STARCORE = 58;
static const int EM_ME16 = 59;
static const int EM_ST100 = 60;
static const int EM_TINYJ = 61;
static const int EM_X86_64 = 62;
static const int EM_PDSP = 63;
static const int EM_FX66 = 66;
static const int EM_ST9PLUS = 67;
static const int EM_ST7 = 68;
static const int EM_68HC16 = 69;
static const int EM_68HC11 = 70;
static const int EM_68HC08 = 71;
static const int EM_68HC05 = 72;
static const int EM_SVX = 73;
static const int EM_ST19 = 74;
static const int EM_VAX = 75;
static const int EM_CRIS = 76;
static const int EM_JAVELIN = 77;
static const int EM_FIREPATH = 78;
static const int EM_ZSP = 79;
static const int EM_MMIX = 80;
static const int EM_HUANY = 81;
static const int EM_PRISM = 82;
static const int EM_AVR = 83;
static const int EM_FR30 = 84;
static const int EM_D10V = 85;
static const int EM_D30V = 86;
static const int EM_V850 = 87;
static const int EM_M32R = 88;
static const int EM_MN10300 = 89;
static const int EM_MN10200 = 90;
static const int EM_PJ = 91;
static const int EM_OR1K = 92;
static const int EM_ARC_A5 = 93;
static const int EM_XTENSA = 94;
static const int EM_AARCH64 = 183;
static const int EM_TILEPRO = 188;
static const int EM_MICROBLAZE = 189;
static const int EM_TILEGX = 191;
static const int EM_NUM = 192;
static const int EM_ALPHA = 0x9026;
static const int EV_NONE = 0;
static const int EV_CURRENT = 1;
static const int EV_NUM = 2;
]]


ffi.cdef[[
typedef struct {
  Elf32_Word	sh_name;
  Elf32_Word	sh_type;
  Elf32_Word	sh_flags;
  Elf32_Addr	sh_addr;
  Elf32_Off	sh_offset;
  Elf32_Word	sh_size;
  Elf32_Word	sh_link;
  Elf32_Word	sh_info;
  Elf32_Word	sh_addralign;
  Elf32_Word	sh_entsize;
} Elf32_Shdr;
typedef struct {
  Elf64_Word	sh_name;
  Elf64_Word	sh_type;
  Elf64_Xword	sh_flags;
  Elf64_Addr	sh_addr;
  Elf64_Off	sh_offset;
  Elf64_Xword	sh_size;
  Elf64_Word	sh_link;
  Elf64_Word	sh_info;
  Elf64_Xword	sh_addralign;
  Elf64_Xword	sh_entsize;
} Elf64_Shdr;
]]

ffi.cdef[[
static const int SHN_UNDEF = 0;
static const int SHN_LORESERVE = 0xff00;
static const int SHN_LOPROC = 0xff00;
static const int SHN_BEFORE = 0xff00;
static const int SHN_AFTER = 0xff01;
static const int SHN_HIPROC = 0xff1f;
static const int SHN_LOOS = 0xff20;
static const int SHN_HIOS = 0xff3f;
static const int SHN_ABS = 0xfff1;
static const int SHN_COMMON = 0xfff2;
static const int SHN_XINDEX = 0xffff;
static const int SHN_HIRESERVE = 0xffff;
static const int SHT_NULL = 0;
static const int SHT_PROGBITS = 1;
static const int SHT_SYMTAB = 2;
static const int SHT_STRTAB = 3;
static const int SHT_RELA = 4;
static const int SHT_HASH = 5;
static const int SHT_DYNAMIC = 6;
static const int SHT_NOTE = 7;
static const int SHT_NOBITS = 8;
static const int SHT_REL = 9;
static const int SHT_SHLIB = 10;
static const int SHT_DYNSYM = 11;
static const int SHT_INIT_ARRAY = 14;
static const int SHT_FINI_ARRAY = 15;
static const int SHT_PREINIT_ARRAY = 16;
static const int SHT_GROUP = 17;
static const int SHT_SYMTAB_SHNDX = 18;
static const int SHT_NUM = 19;
static const int SHT_LOOS = 0x60000000;
static const int SHT_GNU_ATTRIBUTES = 0x6ffffff5;
static const int SHT_GNU_HASH = 0x6ffffff6;
static const int SHT_GNU_LIBLIST = 0x6ffffff7;
static const int SHT_CHECKSUM = 0x6ffffff8;
static const int SHT_LOSUNW = 0x6ffffffa;
static const int SHT_SUNW_move = 0x6ffffffa;
static const int SHT_SUNW_COMDAT = 0x6ffffffb;
static const int SHT_SUNW_syminfo = 0x6ffffffc;
static const int SHT_GNU_verdef = 0x6ffffffd;
static const int SHT_GNU_verneed = 0x6ffffffe;
static const int SHT_GNU_versym = 0x6fffffff;
static const int SHT_HISUNW = 0x6fffffff;
static const int SHT_HIOS = 0x6fffffff;
static const int SHT_LOPROC = 0x70000000;
static const int SHT_HIPROC = 0x7fffffff;
static const int SHT_LOUSER = 0x80000000;
static const int SHT_HIUSER = 0x8fffffff;
static const int SHF_MASKOS = 0x0ff00000;
static const int SHF_MASKPROC = 0xf0000000;
]]


ffi.cdef[[
typedef struct {
  Elf32_Word	st_name;
  Elf32_Addr	st_value;
  Elf32_Word	st_size;
  unsigned char	st_info;
  unsigned char	st_other;
  Elf32_Section	st_shndx;
} Elf32_Sym;
typedef struct {
  Elf64_Word	st_name;
  unsigned char	st_info;
  unsigned char st_other;
  Elf64_Section	st_shndx;
  Elf64_Addr	st_value;
  Elf64_Xword	st_size;
} Elf64_Sym;
typedef struct {
  Elf32_Half si_boundto;
  Elf32_Half si_flags;
} Elf32_Syminfo;
typedef struct {
  Elf64_Half si_boundto;
  Elf64_Half si_flags;
} Elf64_Syminfo;
]]

ffi.cdef[[
static const int SYMINFO_BT_SELF = 0xffff;
static const int SYMINFO_BT_PARENT = 0xfffe;
static const int SYMINFO_BT_LOWRESERVE = 0xff00;
static const int SYMINFO_FLG_DIRECT = 0x0001;
static const int SYMINFO_FLG_PASSTHRU = 0x0002;
static const int SYMINFO_FLG_COPY = 0x0004;
static const int SYMINFO_FLG_LAZYLOAD = 0x0008;
static const int SYMINFO_NONE = 0;
static const int SYMINFO_CURRENT = 1;
static const int SYMINFO_NUM = 2;
]]

function E.ELF32_ST_BIND(val)		return rshift(ffi.cast("unsigned char", val), 4); end
function E.ELF32_ST_TYPE(val)		return band(val, 0xf); end
function E.ELF32_ST_INFO(bind, atype)	return lshift(bind, 4) + band(atype, 0xf); end
function E.ELF64_ST_BIND(val)		return E.ELF32_ST_BIND(val); end
function E.ELF64_ST_TYPE(val)		return E.ELF32_ST_TYPE(val); end
function E.ELF64_ST_INFO(bind, atype)	return E.ELF32_ST_INFO(bind, atype); end

ffi.cdef[[
static const int STB_LOCAL = 0;
static const int STB_GLOBAL = 1;
static const int STB_WEAK = 2;
static const int STB_NUM = 3;
static const int STB_LOOS = 10;
static const int STB_GNU_UNIQUE = 10;
static const int STB_HIOS = 12;
static const int STB_LOPROC = 13;
static const int STB_HIPROC = 15;
static const int STT_NOTYPE = 0;
static const int STT_OBJECT = 1;
static const int STT_FUNC = 2;
static const int STT_SECTION = 3;
static const int STT_FILE = 4;
static const int STT_COMMON = 5;
static const int STT_TLS = 6;
static const int STT_NUM = 7;
static const int STT_LOOS = 10;
static const int STT_GNU_IFUNC = 10;
static const int STT_HIOS = 12;
static const int STT_LOPROC = 13;
static const int STT_HIPROC = 15;
static const int STN_UNDEF = 0;
]]

function E.ELF32_ST_VISIBILITY(o)	return band(o, 0x03); end
function E.ELF64_ST_VISIBILITY(o)	return E.ELF32_ST_VISIBILITY (o); end

ffi.cdef[[
static const int STV_DEFAULT = 0;
static const int STV_INTERNAL = 1;
static const int STV_HIDDEN = 2;
static const int STV_PROTECTED = 3;
]]

ffi.cdef[[
typedef struct
{
  Elf32_Addr	r_offset;
  Elf32_Word	r_info;
} Elf32_Rel;
typedef struct {
  Elf64_Addr	r_offset;
  Elf64_Xword	r_info;
} Elf64_Rel;
typedef struct {
  Elf32_Addr	r_offset;
  Elf32_Word	r_info;
  Elf32_Sword	r_addend;
} Elf32_Rela;
typedef struct {
  Elf64_Addr	r_offset;
  Elf64_Xword	r_info;
  Elf64_Sxword	r_addend;
} Elf64_Rela;
]]


function E.ELF32_R_SYM(val)		return rshift((val), 8) end
function E.ELF32_R_TYPE(val)	return band(val, 0xff) end
function E.ELF32_R_INFO(sym, atype)		return lshift(sym, 8) + band(atype, 0xff) end
function E.ELF64_R_SYM(i)			return rshift(i, 32) end
function E.ELF64_R_TYPE(i)			return band(i, 0xffffffff) end
function E.ELF64_R_INFO(sym,atype)		return lshift(ffi.cast("Elf64_Xword", sym), 32) + atype end

ffi.cdef[[
typedef struct {
  Elf32_Word	p_type;
  Elf32_Off	p_offset;
  Elf32_Addr	p_vaddr;
  Elf32_Addr	p_paddr;
  Elf32_Word	p_filesz;
  Elf32_Word	p_memsz;
  Elf32_Word	p_flags;
  Elf32_Word	p_align;
} Elf32_Phdr;
typedef struct {
  Elf64_Word	p_type;
  Elf64_Word	p_flags;
  Elf64_Off	p_offset;
  Elf64_Addr	p_vaddr;
  Elf64_Addr	p_paddr;
  Elf64_Xword	p_filesz;
  Elf64_Xword	p_memsz;
  Elf64_Xword	p_align;
} Elf64_Phdr;
]]

ffi.cdef[[
static const int PT_NULL = 0;
static const int PT_LOAD = 1;
static const int PT_DYNAMIC = 2;
static const int PT_INTERP = 3;
static const int PT_NOTE = 4;
static const int PT_SHLIB = 5;
static const int PT_PHDR = 6;
static const int PT_TLS = 7;
static const int PT_NUM = 8;
static const int PT_LOOS = 0x60000000;
static const int PT_GNU_EH_FRAME = 0x6474e550;
static const int PT_GNU_STACK = 0x6474e551;
static const int PT_GNU_RELRO = 0x6474e552;
static const int PT_LOSUNW = 0x6ffffffa;
static const int PT_SUNWBSS = 0x6ffffffa;
static const int PT_SUNWSTACK = 0x6ffffffb;
static const int PT_HISUNW = 0x6fffffff;
static const int PT_HIOS = 0x6fffffff;
static const int PT_LOPROC = 0x70000000;
static const int PT_HIPROC = 0x7fffffff;
static const int PN_XNUM = 0xffff;
static const int PF_MASKOS = 0x0ff00000;
static const int PF_MASKPROC = 0xf0000000;
static const int NT_PRSTATUS = 1;
static const int NT_FPREGSET = 2;
static const int NT_PRPSINFO = 3;
static const int NT_PRXREG = 4;
static const int NT_TASKSTRUCT = 4;
static const int NT_PLATFORM = 5;
static const int NT_AUXV = 6;
static const int NT_GWINDOWS = 7;
static const int NT_ASRS = 8;
static const int NT_PSTATUS = 10;
static const int NT_PSINFO = 13;
static const int NT_PRCRED = 14;
static const int NT_UTSNAME = 15;
static const int NT_LWPSTATUS = 16;
static const int NT_LWPSINFO = 17;
static const int NT_PRFPXREG = 20;
static const int NT_SIGINFO = 0x53494749;
static const int NT_FILE = 0x46494c45;
static const int NT_PRXFPREG = 0x46e62b7f;
static const int NT_PPC_VMX = 0x100;
static const int NT_PPC_SPE = 0x101;
static const int NT_PPC_VSX = 0x102;
static const int NT_386_TLS = 0x200;
static const int NT_386_IOPERM = 0x201;
static const int NT_X86_XSTATE = 0x202;
static const int NT_S390_HIGH_GPRS = 0x300;
static const int NT_S390_TIMER = 0x301;
static const int NT_S390_TODCMP = 0x302;
static const int NT_S390_TODPREG = 0x303;
static const int NT_S390_CTRS = 0x304;
static const int NT_S390_PREFIX = 0x305;
static const int NT_S390_LAST_BREAK = 0x306;
static const int NT_S390_SYSTEM_CALL = 0x307;
static const int NT_S390_TDB = 0x308;
static const int NT_ARM_VFP = 0x400;
static const int NT_ARM_TLS = 0x401;
static const int NT_ARM_HW_BREAK = 0x402;
static const int NT_ARM_HW_WATCH = 0x403;
static const int NT_METAG_CBUF = 0x500;
static const int NT_METAG_RPIPE = 0x501;
static const int NT_METAG_TLS = 0x502;
]]

ffi.cdef[[
typedef struct {
  Elf32_Sword d_tag;
  union {
      Elf32_Word d_val;
      Elf32_Addr d_ptr;
  } d_un;
} Elf32_Dyn;
typedef struct {
  Elf64_Sxword d_tag;
  union {
      Elf64_Xword d_val;
      Elf64_Addr d_ptr;
  } d_un;
} Elf64_Dyn;
]]

ffi.cdef[[
static const int DT_MIPS_NUM = 0x35;
]]

ffi.cdef[[
static const int DT_NULL = 0;
static const int DT_NEEDED = 1;
static const int DT_PLTRELSZ = 2;
static const int DT_PLTGOT = 3;
static const int DT_HASH = 4;
static const int DT_STRTAB = 5;
static const int DT_SYMTAB = 6;
static const int DT_RELA = 7;
static const int DT_RELASZ = 8;
static const int DT_RELAENT = 9;
static const int DT_STRSZ = 10;
static const int DT_SYMENT = 11;
static const int DT_INIT = 12;
static const int DT_FINI = 13;
static const int DT_SONAME = 14;
static const int DT_RPATH = 15;
static const int DT_SYMBOLIC = 16;
static const int DT_REL = 17;
static const int DT_RELSZ = 18;
static const int DT_RELENT = 19;
static const int DT_PLTREL = 20;
static const int DT_DEBUG = 21;
static const int DT_TEXTREL = 22;
static const int DT_JMPREL = 23;
static const int DT_BIND_NOW = 24;
static const int DT_INIT_ARRAY = 25;
static const int DT_FINI_ARRAY = 26;
static const int DT_INIT_ARRAYSZ = 27;
static const int DT_FINI_ARRAYSZ = 28;
static const int DT_RUNPATH = 29;
static const int DT_FLAGS = 30;
static const int DT_ENCODING = 32;
static const int DT_PREINIT_ARRAY = 32;
static const int DT_PREINIT_ARRAYSZ = 33;
static const int DT_NUM = 34;
static const int DT_LOOS = 0x6000000d;
static const int DT_HIOS = 0x6ffff000;
static const int DT_LOPROC = 0x70000000;
static const int DT_HIPROC = 0x7fffffff;
static const int DT_PROCNUM = DT_MIPS_NUM;
static const int DT_VALRNGLO = 0x6ffffd00;
static const int DT_GNU_PRELINKED = 0x6ffffdf5;
static const int DT_GNU_CONFLICTSZ = 0x6ffffdf6;
static const int DT_GNU_LIBLISTSZ = 0x6ffffdf7;
static const int DT_CHECKSUM = 0x6ffffdf8;
static const int DT_PLTPADSZ = 0x6ffffdf9;
static const int DT_MOVEENT = 0x6ffffdfa;
static const int DT_MOVESZ = 0x6ffffdfb;
static const int DT_FEATURE_1 = 0x6ffffdfc;
static const int DT_POSFLAG_1 = 0x6ffffdfd;
static const int DT_SYMINSZ = 0x6ffffdfe;
static const int DT_SYMINENT = 0x6ffffdff;
static const int DT_VALRNGHI = 0x6ffffdff;
]]

ffi.cdef[[
static const int DT_VALNUM = 12;
static const int DT_ADDRRNGLO = 0x6ffffe00;
static const int DT_GNU_HASH = 0x6ffffef5;
static const int DT_TLSDESC_PLT = 0x6ffffef6;
static const int DT_TLSDESC_GOT = 0x6ffffef7;
static const int DT_GNU_CONFLICT = 0x6ffffef8;
static const int DT_GNU_LIBLIST = 0x6ffffef9;
static const int DT_CONFIG = 0x6ffffefa;
static const int DT_DEPAUDIT = 0x6ffffefb;
static const int DT_AUDIT = 0x6ffffefc;
static const int DT_PLTPAD = 0x6ffffefd;
static const int DT_MOVETAB = 0x6ffffefe;
static const int DT_SYMINFO = 0x6ffffeff;
static const int DT_ADDRRNGHI = 0x6ffffeff;
]]

ffi.cdef[[
static const int DT_ADDRNUM = 11;
static const int DT_VERSYM = 0x6ffffff0;
static const int DT_RELACOUNT = 0x6ffffff9;
static const int DT_RELCOUNT = 0x6ffffffa;
static const int DT_FLAGS_1 = 0x6ffffffb;
static const int DT_VERDEF = 0x6ffffffc;
static const int DT_VERDEFNUM = 0x6ffffffd;
static const int DT_VERNEED = 0x6ffffffe;
static const int DT_VERNEEDNUM = 0x6fffffff;
]]

ffi.cdef[[
static const int DT_VERSIONTAGNUM = 16;
static const int DT_AUXILIARY = 0x7ffffffd;
static const int DT_FILTER = 0x7fffffff;
]]

function E.DT_VALTAGIDX(tag) return (ffi.C.DT_VALRNGHI - (tag)) end
function E.DT_ADDRTAGIDX(tag)  return (ffi.C.DT_ADDRRNGHI - (tag)) end
function E.DT_VERSIONTAGIDX(tag) return (ffi.C.DT_VERNEEDNUM - (tag)) end
--function E.DT_EXTRATAGIDX(tag)	((Elf32_Word)-((Elf32_Sword) (tag) <<1>>1)-1) end

ffi.cdef[[
static const int DT_EXTRANUM = 3;
static const int DF_ORIGIN = 0x00000001;
static const int DF_SYMBOLIC = 0x00000002;
static const int DF_TEXTREL = 0x00000004;
static const int DF_BIND_NOW = 0x00000008;
static const int DF_STATIC_TLS = 0x00000010;
static const int DF_1_NOW = 0x00000001;
static const int DF_1_GLOBAL = 0x00000002;
static const int DF_1_GROUP = 0x00000004;
static const int DF_1_NODELETE = 0x00000008;
static const int DF_1_LOADFLTR = 0x00000010;
static const int DF_1_INITFIRST = 0x00000020;
static const int DF_1_NOOPEN = 0x00000040;
static const int DF_1_ORIGIN = 0x00000080;
static const int DF_1_DIRECT = 0x00000100;
static const int DF_1_TRANS = 0x00000200;
static const int DF_1_INTERPOSE = 0x00000400;
static const int DF_1_NODEFLIB = 0x00000800;
static const int DF_1_NODUMP = 0x00001000;
static const int DF_1_CONFALT = 0x00002000;
static const int DF_1_ENDFILTEE = 0x00004000;
static const int DF_1_DISPRELDNE = 0x00008000;
static const int DF_1_DISPRELPND = 0x00010000;
static const int DF_1_NODIRECT = 0x00020000;
static const int DF_1_IGNMULDEF = 0x00040000;
static const int DF_1_NOKSYMS = 0x00080000;
static const int DF_1_NOHDR = 0x00100000;
static const int DF_1_EDITED = 0x00200000;
static const int DF_1_NORELOC = 0x00400000;
static const int DF_1_SYMINTPOSE = 0x00800000;
static const int DF_1_GLOBAUDIT = 0x01000000;
static const int DF_1_SINGLETON = 0x02000000;
static const int DTF_1_PARINIT = 0x00000001;
static const int DTF_1_CONFEXP = 0x00000002;
static const int DF_P1_LAZYLOAD = 0x00000001;
]]

ffi.cdef[[
typedef struct {
  Elf32_Half	vd_version;
  Elf32_Half	vd_flags;
  Elf32_Half	vd_ndx;
  Elf32_Half	vd_cnt;
  Elf32_Word	vd_hash;
  Elf32_Word	vd_aux;
  Elf32_Word	vd_next;
} Elf32_Verdef;
typedef struct {
  Elf64_Half	vd_version;
  Elf64_Half	vd_flags;
  Elf64_Half	vd_ndx;
  Elf64_Half	vd_cnt;
  Elf64_Word	vd_hash;
  Elf64_Word	vd_aux;
  Elf64_Word	vd_next;
} Elf64_Verdef;
]]

ffi.cdef[[
static const int VER_DEF_NONE = 0;
static const int VER_DEF_CURRENT = 1;
static const int VER_DEF_NUM = 2;
static const int VER_FLG_BASE = 0x1;
static const int VER_FLG_WEAK = 0x2;
static const int VER_NDX_LOCAL = 0;
static const int VER_NDX_GLOBAL = 1;
static const int VER_NDX_LORESERVE = 0xff00;
static const int VER_NDX_ELIMINATE = 0xff01;
]]

ffi.cdef[[
typedef struct {
  Elf32_Word	vda_name;
  Elf32_Word	vda_next;
} Elf32_Verdaux;
typedef struct {
  Elf64_Word	vda_name;
  Elf64_Word	vda_next;
} Elf64_Verdaux;
typedef struct {
  Elf32_Half	vn_version;
  Elf32_Half	vn_cnt;
  Elf32_Word	vn_file;
  Elf32_Word	vn_aux;
  Elf32_Word	vn_next;
} Elf32_Verneed;
typedef struct {
  Elf64_Half	vn_version;
  Elf64_Half	vn_cnt;
  Elf64_Word	vn_file;
  Elf64_Word	vn_aux;
  Elf64_Word	vn_next;
} Elf64_Verneed;
]]

ffi.cdef[[
static const int VER_NEED_NONE = 0;
static const int VER_NEED_CURRENT = 1;
static const int VER_NEED_NUM = 2;
]]

ffi.cdef[[
typedef struct {
  Elf32_Word	vna_hash;
  Elf32_Half	vna_flags;
  Elf32_Half	vna_other;
  Elf32_Word	vna_name;
  Elf32_Word	vna_next;
} Elf32_Vernaux;
typedef struct {
  Elf64_Word	vna_hash;
  Elf64_Half	vna_flags;
  Elf64_Half	vna_other;
  Elf64_Word	vna_name;
  Elf64_Word	vna_next;
} Elf64_Vernaux;
]]



ffi.cdef[[
typedef struct {
  uint32_t a_type;
  union {
      uint32_t a_val;
  } a_un;
} Elf32_auxv_t;
typedef struct {
  uint64_t a_type;
  union {
      uint64_t a_val;
  } a_un;
} Elf64_auxv_t;
]]


ffi.cdef[[
static const int AT_NULL = 0;
static const int AT_IGNORE = 1;
static const int AT_EXECFD = 2;
static const int AT_PHDR = 3;
static const int AT_PHENT = 4;
static const int AT_PHNUM = 5;
static const int AT_PAGESZ = 6;
static const int AT_BASE = 7;2_NC = 536;
static const int R_AARCH64_TLSLD_LDST64_DTPREL_LO12 = 537;
static const int R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC = 538;
static const int R_AARCH64_TLSIE_MOVW_GOTTPREL_G1 = 539;
static const int R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC = 540;
static const int R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21 = 541;
static const int R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC = 542;
static const int R_AARCH64_TLSIE_LD_GOTTPREL_PREL19 = 543;
static const int R_AARCH64_TLSLE_MOVW_TPREL_G2 = 544;
static const int R_AARCH64_TLSLE_MOVW_TPREL_G1 = 545;
static const int R_AARCH64_TLSLE_MOVW_TPREL_G1_NC = 546;
static const int R_AARCH64_TLSLE_MOVW_TPREL_G0 = 547;
static const int R_AARCH64_TLSLE_MOVW_TPREL_G0_NC = 548;
static const int R_AARCH64_TLSLE_ADD_TPREL_HI12 = 549;
static const int R_AARCH64_TLSLE_ADD_TPREL_LO12 = 550;
static const int R_AARCH64_TLSLE_ADD_TPREL_LO12_NC = 551;
static const int R_AARCH64_TLSLE_LDST8_TPREL_LO12 = 552;
static const int R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC = 553;
static const int R_AARCH64_TLSLE_LDST16_TPREL_LO12 = 554;
static const int R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC = 555;
static const int R_AARCH64_TLSLE_LDST32_TPREL_LO12 = 556;
static const int R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC = 557;
static const int R_AARCH64_TLSLE_LDST64_TPREL_LO12 = 558;
static const int R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC = 559;
static const int R_AARCH64_TLSDESC_LD_PREL19 = 560;
static const int R_AARCH64_TLSDESC_ADR_PREL21 = 561;
static const int R_AARCH64_TLSDESC_ADR_PAGE21 = 562;
static const int R_AARCH64_TLSDESC_LD64_LO12 = 563;
static const int R_AARCH64_TLSDESC_ADD_LO12 = 564;
static const int R_AARCH64_TLSDESC_OFF_G1 = 565;
static const int R_AARCH64_TLSDESC_OFF_G0_NC = 566;
static const int R_AARCH64_TLSDESC_LDR = 567;
static const int R_AARCH64_TLSDESC_ADD = 568;
static const int R_AARCH64_TLSDESC_CALL = 569;
static const int R_AARCH64_TLSLE_LDST128_TPREL_LO12 = 570;
static const int R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC = 571;
static const int R_AARCH64_TLSLD_LDST128_DTPREL_LO12 = 572;
static const int R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC = 573;
static const int R_AARCH64_COPY = 1024;
static const int R_AARCH64_GLOB_DAT = 1025;
static const int R_AARCH64_JUMP_SLOT = 1026;
static const int R_AARCH64_RELATIVE = 1027;
static const int R_AARCH64_TLS_DTPMOD64 = 1028;
static const int R_AARCH64_TLS_DTPREL64 = 1029;
static const int R_AARCH64_TLS_TPREL64 = 1030;
static const int R_AARCH64_TLSDESC = 1031;
static const int R_ARM_NONE = 0;
static const int R_ARM_PC24 = 1;
static const int R_ARM_ABS32 = 2;
static const int R_ARM_REL32 = 3;
static const int R_ARM_PC13 = 4;
static const int R_ARM_ABS16 = 5;
static const int R_ARM_ABS12 = 6;
static const int R_ARM_THM_ABS5 = 7;
static const int R_ARM_ABS8 = 8;
static const int R_ARM_SBREL32 = 9;
static const int R_ARM_THM_PC22 = 10;
static const int R_ARM_THM_PC8 = 11;
static const int R_ARM_AMP_VCALL9 = 12;
static const int R_ARM_TLS_DESC = 13;
static const int R_ARM_THM_SWI8 = 14;
static const int R_ARM_XPC25 = 15;
static const int R_ARM_THM_XPC22 = 16;
static const int R_ARM_TLS_DTPMOD32 = 17;
static const int R_ARM_TLS_DTPOFF32 = 18;
static const int R_ARM_TLS_TPOFF32 = 19;
static const int R_ARM_COPY = 20;
static const int R_ARM_GLOB_DAT = 21;
static const int R_ARM_JUMP_SLOT = 22;
static const int R_ARM_RELATIVE = 23;
static const int R_ARM_GOTOFF = 24;
static const int R_ARM_GOTPC = 25;
static const int R_ARM_GOT32 = 26;
static const int R_ARM_PLT32 = 27;
static const int R_ARM_CALL = 28;
static const int R_ARM_JUMP24 = 29;
static const int R_ARM_THM_JUMP24 = 30;
static const int R_ARM_BASE_ABS = 31;
static const int R_ARM_ALU_PCREL_7_0 = 32;
static const int R_ARM_ALU_PCREL_15_8 = 33;
static const int R_ARM_ALU_PCREL_23_15 = 34;
static const int R_ARM_LDR_SBREL_11_0 = 35;
static const int R_ARM_ALU_SBREL_19_12 = 36;
static const int R_ARM_ALU_SBREL_27_20 = 37;
static const int R_ARM_TARGET1 = 38;
static const int R_ARM_SBREL31 = 39;
static const int R_ARM_V4BX = 40;
static const int R_ARM_TARGET2 = 41;
static const int R_ARM_PREL31 = 42;
static const int R_ARM_MOVW_ABS_NC = 43;
static const int R_ARM_MOVT_ABS = 44;
static const int R_ARM_MOVW_PREL_NC = 45;
static const int R_ARM_MOVT_PREL = 46;
static const int R_ARM_THM_MOVW_ABS_NC = 47;
static const int R_ARM_THM_MOVT_ABS = 48;
static const int R_ARM_THM_MOVW_PREL_NC = 49;
static const int R_ARM_THM_MOVT_PREL = 50;
static const int R_ARM_THM_JUMP19 = 51;
static const int R_ARM_THM_JUMP6 = 52;
static const int R_ARM_THM_ALU_PREL_11_0 = 53;
static const int R_ARM_THM_PC12 = 54;
static const int R_ARM_ABS32_NOI = 55;
static const int R_ARM_REL32_NOI = 56;
static const int R_ARM_ALU_PC_G0_NC = 57;
static const int R_ARM_ALU_PC_G0 = 58;
static const int R_ARM_ALU_PC_G1_NC = 59;
static const int R_ARM_ALU_PC_G1 = 60;
static const int R_ARM_ALU_PC_G2 = 61;
static const int R_ARM_LDR_PC_G1 = 62;
static const int R_ARM_LDR_PC_G2 = 63;
static const int R_ARM_LDRS_PC_G0 = 64;
static const int R_ARM_LDRS_PC_G1 = 65;
static const int R_ARM_LDRS_PC_G2 = 66;
static const int R_ARM_LDC_PC_G0 = 67;
static const int R_ARM_LDC_PC_G1 = 68;
static const int R_ARM_LDC_PC_G2 = 69;
static const int R_ARM_ALU_SB_G0_NC = 70;
static const int R_ARM_ALU_SB_G0 = 71;
static const int R_ARM_ALU_SB_G1_NC = 72;
static const int R_ARM_ALU_SB_G1 = 73;
static const int R_ARM_ALU_SB_G2 = 74;
static const int R_ARM_LDR_SB_G0 = 75;
static const int R_ARM_LDR_SB_G1 = 76;
static const int R_ARM_LDR_SB_G2 = 77;
static const int R_ARM_LDRS_SB_G0 = 78;
static const int R_ARM_LDRS_SB_G1 = 79;
static const int R_ARM_LDRS_SB_G2 = 80;
static const int R_ARM_LDC_SB_G0 = 81;
static const int R_ARM_LDC_SB_G1 = 82;
static const int R_ARM_LDC_SB_G2 = 83;
static const int R_ARM_MOVW_BREL_NC = 84;
static const int R_ARM_MOVT_BREL = 85;
static const int R_ARM_MOVW_BREL = 86;
static const int R_ARM_THM_MOVW_BREL_NC = 87;
static const int R_ARM_THM_MOVT_BREL = 88;
static const int R_ARM_THM_MOVW_BREL = 89;
static const int R_ARM_TLS_GOTDESC = 90;
static const int R_ARM_TLS_CALL = 91;
static const int R_ARM_TLS_DESCSEQ = 92;
static const int R_ARM_THM_TLS_CALL = 93;
static const int R_ARM_PLT32_ABS = 94;
static const int R_ARM_GOT_ABS = 95;
static const int R_ARM_GOT_PREL = 96;
static const int R_ARM_GOT_BREL12 = 97;
static const int R_ARM_GOTOFF12 = 98;
static const int R_ARM_GOTRELAX = 99;
static const int R_ARM_GNU_VTENTRY = 100;
static const int R_ARM_GNU_VTINHERIT = 101;
static const int R_ARM_THM_PC11 = 102;
static const int R_ARM_THM_PC9 = 103;
static const int R_ARM_TLS_GD32 = 104;
static const int R_ARM_TLS_LDM32 = 105;
static const int R_ARM_TLS_LDO32 = 106;
static const int R_ARM_TLS_IE32 = 107;
static const int R_ARM_TLS_LE32 = 108;
static const int R_ARM_TLS_LDO12 = 109;
static const int R_ARM_TLS_LE12 = 110;
static const int R_ARM_TLS_IE12GP = 111;
static const int R_ARM_ME_TOO = 128;
static const int R_ARM_THM_TLS_DESCSEQ = 129;
static const int R_ARM_THM_TLS_DESCSEQ16 = 129;
static const int R_ARM_THM_TLS_DESCSEQ32 = 130;
static const int R_ARM_THM_GOT_BREL12 = 131;
static const int R_ARM_IRELATIVE = 160;
static const int R_ARM_RXPC25 = 249;
static const int R_ARM_RSBREL32 = 250;
static const int R_ARM_THM_RPC22 = 251;
static const int R_ARM_RREL32 = 252;
static const int R_ARM_RABS22 = 253;
static const int R_ARM_RPC24 = 254;
static const int R_ARM_RBASE = 255;
static const int R_ARM_NUM = 256;
static const int EF_IA_64_MASKOS = 0x0000000f;
static const int EF_IA_64_ABI64 = 0x00000010;
static const int EF_IA_64_ARCH = 0xff000000;
static const int PF_IA_64_NORECOV = 0x80000000;
static const int SHF_IA_64_SHORT = 0x10000000;
static const int SHF_IA_64_NORECOV = 0x20000000;
static const int DT_IA_64_NUM = 1;
static const int R_IA64_NONE = 0x00;
static const int R_IA64_IMM14 = 0x21;
static const int R_IA64_IMM22 = 0x22;
static const int R_IA64_IMM64 = 0x23;
static const int R_IA64_DIR32MSB = 0x24;
static const int R_IA64_DIR32LSB = 0x25;
static const int R_IA64_DIR64MSB = 0x26;
static const int R_IA64_DIR64LSB = 0x27;
static const int R_IA64_GPREL22 = 0x2a;
static const int R_IA64_GPREL64I = 0x2b;
static const int R_IA64_GPREL32MSB = 0x2c;
static const int R_IA64_GPREL32LSB = 0x2d;
static const int R_IA64_GPREL64MSB = 0x2e;
static const int R_IA64_GPREL64LSB = 0x2f;
static const int R_IA64_LTOFF22 = 0x32;
static const int R_IA64_LTOFF64I = 0x33;
static const int R_IA64_PLTOFF22 = 0x3a;
static const int R_IA64_PLTOFF64I = 0x3b;
static const int R_IA64_PLTOFF64MSB = 0x3e;
static const int R_IA64_PLTOFF64LSB = 0x3f;
static const int R_IA64_FPTR64I = 0x43;
static const int R_IA64_FPTR32MSB = 0x44;
static const int R_IA64_FPTR32LSB = 0x45;
static const int R_IA64_FPTR64MSB = 0x46;
static const int R_IA64_FPTR64LSB = 0x47;
static const int R_IA64_PCREL60B = 0x48;
static const int R_IA64_PCREL21B = 0x49;
static const int R_IA64_PCREL21M = 0x4a;
static const int R_IA64_PCREL21F = 0x4b;
static const int R_IA64_PCREL32MSB = 0x4c;
static const int R_IA64_PCREL32LSB = 0x4d;
static const int R_IA64_PCREL64MSB = 0x4e;
static const int R_IA64_PCREL64LSB = 0x4f;
static const int R_IA64_LTOFF_FPTR22 = 0x52;
static const int R_IA64_LTOFF_FPTR64I = 0x53;
static const int R_IA64_LTOFF_FPTR32MSB = 0x54;
static const int R_IA64_LTOFF_FPTR32LSB = 0x55;
static const int R_IA64_LTOFF_FPTR64MSB = 0x56;
static const int R_IA64_LTOFF_FPTR64LSB = 0x57;
static const int R_IA64_SEGREL32MSB = 0x5c;
static const int R_IA64_SEGREL32LSB = 0x5d;
static const int R_IA64_SEGREL64MSB = 0x5e;
static const int R_IA64_SEGREL64LSB = 0x5f;
static const int R_IA64_SECREL32MSB = 0x64;
static const int R_IA64_SECREL32LSB = 0x65;
static const int R_IA64_SECREL64MSB = 0x66;
static const int R_IA64_SECREL64LSB = 0x67;
static const int R_IA64_REL32MSB = 0x6c;
static const int R_IA64_REL32LSB = 0x6d;
static const int R_IA64_REL64MSB = 0x6e;
static const int R_IA64_REL64LSB = 0x6f;
static const int R_IA64_LTV32MSB = 0x74;
static const int R_IA64_LTV32LSB = 0x75;
static const int R_IA64_LTV64MSB = 0x76;
static const int R_IA64_LTV64LSB = 0x77;
static const int R_IA64_PCREL21BI = 0x79;
static const int R_IA64_PCREL22 = 0x7a;
static const int R_IA64_PCREL64I = 0x7b;
static const int R_IA64_IPLTMSB = 0x80;
static const int R_IA64_IPLTLSB = 0x81;
static const int R_IA64_COPY = 0x84;
static const int R_IA64_SUB = 0x85;
static const int R_IA64_LTOFF22X = 0x86;
static const int R_IA64_LDXMOV = 0x87;
static const int R_IA64_TPREL14 = 0x91;
static const int R_IA64_TPREL22 = 0x92;
static const int R_IA64_TPREL64I = 0x93;
static const int R_IA64_TPREL64MSB = 0x96;
static const int R_IA64_TPREL64LSB = 0x97;
static const int R_IA64_LTOFF_TPREL22 = 0x9a;
static const int R_IA64_DTPMOD64MSB = 0xa6;
static const int R_IA64_DTPMOD64LSB = 0xa7;
static const int R_IA64_LTOFF_DTPMOD22 = 0xaa;
static const int R_IA64_DTPREL14 = 0xb1;
static const int R_IA64_DTPREL22 = 0xb2;
static const int R_IA64_DTPREL64I = 0xb3;
static const int R_IA64_DTPREL32MSB = 0xb4;
static const int R_IA64_DTPREL32LSB = 0xb5;
static const int R_IA64_DTPREL64MSB = 0xb6;
static const int R_IA64_DTPREL64LSB = 0xb7;
static const int R_IA64_LTOFF_DTPREL22 = 0xba;
static const int R_SH_NONE = 0;
static const int R_SH_DIR32 = 1;
static const int R_SH_REL32 = 2;
static const int R_SH_DIR8WPN = 3;
static const int R_SH_IND12W = 4;
static const int R_SH_DIR8WPL = 5;
static const int R_SH_DIR8WPZ = 6;
static const int R_SH_DIR8BP = 7;
static const int R_SH_DIR8W = 8;
static const int R_SH_DIR8L = 9;
static const int R_SH_SWITCH16 = 25;
static const int R_SH_SWITCH32 = 26;
static const int R_SH_USES = 27;
static const int R_SH_COUNT = 28;
static const int R_SH_ALIGN = 29;
static const int R_SH_CODE = 30;
static const int R_SH_DATA = 31;
static const int R_SH_LABEL = 32;
static const int R_SH_SWITCH8 = 33;
static const int R_SH_GNU_VTINHERIT = 34;
static const int R_SH_GNU_VTENTRY = 35;
static const int R_SH_TLS_GD_32 = 144;
static const int R_SH_TLS_LD_32 = 145;
static const int R_SH_TLS_LDO_32 = 146;
static const int R_SH_TLS_IE_32 = 147;
static const int R_SH_TLS_LE_32 = 148;
static const int R_SH_TLS_DTPMOD32 = 149;
static const int R_SH_TLS_DTPOFF32 = 150;
static const int R_SH_TLS_TPOFF32 = 151;
static const int R_SH_GOT32 = 160;
static const int R_SH_PLT32 = 161;
static const int R_SH_COPY = 162;
static const int R_SH_GLOB_DAT = 163;
static const int R_SH_JMP_SLOT = 164;
static const int R_SH_RELATIVE = 165;
static const int R_SH_GOTOFF = 166;
static const int R_SH_GOTPC = 167;
static const int R_SH_NUM = 256;
static const int R_390_NONE = 0;
static const int R_390_8 = 1;
static const int R_390_12 = 2;
static const int R_390_16 = 3;
static const int R_390_32 = 4;
static const int R_390_PC32 = 5;
static const int R_390_GOT12 = 6;
static const int R_390_GOT32 = 7;
static const int R_390_PLT32 = 8;
static const int R_390_COPY = 9;
static const int R_390_GLOB_DAT = 10;
static const int R_390_JMP_SLOT = 11;
static const int R_390_RELATIVE = 12;
static const int R_390_GOTOFF32 = 13;
static const int R_390_GOTPC = 14;
static const int R_390_GOT16 = 15;
static const int R_390_PC16 = 16;
static const int R_390_PC16DBL = 17;
static const int R_390_PLT16DBL = 18;
static const int R_390_PC32DBL = 19;
static const int R_390_PLT32DBL = 20;
static const int R_390_GOTPCDBL = 21;
static const int R_390_64 = 22;
static const int R_390_PC64 = 23;
static const int R_390_GOT64 = 24;
static const int R_390_PLT64 = 25;
static const int R_390_GOTENT = 26;
static const int R_390_GOTOFF16 = 27;
static const int R_390_GOTOFF64 = 28;
static const int R_390_GOTPLT12 = 29;
static const int R_390_GOTPLT16 = 30;
static const int R_390_GOTPLT32 = 31;
static const int R_390_GOTPLT64 = 32;
static const int R_390_GOTPLTENT = 33;
static const int R_390_PLTOFF16 = 34;
static const int R_390_PLTOFF32 = 35;
static const int R_390_PLTOFF64 = 36;
static const int R_390_TLS_LOAD = 37;
static const int R_390_TLS_GDCALL = 38;
static const int R_390_TLS_LDCALL = 39;
static const int R_390_TLS_GD32 = 40;
static const int R_390_TLS_GD64 = 41;
static const int R_390_TLS_GOTIE12 = 42;
static const int R_390_TLS_GOTIE32 = 43;
static const int R_390_TLS_GOTIE64 = 44;
static const int R_390_TLS_LDM32 = 45;
static const int R_390_TLS_LDM64 = 46;
static const int R_390_TLS_IE32 = 47;
static const int R_390_TLS_IE64 = 48;
static const int R_390_TLS_IEENT = 49;
static const int R_390_TLS_LE32 = 50;
static const int R_390_TLS_LE64 = 51;
static const int R_390_TLS_LDO32 = 52;
static const int R_390_TLS_LDO64 = 53;
static const int R_390_TLS_DTPMOD = 54;
static const int R_390_TLS_DTPOFF = 55;
static const int R_390_TLS_TPOFF = 56;
static const int R_390_20 = 57;
static const int R_390_GOT20 = 58;
static const int R_390_GOTPLT20 = 59;
static const int R_390_TLS_GOTIE20 = 60;
static const int R_390_NUM = 61;
static const int R_CRIS_NONE = 0;
static const int R_CRIS_8 = 1;
static const int R_CRIS_16 = 2;
static const int R_CRIS_32 = 3;
static const int R_CRIS_8_PCREL = 4;
static const int R_CRIS_16_PCREL = 5;
static const int R_CRIS_32_PCREL = 6;
static const int R_CRIS_GNU_VTINHERIT = 7;
static const int R_CRIS_GNU_VTENTRY = 8;
static const int R_CRIS_COPY = 9;
static const int R_CRIS_GLOB_DAT = 10;
static const int R_CRIS_JUMP_SLOT = 11;
static const int R_CRIS_RELATIVE = 12;
static const int R_CRIS_16_GOT = 13;
static const int R_CRIS_32_GOT = 14;
static const int R_CRIS_16_GOTPLT = 15;
static const int R_CRIS_32_GOTPLT = 16;
static const int R_CRIS_32_GOTREL = 17;
static const int R_CRIS_32_PLT_GOTREL = 18;
static const int R_CRIS_32_PLnfo;
} Elf64_Rel;
typedef struct {
  Elf32_Addr	r_offset;
  Elf32_Word	r_info;
  Elf32_Sword	r_addend;
} Elf32_Rela;
typedef struct {
  Elf64_Addr	r_offset;
  Elf64_Xword	r_info;
  Elf64_Sxword	r_addend;
} Elf64_Rela;
]]


function E.ELF32_R_SYM(val)		return rshift((val), 8) end
function E.ELF32_R_TYPE(val)	return band(val, 0xff) end
function E.ELF32_R_INFO(sym, atype)		return lshift(sym, 8) + band(atype, 0xff) end
function E.ELF64_R_SYM(i)			return rshift(i, 32) end
function E.ELF64_R_TYPE(i)			return band(i, 0xffffffff) end
function E.ELF64_R_INFO(sym,atype)		return lshift(ffi.cast("Elf64_Xword", sym), 32) + atype end

ffi.cdef[[
typedef struct {
  Elf32_Word	p_type;
  Elf32_Off	p_offset;
  Elf32_Addr	p_vaddr;
  Elf32_Addr	p_paddr;
  Elf32_Word	p_filesz;
  Elf32_Word	p_memsz;
  Elf32_Word	p_flags;
  Elf32_Word	p_align;
} Elf32_Phdr;
typedef struct {
  Elf64_Word	p_type;
  Elf64_Word	p_flags;
  Elf64_Off	p_offset;
  Elf64_Addr	p_vaddr;
  Elf64_Addr	p_paddr;
  Elf64_Xword	p_filesz;
  Elf64_Xword	p_memsz;
  Elf64_Xword	p_align;
} Elf64_Phdr;
]]

ffi.cdef[[
static const int PT_NULL = 0;
static const int PT_LOAD = 1;
static const int PT_DYNAMIC = 2;
static const int PT_INTERP = 3;
static const int PT_NOTE = 4;
static const int PT_SHLIB = 5;
static const int PT_PHDR = 6;
static const int PT_TLS = 7;
static const int PT_NUM = 8;
static const int PT_LOOS = 0x60000000;
static const int PT_GNU_EH_FRAME = 0x6474e550;
static const int PT_GNU_STACK = 0x6474e551;
static const int PT_GNU_RELRO = 0x6474e552;
static const int PT_LOSUNW = 0x6ffffffa;
static const int PT_SUNWBSS = 0x6ffffffa;
static const int PT_SUNWSTACK = 0x6ffffffb;
static const int PT_HISUNW = 0x6fffffff;
static const int PT_HIOS = 0x6fffffff;
static const int PT_LOPROC = 0x70000000;
static const int PT_HIPROC = 0x7fffffff;
static const int PN_XNUM = 0xffff;
static const int PF_MASKOS = 0x0ff00000;
static const int PF_MASKPROC = 0xf0000000;
static const int NT_PRSTATUS = 1;
static const int NT_FPREGSET = 2;
static const int NT_PRPSINFO = 3;
static const int NT_PRXREG = 4;
static const int NT_TASKSTRUCT = 4;
static const int NT_PLATFORM = 5;
static const int NT_AUXV = 6;
static const int NT_GWINDOWS = 7;
static const int NT_ASRS = 8;
static const int NT_PSTATUS = 10;
static const int NT_PSINFO = 13;
static const int NT_PRCRED = 14;
static const int NT_UTSNAME = 15;
static const int NT_LWPSTATUS = 16;
static const int NT_LWPSINFO = 17;
static const int NT_PRFPXREG = 20;
static const int NT_SIGINFO = 0x53494749;
static const int NT_FILE = 0x46494c45;
static const int NT_PRXFPREG = 0x46e62b7f;
static const int NT_PPC_VMX = 0x100;
static const int NT_PPC_SPE = 0x101;
static const int NT_PPC_VSX = 0x102;
static const int NT_386_TLS = 0x200;
static const int NT_386_IOPERM = 0x201;
static const int NT_X86_XSTATE = 0x202;
static const int NT_S390_HIGH_GPRS = 0x300;
static const int NT_S390_TIMER = 0x301;
static const int NT_S390_TODCMP = 0x302;
static const int NT_S390_TODPREG = 0x303;
static const int NT_S390_CTRS = 0x304;
static const int NT_S390_PREFIX = 0x305;
static const int NT_S390_LAST_BREAK = 0x306;
static const int NT_S390_SYSTEM_CALL = 0x307;
static const int NT_S390_TDB = 0x308;
static const int NT_ARM_VFP = 0x400;
static const int NT_ARM_TLS = 0x401;
static const int NT_ARM_HW_BREAK = 0x402;
static const int NT_ARM_HW_WATCH = 0x403;
static const int NT_METAG_CBUF = 0x500;
static const int NT_METAG_RPIPE = 0x501;
static const int NT_METAG_TLS = 0x502;
]]

ffi.cdef[[
typedef struct {
  Elf32_Sword d_tag;
  union {
      Elf32_Word d_val;
      Elf32_Addr d_ptr;
  } d_un;
} Elf32_Dyn;
typedef struct {
  Elf64_Sxword d_tag;
  union {
      Elf64_Xword d_val;
      Elf64_Addr d_ptr;
  } d_un;
} Elf64_Dyn;
]]

ffi.cdef[[
static const int DT_MIPS_NUM = 0x35;
]]

ffi.cdef[[
static const int DT_NULL = 0;
static const int DT_NEEDED = 1;
static const int DT_PLTRELSZ = 2;
static const int DT_PLTGOT = 3;
static const int DT_HASH = 4;
static const int DT_STRTAB = 5;
static const int DT_SYMTAB = 6;
static const int DT_RELA = 7;
static const int DT_RELASZ = 8;
static const int DT_RELAENT = 9;
static const int DT_STRSZ = 10;
static const int DT_SYMENT = 11;
static const int DT_INIT = 12;
static const int DT_FINI = 13;
static const int DT_SONAME = 14;
static const int DT_RPATH = 15;
static const int DT_SYMBOLIC = 16;
static const int DT_REL = 17;
static const int DT_RELSZ = 18;
static const int DT_RELENT = 19;
static const int DT_PLTREL = 20;
static const int DT_DEBUG = 21;
static const int DT_TEXTREL = 22;
static const int DT_JMPREL = 23;
static const int DT_BIND_NOW = 24;
static const int DT_INIT_ARRAY = 25;
static const int DT_FINI_ARRAY = 26;
static const int DT_INIT_ARRAYSZ = 27;
static const int DT_FINI_ARRAYSZ = 28;
static const int DT_RUNPATH = 29;
static const int DT_FLAGS = 30;
static const int DT_ENCODING = 32;
static const int DT_PREINIT_ARRAY = 32;
static const int DT_PREINIT_ARRAYSZ = 33;
static const int DT_NUM = 34;
static const int DT_LOOS = 0x6000000d;
static const int DT_HIOS = 0x6ffff000;
static const int DT_LOPROC = 0x70000000;
static const int DT_HIPROC = 0x7fffffff;
static const int DT_PROCNUM = DT_MIPS_NUM;
static const int DT_VALRNGLO = 0x6ffffd00;
static const int DT_GNU_PRELINKED = 0x6ffffdf5;
static const int DT_GNU_CONFLICTSZ = 0x6ffffdf6;
static const int DT_GNU_LIBLISTSZ = 0x6ffffdf7;
static const int DT_CHECKSUM = 0x6ffffdf8;
static const int DT_PLTPADSZ = 0x6ffffdf9;
static const int DT_MOVEENT = 0x6ffffdfa;
static const int DT_MOVESZ = 0x6ffffdfb;
static const int DT_FEATURE_1 = 0x6ffffdfc;
static const int DT_POSFLAG_1 = 0x6ffffdfd;
static const int DT_SYMINSZ = 0x6ffffdfe;
static const int DT_SYMINENT = 0x6ffffdff;
static const int DT_VALRNGHI = 0x6ffffdff;
]]

ffi.cdef[[
static const int DT_VALNUM = 12;
static const int DT_ADDRRNGLO = 0x6ffffe00;
static const int DT_GNU_HASH = 0x6ffffef5;
static const int DT_TLSDESC_PLT = 0x6ffffef6;
static const int DT_TLSDESC_GOT = 0x6ffffef7;
static const int DT_GNU_CONFLICT = 0x6ffffef8;
static const int DT_GNU_LIBLIST = 0x6ffffef9;
static const int DT_CONFIG = 0x6ffffefa;
static const int DT_DEPAUDIT = 0x6ffffefb;
static const int DT_AUDIT = 0x6ffffefc;
static const int DT_PLTPAD = 0x6ffffefd;
static const int DT_MOVETAB = 0x6ffffefe;
static const int DT_SYMINFO = 0x6ffffeff;
static const int DT_ADDRRNGHI = 0x6ffffeff;
]]

ffi.cdef[[
static const int DT_ADDRNUM = 11;
static const int DT_VERSYM = 0x6ffffff0;
static const int DT_RELACOUNT = 0x6ffffff9;
static const int DT_RELCOUNT = 0x6ffffffa;
static const int DT_FLAGS_1 = 0x6ffffffb;
static const int DT_VERDEF = 0x6ffffffc;
static const int DT_VERDEFNUM = 0x6ffffffd;
static const int DT_VERNEED = 0x6ffffffe;
static const int DT_VERNEEDNUM = 0x6fffffff;
]]

ffi.cdef[[
static const int DT_VERSIONTAGNUM = 16;
static const int DT_AUXILIARY = 0x7ffffffd;
static const int DT_FILTER = 0x7fffffff;
]]

function E.DT_VALTAGIDX(tag) return (ffi.C.DT_VALRNGHI - (tag)) end
function E.DT_ADDRTAGIDX(tag)  return (ffi.C.DT_ADDRRNGHI - (tag)) end
function E.DT_VERSIONTAGIDX(tag) return (ffi.C.DT_VERNEEDNUM - (tag)) end
--function E.DT_EXTRATAGIDX(tag)	((Elf32_Word)-((Elf32_Sword) (tag) <<1>>1)-1) end

ffi.cdef[[
static const int DT_EXTRANUM = 3;
static const int DF_ORIGIN = 0x00000001;
static const int DF_SYMBOLIC = 0x00000002;
static const int DF_TEXTREL = 0x00000004;
static const int DF_BIND_NOW = 0x00000008;
static const int DF_STATIC_TLS = 0x00000010;
static const int DF_1_NOW = 0x00000001;
static const int DF_1_GLOBAL = 0x00000002;
static const int DF_1_GROUP = 0x00000004;
static const int DF_1_NODELETE = 0x00000008;
static const int DF_1_LOADFLTR = 0x00000010;
static const int DF_1_INITFIRST = 0x00000020;
static const int DF_1_NOOPEN = 0x00000040;
static const int DF_1_ORIGIN = 0x00000080;
static const int DF_1_DIRECT = 0x00000100;
static const int DF_1_TRANS = 0x00000200;
static const int DF_1_INTERPOSE = 0x00000400;
static const int DF_1_NODEFLIB = 0x00000800;
static const int DF_1_NODUMP = 0x00001000;
static const int DF_1_CONFALT = 0x00002000;
static const int DF_1_ENDFILTEE = 0x00004000;
static const int DF_1_DISPRELDNE = 0x00008000;
static const int DF_1_DISPRELPND = 0x00010000;
static const int DF_1_NODIRECT = 0x00020000;
static const int DF_1_IGNMULDEF = 0x00040000;
static const int DF_1_NOKSYMS = 0x00080000;
static const int DF_1_NOHDR = 0x00100000;
static const int DF_1_EDITED = 0x00200000;
static const int DF_1_NORELOC = 0x00400000;
static const int DF_1_SYMINTPOSE = 0x00800000;
static const int DF_1_GLOBAUDIT = 0x01000000;
static const int DF_1_SINGLETON = 0x02000000;
static const int DTF_1_PARINIT = 0x00000001;
static const int DTF_1_CONFEXP = 0x00000002;
static const int DF_P1_LAZYLOAD = 0x00000001;
]]

ffi.cdef[[
typedef struct {
  Elf32_Half	vd_version;
  Elf32_Half	vd_flags;
  Elf32_Half	vd_ndx;
  Elf32_Half	vd_cnt;
  Elf32_Word	vd_hash;
  Elf32_Word	vd_aux;
  Elf32_Word	vd_next;
} Elf32_Verdef;
typedef struct {
  Elf64_Half	vd_version;
  Elf64_Half	vd_flags;
  Elf64_Half	vd_ndx;
  Elf64_Half	vd_cnt;
  Elf64_Word	vd_hash;
  Elf64_Word	vd_aux;
  Elf64_Word	vd_next;
} Elf64_Verdef;
]]

ffi.cdef[[
static const int VER_DEF_NONE = 0;
static const int VER_DEF_CURRENT = 1;
static const int VER_DEF_NUM = 2;
static const int VER_FLG_BASE = 0x1;
static const int VER_FLG_WEAK = 0x2;
static const int VER_NDX_LOCAL = 0;
static const int VER_NDX_GLOBAL = 1;
static const int VER_NDX_LORESERVE = 0xff00;
static const int VER_NDX_ELIMINATE = 0xff01;
]]

ffi.cdef[[
typedef struct {
  Elf32_Word	vda_name;
  Elf32_Word	vda_next;
} Elf32_Verdaux;
typedef struct {
  Elf64_Word	vda_name;
  Elf64_Word	vda_next;
} Elf64_Verdaux;
typedef struct {
  Elf32_Half	vn_version;
  Elf32_Half	vn_cnt;
  Elf32_Word	vn_file;
  Elf32_Word	vn_aux;
  Elf32_Word	vn_next;
} Elf32_Verneed;
typedef struct {
  Elf64_Half	vn_version;
  Elf64_Half	vn_cnt;
  Elf64_Word	vn_file;
  Elf64_Word	vn_aux;
  Elf64_Word	vn_next;
} Elf64_Verneed;
]]

ffi.cdef[[
static const int VER_NEED_NONE = 0;
static const int VER_NEED_CURRENT = 1;
static const int VER_NEED_NUM = 2;
]]

ffi.cdef[[
typedef struct {
  Elf32_Word	vna_hash;
  Elf32_Half	vna_flags;
  Elf32_Half	vna_other;
  Elf32_Word	vna_name;
  Elf32_Word	vna_next;
} Elf32_Vernaux;
typedef struct {
  Elf64_Word	vna_hash;
  Elf64_Half	vna_flags;
  Elf64_Half	vna_other;
  Elf64_Word	vna_name;
  Elf64_Word	vna_next;
} Elf64_Vernaux;
]]



ffi.cdef[[
typedef struct {
  uint32_t a_type;
  union {
      uint32_t a_val;
  } a_un;
} Elf32_auxv_t;
typedef struct {
  uint64_t a_type;
  union {
      uint64_t a_val;
  } a_un;
} Elf64_auxv_t;
]]


ffi.cdef[[
static const int AT_NULL = 0;
static const int AT_IGNORE = 1;
static const int AT_EXECFD = 2;
static const int AT_PHDR = 3;
static const int AT_PHENT = 4;
static const int AT_PHNUM = 5;
static const int AT_PAGESZ = 6;
static const int AT_BASE = 7;2_NC = 536;
static const int R_AARCH64_TLSLD_LDST64_DTPREL_LO12 = 537;
static const int R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC = 538;
static const int R_AARCH64_TLSIE_MOVW_GOTTPREL_G1 = 539;
static const int R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC = 540;
static const int R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21 = 541;
static const int R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC = 542;
static const int R_AARCH64_TLSIE_LD_GOTTPREL_PREL19 = 543;
static const int R_AARCH64_TLSLE_MOVW_TPREL_G2 = 544;
static const int R_AARCH64_TLSLE_MOVW_TPREL_G1 = 545;
static const int R_AARCH64_TLSLE_MOVW_TPREL_G1_NC = 546;
static const int R_AARCH64_TLSLE_MOVW_TPREL_G0 = 547;
static const int R_AARCH64_TLSLE_MOVW_TPREL_G0_NC = 548;
static const int R_AARCH64_TLSLE_ADD_TPREL_HI12 = 549;
static const int R_AARCH64_TLSLE_ADD_TPREL_LO12 = 550;
static const int R_AARCH64_TLSLE_ADD_TPREL_LO12_NC = 551;
static const int R_AARCH64_TLSLE_LDST8_TPREL_LO12 = 552;
static const int R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC = 553;
static const int R_AARCH64_TLSLE_LDST16_TPREL_LO12 = 554;
static const int R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC = 555;
static const int R_AARCH64_TLSLE_LDST32_TPREL_LO12 = 556;
static const int R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC = 557;
static const int R_AARCH64_TLSLE_LDST64_TPREL_LO12 = 558;
static const int R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC = 559;
static const int R_AARCH64_TLSDESC_LD_PREL19 = 560;
static const int R_AARCH64_TLSDESC_ADR_PREL21 = 561;
static const int R_AARCH64_TLSDESC_ADR_PAGE21 = 562;
static const int R_AARCH64_TLSDESC_LD64_LO12 = 563;
static const int R_AARCH64_TLSDESC_ADD_LO12 = 564;
static const int R_AARCH64_TLSDESC_OFF_G1 = 565;
static const int R_AARCH64_TLSDESC_OFF_G0_NC = 566;
static const int R_AARCH64_TLSDESC_LDR = 567;
static const int R_AARCH64_TLSDESC_ADD = 568;
static const int R_AARCH64_TLSDESC_CALL = 569;
static const int R_AARCH64_TLSLE_LDST128_TPREL_LO12 = 570;
static const int R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC = 571;
static const int R_AARCH64_TLSLD_LDST128_DTPREL_LO12 = 572;
static const int R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC = 573;
static const int R_AARCH64_COPY = 1024;
static const int R_AARCH64_GLOB_DAT = 1025;
static const int R_AARCH64_JUMP_SLOT = 1026;
static const int R_AARCH64_RELATIVE = 1027;
static const int R_AARCH64_TLS_DTPMOD64 = 1028;
static const int R_AARCH64_TLS_DTPREL64 = 1029;
static const int R_AARCH64_TLS_TPREL64 = 1030;
static const int R_AARCH64_TLSDESC = 1031;
static const int R_ARM_NONE = 0;
static const int R_ARM_PC24 = 1;
static const int R_ARM_ABS32 = 2;
static const int R_ARM_REL32 = 3;
static const int R_ARM_PC13 = 4;
static const int R_ARM_ABS16 = 5;
static const int R_ARM_ABS12 = 6;
static const int R_ARM_THM_ABS5 = 7;
static const int R_ARM_ABS8 = 8;
static const int R_ARM_SBREL32 = 9;
static const int R_ARM_THM_PC22 = 10;
static const int R_ARM_THM_PC8 = 11;
static const int R_ARM_AMP_VCALL9 = 12;
static const int R_ARM_TLS_DESC = 13;
static const int R_ARM_THM_SWI8 = 14;
static const int R_ARM_XPC25 = 15;
static const int R_ARM_THM_XPC22 = 16;
static const int R_ARM_TLS_DTPMOD32 = 17;
static const int R_ARM_TLS_DTPOFF32 = 18;
static const int R_ARM_TLS_TPOFF32 = 19;
static const int R_ARM_COPY = 20;
static const int R_ARM_GLOB_DAT = 21;
static const int R_ARM_JUMP_SLOT = 22;
static const int R_ARM_RELATIVE = 23;
static const int R_ARM_GOTOFF = 24;
static const int R_ARM_GOTPC = 25;
static const int R_ARM_GOT32 = 26;
static const int R_ARM_PLT32 = 27;
static const int R_ARM_CALL = 28;
static const int R_ARM_JUMP24 = 29;
static const int R_ARM_THM_JUMP24 = 30;
static const int R_ARM_BASE_ABS = 31;
static const int R_ARM_ALU_PCREL_7_0 = 32;
static const int R_ARM_ALU_PCREL_15_8 = 33;
static const int R_ARM_ALU_PCREL_23_15 = 34;
static const int R_ARM_LDR_SBREL_11_0 = 35;
static const int R_ARM_ALU_SBREL_19_12 = 36;
static const int R_ARM_ALU_SBREL_27_20 = 37;
static const int R_ARM_TARGET1 = 38;
static const int R_ARM_SBREL31 = 39;
static const int R_ARM_V4BX = 40;
static const int R_ARM_TARGET2 = 41;
static const int R_ARM_PREL31 = 42;
static const int R_ARM_MOVW_ABS_NC = 43;
static const int R_ARM_MOVT_ABS = 44;
static const int R_ARM_MOVW_PREL_NC = 45;
static const int R_ARM_MOVT_PREL = 46;
static const int R_ARM_THM_MOVW_ABS_NC = 47;
static const int R_ARM_THM_MOVT_ABS = 48;
static const int R_ARM_THM_MOVW_PREL_NC = 49;
static const int R_ARM_THM_MOVT_PREL = 50;
static const int R_ARM_THM_JUMP19 = 51;
static const int R_ARM_THM_JUMP6 = 52;
static const int R_ARM_THM_ALU_PREL_11_0 = 53;
static const int R_ARM_THM_PC12 = 54;
static const int R_ARM_ABS32_NOI = 55;
static const int R_ARM_REL32_NOI = 56;
static const int R_ARM_ALU_PC_G0_NC = 57;
static const int R_ARM_ALU_PC_G0 = 58;
static const int R_ARM_ALU_PC_G1_NC = 59;
static const int R_ARM_ALU_PC_G1 = 60;
static const int R_ARM_ALU_PC_G2 = 61;
static const int R_ARM_LDR_PC_G1 = 62;
static const int R_ARM_LDR_PC_G2 = 63;
static const int R_ARM_LDRS_PC_G0 = 64;
static const int R_ARM_LDRS_PC_G1 = 65;
static const int R_ARM_LDRS_PC_G2 = 66;
static const int R_ARM_LDC_PC_G0 = 67;
static const int R_ARM_LDC_PC_G1 = 68;
static const int R_ARM_LDC_PC_G2 = 69;
static const int R_ARM_ALU_SB_G0_NC = 70;
static const int R_ARM_ALU_SB_G0 = 71;
static const int R_ARM_ALU_SB_G1_NC = 72;
static const int R_ARM_ALU_SB_G1 = 73;
static const int R_ARM_ALU_SB_G2 = 74;
static const int R_ARM_LDR_SB_G0 = 75;
static const int R_ARM_LDR_SB_G1 = 76;
static const int R_ARM_LDR_SB_G2 = 77;
static const int R_ARM_LDRS_SB_G0 = 78;
static const int R_ARM_LDRS_SB_G1 = 79;
static const int R_ARM_LDRS_SB_G2 = 80;
static const int R_ARM_LDC_SB_G0 = 81;
static const int R_ARM_LDC_SB_G1 = 82;
static const int R_ARM_LDC_SB_G2 = 83;
static const int R_ARM_MOVW_BREL_NC = 84;
static const int R_ARM_MOVT_BREL = 85;
static const int R_ARM_MOVW_BREL = 86;
static const int R_ARM_THM_MOVW_BREL_NC = 87;
static const int R_ARM_THM_MOVT_BREL = 88;
static const int R_ARM_THM_MOVW_BREL = 89;
static const int R_ARM_TLS_GOTDESC = 90;
static const int R_ARM_TLS_CALL = 91;
static const int R_ARM_TLS_DESCSEQ = 92;
static const int R_ARM_THM_TLS_CALL = 93;
static const int R_ARM_PLT32_ABS = 94;
static const int R_ARM_GOT_ABS = 95;
static const int R_ARM_GOT_PREL = 96;
static const int R_ARM_GOT_BREL12 = 97;
static const int R_ARM_GOTOFF12 = 98;
static const int R_ARM_GOTRELAX = 99;
static const int R_ARM_GNU_VTENTRY = 100;
static const int R_ARM_GNU_VTINHERIT = 101;
static const int R_ARM_THM_PC11 = 102;
static const int R_ARM_THM_PC9 = 103;
static const int R_ARM_TLS_GD32 = 104;
static const int R_ARM_TLS_LDM32 = 105;
static const int R_ARM_TLS_LDO32 = 106;
static const int R_ARM_TLS_IE32 = 107;
static const int R_ARM_TLS_LE32 = 108;
static const int R_ARM_TLS_LDO12 = 109;
static const int R_ARM_TLS_LE12 = 110;
static const int R_ARM_TLS_IE12GP = 111;
static const int R_ARM_ME_TOO = 128;
static const int R_ARM_THM_TLS_DESCSEQ = 129;
static const int R_ARM_THM_TLS_DESCSEQ16 = 129;
static const int R_ARM_THM_TLS_DESCSEQ32 = 130;
static const int R_ARM_THM_GOT_BREL12 = 131;
static const int R_ARM_IRELATIVE = 160;
static const int R_ARM_RXPC25 = 249;
static const int R_ARM_RSBREL32 = 250;
static const int R_ARM_THM_RPC22 = 251;
static const int R_ARM_RREL32 = 252;
static const int R_ARM_RABS22 = 253;
static const int R_ARM_RPC24 = 254;
static const int R_ARM_RBASE = 255;
static const int R_ARM_NUM = 256;
static const int EF_IA_64_MASKOS = 0x0000000f;
static const int EF_IA_64_ABI64 = 0x00000010;
static const int EF_IA_64_ARCH = 0xff000000;
static const int PF_IA_64_NORECOV = 0x80000000;
static const int SHF_IA_64_SHORT = 0x10000000;
static const int SHF_IA_64_NORECOV = 0x20000000;
static const int DT_IA_64_NUM = 1;
static const int R_IA64_NONE = 0x00;
static const int R_IA64_IMM14 = 0x21;
static const int R_IA64_IMM22 = 0x22;
static const int R_IA64_IMM64 = 0x23;
static const int R_IA64_DIR32MSB = 0x24;
static const int R_IA64_DIR32LSB = 0x25;
static const int R_IA64_DIR64MSB = 0x26;
static const int R_IA64_DIR64LSB = 0x27;
static const int R_IA64_GPREL22 = 0x2a;
static const int R_IA64_GPREL64I = 0x2b;
static const int R_IA64_GPREL32MSB = 0x2c;
static const int R_IA64_GPREL32LSB = 0x2d;
static const int R_IA64_GPREL64MSB = 0x2e;
static const int R_IA64_GPREL64LSB = 0x2f;
static const int R_IA64_LTOFF22 = 0x32;
static const int R_IA64_LTOFF64I = 0x33;
static const int R_IA64_PLTOFF22 = 0x3a;
static const int R_IA64_PLTOFF64I = 0x3b;
static const int R_IA64_PLTOFF64MSB = 0x3e;
static const int R_IA64_PLTOFF64LSB = 0x3f;
static const int R_IA64_FPTR64I = 0x43;
static const int R_IA64_FPTR32MSB = 0x44;
static const int R_IA64_FPTR32LSB = 0x45;
static const int R_IA64_FPTR64MSB = 0x46;
static const int R_IA64_FPTR64LSB = 0x47;
static const int R_IA64_PCREL60B = 0x48;
static const int R_IA64_PCREL21B = 0x49;
static const int R_IA64_PCREL21M = 0x4a;
static const int R_IA64_PCREL21F = 0x4b;
static const int R_IA64_PCREL32MSB = 0x4c;
static const int R_IA64_PCREL32LSB = 0x4d;
static const int R_IA64_PCREL64MSB = 0x4e;
static const int R_IA64_PCREL64LSB = 0x4f;
static const int R_IA64_LTOFF_FPTR22 = 0x52;
static const int R_IA64_LTOFF_FPTR64I = 0x53;
static const int R_IA64_LTOFF_FPTR32MSB = 0x54;
static const int R_IA64_LTOFF_FPTR32LSB = 0x55;
static const int R_IA64_LTOFF_FPTR64MSB = 0x56;
static const int R_IA64_LTOFF_FPTR64LSB = 0x57;
static const int R_IA64_SEGREL32MSB = 0x5c;
static const int R_IA64_SEGREL32LSB = 0x5d;
static const int R_IA64_SEGREL64MSB = 0x5e;
static const int R_IA64_SEGREL64LSB = 0x5f;
static const int R_IA64_SECREL32MSB = 0x64;
static const int R_IA64_SECREL32LSB = 0x65;
static const int R_IA64_SECREL64MSB = 0x66;
static const int R_IA64_SECREL64LSB = 0x67;
static const int R_IA64_REL32MSB = 0x6c;
static const int R_IA64_REL32LSB = 0x6d;
static const int R_IA64_REL64MSB = 0x6e;
static const int R_IA64_REL64LSB = 0x6f;
static const int R_IA64_LTV32MSB = 0x74;
static const int R_IA64_LTV32LSB = 0x75;
static const int R_IA64_LTV64MSB = 0x76;
static const int R_IA64_LTV64LSB = 0x77;
static const int R_IA64_PCREL21BI = 0x79;
static const int R_IA64_PCREL22 = 0x7a;
static const int R_IA64_PCREL64I = 0x7b;
static const int R_IA64_IPLTMSB = 0x80;
static const int R_IA64_IPLTLSB = 0x81;
static const int R_IA64_COPY = 0x84;
static const int R_IA64_SUB = 0x85;
static const int R_IA64_LTOFF22X = 0x86;
static const int R_IA64_LDXMOV = 0x87;
static const int R_IA64_TPREL14 = 0x91;
static const int R_IA64_TPREL22 = 0x92;
static const int R_IA64_TPREL64I = 0x93;
static const int R_IA64_TPREL64MSB = 0x96;
static const int R_IA64_TPREL64LSB = 0x97;
static const int R_IA64_LTOFF_TPREL22 = 0x9a;
static const int R_IA64_DTPMOD64MSB = 0xa6;
static const int R_IA64_DTPMOD64LSB = 0xa7;
static const int R_IA64_LTOFF_DTPMOD22 = 0xaa;
static const int R_IA64_DTPREL14 = 0xb1;
static const int R_IA64_DTPREL22 = 0xb2;
static const int R_IA64_DTPREL64I = 0xb3;
static const int R_IA64_DTPREL32MSB = 0xb4;
static const int R_IA64_DTPREL32LSB = 0xb5;
static const int R_IA64_DTPREL64MSB = 0xb6;
static const int R_IA64_DTPREL64LSB = 0xb7;
static const int R_IA64_LTOFF_DTPREL22 = 0xba;
static const int R_SH_NONE = 0;
static const int R_SH_DIR32 = 1;
static const int R_SH_REL32 = 2;
static const int R_SH_DIR8WPN = 3;
static const int R_SH_IND12W = 4;
static const int R_SH_DIR8WPL = 5;
static const int R_SH_DIR8WPZ = 6;
static const int R_SH_DIR8BP = 7;
static const int R_SH_DIR8W = 8;
static const int R_SH_DIR8L = 9;
static const int R_SH_SWITCH16 = 25;
static const int R_SH_SWITCH32 = 26;
static const int R_SH_USES = 27;
static const int R_SH_COUNT = 28;
static const int R_SH_ALIGN = 29;
static const int R_SH_CODE = 30;
static const int R_SH_DATA = 31;
static const int R_SH_LABEL = 32;
static const int R_SH_SWITCH8 = 33;
static const int R_SH_GNU_VTINHERIT = 34;
static const int R_SH_GNU_VTENTRY = 35;
static const int R_SH_TLS_GD_32 = 144;
static const int R_SH_TLS_LD_32 = 145;
static const int R_SH_TLS_LDO_32 = 146;
static const int R_SH_TLS_IE_32 = 147;
static const int R_SH_TLS_LE_32 = 148;
static const int R_SH_TLS_DTPMOD32 = 149;
static const int R_SH_TLS_DTPOFF32 = 150;
static const int R_SH_TLS_TPOFF32 = 151;
static const int R_SH_GOT32 = 160;
static const int R_SH_PLT32 = 161;
static const int R_SH_COPY = 162;
static const int R_SH_GLOB_DAT = 163;
static const int R_SH_JMP_SLOT = 164;
static const int R_SH_RELATIVE = 165;
static const int R_SH_GOTOFF = 166;
static const int R_SH_GOTPC = 167;
static const int R_SH_NUM = 256;
static const int R_390_NONE = 0;
static const int R_390_8 = 1;
static const int R_390_12 = 2;
static const int R_390_16 = 3;
static const int R_390_32 = 4;
static const int R_390_PC32 = 5;
static const int R_390_GOT12 = 6;
static const int R_390_GOT32 = 7;
static const int R_390_PLT32 = 8;
static const int R_390_COPY = 9;
static const int R_390_GLOB_DAT = 10;
static const int R_390_JMP_SLOT = 11;
static const int R_390_RELATIVE = 12;
static const int R_390_GOTOFF32 = 13;
static const int R_390_GOTPC = 14;
static const int R_390_GOT16 = 15;
static const int R_390_PC16 = 16;
static const int R_390_PC16DBL = 17;
static const int R_390_PLT16DBL = 18;
static const int R_390_PC32DBL = 19;
static const int R_390_PLT32DBL = 20;
static const int R_390_GOTPCDBL = 21;
static const int R_390_64 = 22;
static const int R_390_PC64 = 23;
static const int R_390_GOT64 = 24;
static const int R_390_PLT64 = 25;
static const int R_390_GOTENT = 26;
static const int R_390_GOTOFF16 = 27;
static const int R_390_GOTOFF64 = 28;
static const int R_390_GOTPLT12 = 29;
static const int R_390_GOTPLT16 = 30;
static const int R_390_GOTPLT32 = 31;
static const int R_390_GOTPLT64 = 32;
static const int R_390_GOTPLTENT = 33;
static const int R_390_PLTOFF16 = 34;
static const int R_390_PLTOFF32 = 35;
static const int R_390_PLTOFF64 = 36;
static const int R_390_TLS_LOAD = 37;
static const int R_390_TLS_GDCALL = 38;
static const int R_390_TLS_LDCALL = 39;
static const int R_390_TLS_GD32 = 40;
static const int R_390_TLS_GD64 = 41;
static const int R_390_TLS_GOTIE12 = 42;
static const int R_390_TLS_GOTIE32 = 43;
static const int R_390_TLS_GOTIE64 = 44;
static const int R_390_TLS_LDM32 = 45;
static const int R_390_TLS_LDM64 = 46;
static const int R_390_TLS_IE32 = 47;
static const int R_390_TLS_IE64 = 48;
static const int R_390_TLS_IEENT = 49;
static const int R_390_TLS_LE32 = 50;
static const int R_390_TLS_LE64 = 51;
static const int R_390_TLS_LDO32 = 52;
static const int R_390_TLS_LDO64 = 53;
static const int R_390_TLS_DTPMOD = 54;
static const int R_390_TLS_DTPOFF = 55;
static const int R_390_TLS_TPOFF = 56;
static const int R_390_20 = 57;
static const int R_390_GOT20 = 58;
static const int R_390_GOTPLT20 = 59;
static const int R_390_TLS_GOTIE20 = 60;
static const int R_390_NUM = 61;
static const int R_CRIS_NONE = 0;
static const int R_CRIS_8 = 1;
static const int R_CRIS_16 = 2;
static const int R_CRIS_32 = 3;
static const int R_CRIS_8_PCREL = 4;
static const int R_CRIS_16_PCREL = 5;
static const int R_CRIS_32_PCREL = 6;
static const int R_CRIS_GNU_VTINHERIT = 7;
static const int R_CRIS_GNU_VTENTRY = 8;
static const int R_CRIS_COPY = 9;
static const int R_CRIS_GLOB_DAT = 10;
static const int R_CRIS_JUMP_SLOT = 11;
static const int R_CRIS_RELATIVE = 12;
static const int R_CRIS_16_GOT = 13;
static const int R_CRIS_32_GOT = 14;
static const int R_CRIS_16_GOTPLT = 15;
static const int R_CRIS_32_GOTPLT = 16;
static const int R_CRIS_32_GOTREL = 17;
static const int R_CRIS_32_PLT_GOTREL = 18;
static const int R_CRIS_32_PLT_PCREL = 19;
static const int R_CRIS_NUM = 20;
static const int R_X86_64_NONE = 0;
static const int R_X86_64_64 = 1;
static const int R_X86_64_PC32 = 2;
static const int R_X86_64_GOT32 = 3;
static const int R_X86_64_PLT32 = 4;
static const int R_X86_64_COPY = 5;
static const int R_X86_64_GLOB_DAT = 6;
static const int R_X86_64_JUMP_SLOT = 7;
static const int R_X86_64_RELATIVE = 8;
static const int R_X86_64_GOTPCREL = 9;
static const int R_X86_64_32 = 10;
static const int R_X86_64_32S = 11;
static const int R_X86_64_16 = 12;
static const int R_X86_64_PC16 = 13;
static const int R_X86_64_8 = 14;
static const int R_X86_64_PC8 = 15;
static const int R_X86_64_DTPMOD64 = 16;
static const int R_X<6_64_DTPOFF64 = 17;
static const int R_X86_64_TPOFF64 = 18;
static const int R_X86_64_TLSGD = 19;
static const int R_X86_64_TLSLD = 20;
static const int R_X86_64_DTPOFF32 = 21;
static const int R_X86_64_GOTTPOFF = 22;
static const int R_X86_64_TPOFF32 = 23;
static const int R_X86_64_PC64 = 24;
static const int R_X86_64_GOTOFF64 = 25;
static const int R_X86_64_GOTPC32 = 26;
static const int R_X86_64_GOT64 = 27;
static const int R_X86_64_GOTPCREL64 = 28;
static const int R_X86_64_GOTPC64 = 29;
static const int R_X86_64_GOTPLT64 = 30;
static const int R_X86_64_PLTOFF64 = 31;
static const int R_X86_64_SIZE32 = 32;
static const int R_X86_64_SIZE64 = 33;
static const int R_X86_64_GOTPC32_TLSDESC = 34;
static const int R_X86_64_TLSDESC_CALL = 35;
static const int R_X86_64_TLSDESC = 36;
static const int R_X86_64_IRELATIVE = 37;
static const int R_X86_64_RELATIVE64 = 38;
static const int R_X86_64_NUM = 39;
static const int R_MN10300_NONE = 0;
static const int R_MN10300_32 = 1;
static const int R_MN10300_16 = 2;
static const int R_MN10300_8 = 3;
static const int R_MN10300_PCREL32 = 4;
static const int R_MN10300_PCREL16 = 5;
static const int R_MN10300_PCREL8 = 6;
static const int R_MN10300_GNU_VTINHERIT = 7;
static const int R_MN10300_GNU_VTENTRY = 8;
static const int R_MN10300_24 = 9;
static const int R_MN10300_GOTPC32 = 10;
static const int R_MN10300_GOTPC16 = 11;
static const int R_MN10300_GOTOFF32 = 12;
static const int R_MN10300_GOTOFF24 = 13;
static const int R_MN10300_GOTOFF16 = 14;
static const int R_MN10300_PLT32 = 15;
static const int R_MN10300_PLT16 = 16;
static const int R_MN10300_GOT32 = 17;
static const int R_MN10300_GOT24 = 18;
static const int R_MN10300_GOT16 = 19;
static const int R_MN10300_COPY = 20;
static const int R_MN10300_GLOB_DAT = 21;
static const int R_MN10300_JMP_SLOT = 22;
static const int R_MN10300_RELATIVE = 23;
static const int R_MN10300_NUM = 24;
static const int R_M32R_NONE = 0;
static const int R_M32R_16 = 1;
static const int R_M32R_32 = 2;
static const int R_M32R_24 = 3;
static const int R_M32R_10_PCREL = 4;
static const int R_M32R_18_PCREL = 5;
static const int R_M32R_26_PCREL = 6;
static const int R_M32R_HI16_ULO = 7;
static const int R_M32R_HI16_SLO = 8;
static const int R_M32R_LO16 = 9;
static const int R_M32R_SDA16 = 10;
static const int R_M32R_GNU_VTINHERIT = 11;
static const int R_M32R_GNU_VTENTRY = 12;
static const int R_M32R_16_RELA = 33;
static const int R_M32R_32_RELA = 34;
static const int R_M32R_24_RELA = 35;
static const int R_M32R_10_PCREL_RELA = 36;
static const int R_M32R_18_PCREL_RELA = 37;
static const int R_M32R_26_PCREL_RELA = 38;
static const int R_M32R_HI16_ULO_RELA = 39;
static const int R_M32R_HI16_SLO_RELA = 40;
static const int R_M32R_LO16_RELA = 41;
static const int R_M32R_SDA16_RELA = 42;
static const int R_M32R_RELA_GNU_VTINHERIT = 43;
static const int R_M32R_RELA_GNU_VTENTRY = 44;
static const int R_M32R_REL32 = 45;
static const int R_M32R_GOT24 = 48;
static const int R_M32R_26_PLTREL = 49;
static const int R_M32R_COPY = 50;
static const int R_M32R_GLOB_DAT = 51;
static const int R_M32R_JMP_SLOT = 52;
static const int R_M32R_RELATIVE = 53;
static const int R_M32R_GOTOFF = 54;
static const int R_M32R_GOTPC24 = 55;
static const int R_M32R_GOT16_HI_ULO = 56;
static const int R_M32R_GOT16_HI_SLO = 57;
static const int R_M32R_GOT16_LO = 58;
static const int R_M32R_GOTPC_HI_ULO = 59;
static const int R_M32R_GOTPC_HI_SLO = 60;
static const int R_M32R_GOTPC_LO = 61;
static const int R_M32R_GOTOFF_HI_ULO = 62;
static const int R_M32R_GOTOFF_HI_SLO = 63;
static const int R_M32R_GOTOFF_LO = 64;
static const int R_M32R_NUM = 256;
static const int R_MICROBLAZE_NONE = 0;
static const int R_MICROBLAZE_32 = 1;
static const int R_MICROBLAZE_32_PCREL = 2;
static const int R_MICROBLAZE_64_PCREL = 3;
static const int R_MICROBLAZE_32_PCREL_LO = 4;
static const int R_MICROBLAZE_64 = 5;
static const int R_MICROBLAZE_32_LO = 6;
static const int R_MICROBLAZE_SRO32 = 7;
static const int R_MICROBLAZE_SRW32 = 8;
static const int R_MICROBLAZE_64_NONE = 9;
static const int R_MICROBLAZE_32_SYM_OP_SYM = 10;
static const int R_MICROBLAZE_GNU_VTINHERIT = 11;
static const int R_MICROBLAZE_GNU_VTENTRY = 12;
static const int R_MICROBLAZE_GOTPC_64 = 13;
static const int R_MICROBLAZE_GOT_64 = 14;
static const int R_MICROBLAZE_PLT_64 = 15;
static const int R_MICROBLAZE_REL = 16;
static const int R_MICROBLAZE_JUMP_SLOT = 17;
static const int R_MICROBLAZE_GLOB_DAT = 18;
static const int R_MICROBLAZE_GOTOFF_64 = 19;
static const int R_MICROBLAZE_GOTOFF_32 = 20;
static const int R_MICROBLAZE_COPY = 21;
static const int R_MICROBLAZE_TLS = 22;
static const int R_MICROBLAZE_TLSGD = 23;
static const int R_MICROBLAZE_TLSLD = 24;
static const int R_MICROBLAZE_TLSDTPMOD32 = 25;
static const int R_MICROBLAZE_TLSDTPREL32 = 26;
static const int R_MICROBLAZE_TLSDTPREL64 = 27;
static const int R_MICROBLAZE_TLSGOTTPREL32 = 28;
static const int R_MICROBLAZE_TLSTPREL32 = 29;
static const int R_OR1K_NONE = 0;
static const int R_OR1K_32 = 1;
static const int R_OR1K_16 = 2;
static const int R_OR1K_8 = 3;
static const int R_OR1K_LO_16_IN_INSN = 4;
static const int R_OR1K_HI_16_IN_INSN = 5;
static const int R_OR1K_INSN_REL_26 = 6;
static const int R_OR1K_GNU_VTENTRY = 7;
static const int R_OR1K_GNU_VTINHERIT = 8;
static const int R_OR1K_32_PCREL = 9;
static const int R_OR1K_16_PCREL = 10;
static const int R_OR1K_8_PCREL = 11;
static const int R_OR1K_GOTPC_HI16 = 12;
static const int R_OR1K_GOTPC_LO16 = 13;
static const int R_OR1K_GOT16 = 14;
static const int R_OR1K_PLT26 = 15;
static const inT_PCREL = 19;
static const int R_CRIS_NUM = 20;
static const int R_X86_64_NONE = 0;
static const int R_X86_64_64 = 1;
static const int R_X86_64_PC32 = 2;
static const int R_X86_64_GOT32 = 3;
static const int R_X86_64_PLT32 = 4;
static const int R_X86_64_COPY = 5;
static const int R_X86_64_GLOB_DAT = 6;
static const int R_X86_64_JUMP_SLOT = 7;
static const int R_X86_64_RELATIVE = 8;
static const int R_X86_64_GOTPCREL = 9;
static const int R_X86_64_32 = 10;
static const int R_X86_64_32S = 11;
static const int R_X86_64_16 = 12;
static const int R_X86_64_PC16 = 13;
static const int R_X86_64_8 = 14;
static const int R_X86_64_PC8 = 15;
static const int R_X86_64_DTPMOD64 = 16;
static const int R_X<6_64_DTPOFF64 = 17;
static const int R_X86_64_TPOFF64 = 18;
static const int R_X86_64_TLSGD = 19;
static const int R_X86_64_TLSLD = 20;
static const int R_X86_64_DTPOFF32 = 21;
static const int R_X86_64_GOTTPOFF = 22;
static const int R_X86_64_TPOFF32 = 23;
static const int R_X86_64_PC64 = 24;
static const int R_X86_64_GOTOFF64 = 25;
static const int R_X86_64_GOTPC32 = 26;
static const int R_X86_64_GOT64 = 27;
static const int R_X86_64_GOTPCREL64 = 28;
static const int R_X86_64_GOTPC64 = 29;
static const int R_X86_64_GOTPLT64 = 30;
static const int R_X86_64_PLTOFF64 = 31;
static const int R_X86_64_SIZE32 = 32;
static const int R_X86_64_SIZE64 = 33;
static const int R_X86_64_GOTPC32_TLSDESC = 34;
static const int R_X86_64_TLSDESC_CALL = 35;
static const int R_X86_64_TLSDESC = 36;
static const int R_X86_64_IRELATIVE = 37;
static const int R_X86_64_RELATIVE64 = 38;
static const int R_X86_64_NUM = 39;
static const int R_MN10300_NONE = 0;
static const int R_MN10300_32 = 1;
static const int R_MN10300_16 = 2;
static const int R_MN10300_8 = 3;
static const int R_MN10300_PCREL32 = 4;
static const int R_MN10300_PCREL16 = 5;
static const int R_MN10300_PCREL8 = 6;
static const int R_MN10300_GNU_VTINHERIT = 7;
static const int R_MN10300_GNU_VTENTRY = 8;
static const int R_MN10300_24 = 9;
static const int R_MN10300_GOTPC32 = 10;
static const int R_MN10300_GOTPC16 = 11;
static const int R_MN10300_GOTOFF32 = 12;
static const int R_MN10300_GOTOFF24 = 13;
static const int R_MN10300_GOTOFF16 = 14;
static const int R_MN10300_PLT32 = 15;
static const int R_MN10300_PLT16 = 16;
static const int R_MN10300_GOT32 = 17;
static const int R_MN10300_GOT24 = 18;
static const int R_MN10300_GOT16 = 19;
static const int R_MN10300_COPY = 20;
static const int R_MN10300_GLOB_DAT = 21;
static const int R_MN10300_JMP_SLOT = 22;
static const int R_MN10300_RELATIVE = 23;
static const int R_MN10300_NUM = 24;
static const int R_M32R_NONE = 0;
static const int R_M32R_16 = 1;
static const int R_M32R_32 = 2;
static const int R_M32R_24 = 3;
static const int R_M32R_10_PCREL = 4;
static const int R_M32R_18_PCREL = 5;
static const int R_M32R_26_PCREL = 6;
static const int R_M32R_HI16_ULO = 7;
static const int R_M32R_HI16_SLO = 8;
static const int R_M32R_LO16 = 9;
static const int R_M32R_SDA16 = 10;
static const int R_M32R_GNU_VTINHERIT = 11;
static const int R_M32R_GNU_VTENTRY = 12;
static const int R_M32R_16_RELA = 33;
static const int R_M32R_32_RELA = 34;
static const int R_M32R_24_RELA = 35;
static const int R_M32R_10_PCREL_RELA = 36;
static const int R_M32R_18_PCREL_RELA = 37;
static const int R_M32R_26_PCREL_RELA = 38;
static const int R_M32R_HI16_ULO_RELA = 39;
static const int R_M32R_HI16_SLO_RELA = 40;
static const int R_M32R_LO16_RELA = 41;
static const int R_M32R_SDA16_RELA = 42;
static const int R_M32R_RELA_GNU_VTINHERIT = 43;
static const int R_M32R_RELA_GNU_VTENTRY = 44;
static const int R_M32R_REL32 = 45;
static const int R_M32R_GOT24 = 48;
static const int R_M32R_26_PLTREL = 49;
static const int R_M32R_COPY = 50;
static const int R_M32R_GLOB_DAT = 51;
static const int R_M32R_JMP_SLOT = 52;
static const int R_M32R_RELATIVE = 53;
static const int R_M32R_GOTOFF = 54;
static const int R_M32R_GOTPC24 = 55;
static const int R_M32R_GOT16_HI_ULO = 56;
static const int R_M32R_GOT16_HI_SLO = 57;
static const int R_M32R_GOT16_LO = 58;
static const int R_M32R_GOTPC_HI_ULO = 59;
static const int R_M32R_GOTPC_HI_SLO = 60;
static const int R_M32R_GOTPC_LO = 61;
static const int R_M32R_GOTOFF_HI_ULO = 62;
static const int R_M32R_GOTOFF_HI_SLO = 63;
static const int R_M32R_GOTOFF_LO = 64;
static const int R_M32R_NUM = 256;
static const int R_MICROBLAZE_NONE = 0;
static const int R_MICROBLAZE_32 = 1;
static const int R_MICROBLAZE_32_PCREL = 2;
static const int R_MICROBLAZE_64_PCREL = 3;
static const int R_MICROBLAZE_32_PCREL_LO = 4;
static const int R_MICROBLAZE_64 = 5;
static const int R_MICROBLAZE_32_LO = 6;
static const int R_MICROBLAZE_SRO32 = 7;
static const int R_MICROBLAZE_SRW32 = 8;
static const int R_MICROBLAZE_64_NONE = 9;
static const int R_MICROBLAZE_32_SYM_OP_SYM = 10;
static const int R_MICROBLAZE_GNU_VTINHERIT = 11;
static const int R_MICROBLAZE_GNU_VTENTRY = 12;
static const int R_MICROBLAZE_GOTPC_64 = 13;
static const int R_MICROBLAZE_GOT_64 = 14;
static const int R_MICROBLAZE_PLT_64 = 15;
static const int R_MICROBLAZE_REL = 16;
static const int R_MICROBLAZE_JUMP_SLOT = 17;
static const int R_MICROBLAZE_GLOB_DAT = 18;
static const int R_MICROBLAZE_GOTOFF_64 = 19;
static const int R_MICROBLAZE_GOTOFF_32 = 20;
static const int R_MICROBLAZE_COPY = 21;
static const int R_MICROBLAZE_TLS = 22;
static const int R_MICROBLAZE_TLSGD = 23;
static const int R_MICROBLAZE_TLSLD = 24;
static const int R_MICROBLAZE_TLSDTPMOD32 = 25;
static const int R_MICROBLAZE_TLSDTPREL32 = 26;
static const int R_MICROBLAZE_TLSDTPREL64 = 27;
static const int R_MICROBLAZE_TLSGOTTPREL32 = 28;
static const int R_MICROBLAZE_TLSTPREL32 = 29;
static const int R_OR1K_NONE = 0;
static const int R_OR1K_32 = 1;
static const int R_OR1K_16 = 2;
static const int R_OR1K_8 = 3;
static const int R_OR1K_LO_16_IN_INSN = 4;
static const int R_OR1K_HI_16_IN_INSN = 5;
static const int R_OR1K_INSN_REL_26 = 6;
static const int R_OR1K_GNU_VTENTRY = 7;
static const int R_OR1K_GNU_VTINHERIT = 8;
static const int R_OR1K_32_PCREL = 9;
static const int R_OR1K_16_PCREL = 10;
static const int R_OR1K_8_PCREL = 11;
static const int R_OR1K_GOTPC_HI16 = 12;
static const int R_OR1K_GOTPC_LO16 = 13;
static const int R_OR1K_GOT16 = 14;
static const int R_OR1K_PLT26 = 15;
static const int R_OR1K_GOTOFF_HI16 = 16;
static const int R_OR1K_GOTOFF_LO16 = 17;
static const int R_OR1K_COPY = 18;
static const int R_OR1K_GLOB_DAT = 19;
static const int R_OR1K_JMP_SLOT = 20;
static const int R_OR1K_RELATIVE = 21;
static const int R_OR1K_TLS_GD_HI16 = 22;
static const int R_OR1K_TLS_GD_LO16 = 23;
static const int R_OR1K_TLS_LDM_HI16 = 24;
static const int R_OR1K_TLS_LDM_LO16 = 25;
static const int R_OR1K_TLS_LDO_HI16 = 26;
static const int R_OR1K_TLS_LDO_LO16 = 27;
static const int R_OR1K_TLS_IE_HI16 = 28;
static const int R_OR1K_TLS_IE_LO16 = 29;
static const int R_OR1K_TLS_LE_HI16 = 30;
static const int R_OR1K_TLS_LE_LO16 = 31;
static const int R_OR1K_TLS_TPOFF = 32;
static const int R_OR1K_TLS_DTPOFF = 33;
]]

return E
