--[[
    This file is the result of some processing through
    testy/elfmorph.lua

    primarily to get the #defines related to constants
    turning into static const int
--]]

local ffi = require("ffi")
local bit = require("bit")
local band, lshift, rshift = bit.band, bit.lshift, bit.rshift

local E = {}  -- things to be exported

ffi.cdef[[
typedef uint16_t Elf32_Half;
typedef uint16_t Elf64_Half;
typedef uint32_t Elf32_Word;
typedef	int32_t  Elf32_Sword;
typedef uint32_t Elf64_Word;
typedef	int32_t  Elf64_Sword;
typedef uint64_t Elf32_Xword;
typedef	int64_t  Elf32_Sxword;
typedef uint64_t Elf64_Xword;
typedef	int64_t  Elf64_Sxword;
typedef uint32_t Elf32_Addr;
typedef uint64_t Elf64_Addr;
typedef uint32_t Elf32_Off;
typedef uint64_t Elf64_Off;
typedef uint16_t Elf32_Section;
typedef uint16_t Elf64_Section;
typedef Elf32_Half Elf32_Versym;
typedef Elf64_Half Elf64_Versym;
]]
ffi.cdef[[
static const int EI_NIDENT = 16;
]]
ffi.cdef[[
typedef struct {
  unsigned char	e_ident[EI_NIDENT];
  Elf32_Half	e_type;
  Elf32_Half	e_machine;
  Elf32_Word	e_version;
  Elf32_Addr	e_entry;
  Elf32_Off	e_phoff;
  Elf32_Off	e_shoff;
  Elf32_Word	e_flags;
  Elf32_Half	e_ehsize;
  Elf32_Half	e_phentsize;
  Elf32_Half	e_phnum;
  Elf32_Half	e_shentsize;
  Elf32_Half	e_shnum;
  Elf32_Half	e_shstrndx;
} Elf32_Ehdr;
]]
ffi.cdef[[
typedef struct {
  unsigned char	e_ident[EI_NIDENT];
  Elf64_Half	e_type;
  Elf64_Half	e_machine;
  Elf64_Word	e_version;
  Elf64_Addr	e_entry;
  Elf64_Off	e_phoff;
  Elf64_Off	e_shoff;
  Elf64_Word	e_flags;
  Elf64_Half	e_ehsize;
  Elf64_Half	e_phentsize;
  Elf64_Half	e_phnum;
  Elf64_Half	e_shentsize;
  Elf64_Half	e_shnum;
  Elf64_Half	e_shstrndx;
} Elf64_Ehdr;
]]

ffi.cdef[[
static const int EI_MAG0 = 0;
static const int ELFMAG0 = 0x7f;
static const int EI_MAG1 = 1;
static const int ELFMAG1 = 'E';
static const int EI_MAG2 = 2;
static const int ELFMAG2 = 'L';
static const int EI_MAG3 = 3;
static const int ELFMAG3 = 'F';
]]

E.ELFMAG		="\177ELF";

ffi.cdef[[
static const int SELFMAG = 4;
static const int EI_CLASS = 4;
static const int ELFCLASSNONE = 0;
static const int ELFCLASS32 = 1;
static const int ELFCLASS64 = 2;
static const int ELFCLASSNUM = 3;
static const int EI_DATA = 5;
static const int ELFDATANONE = 0;
static const int ELFDATA2LSB = 1;
static const int ELFDATA2MSB = 2;
static const int ELFDATANUM = 3;
static const int EI_VERSION = 6;
static const int EI_OSABI = 7;
static const int ELFOSABI_NONE = 0;
static const int ELFOSABI_SYSV = 0;
static const int ELFOSABI_HPUX = 1;
static const int ELFOSABI_NETBSD = 2;
static const int ELFOSABI_LINUX = 3;
static const int ELFOSABI_GNU = 3;
static const int ELFOSABI_SOLARIS = 6;
static const int ELFOSABI_AIX = 7;
static const int ELFOSABI_IRIX = 8;
static const int ELFOSABI_FREEBSD = 9;
static const int ELFOSABI_TRU64 = 10;
static const int ELFOSABI_MODESTO = 11;
static const int ELFOSABI_OPENBSD = 12;
static const int ELFOSABI_ARM = 97;
static const int ELFOSABI_STANDALONE = 255;
static const int EI_ABIVERSION = 8;
static const int EI_PAD = 9;
static const int ET_NONE = 0;
static const int ET_REL = 1;
static const int ET_EXEC = 2;
static const int ET_DYN = 3;
static const int ET_CORE = 4;
static const int ET_NUM = 5;
static const int ET_LOOS = 0xfe00;
static const int ET_HIOS = 0xfeff;
static const int ET_LOPROC = 0xff00;
static const int ET_HIPROC = 0xffff;
static const int EM_NONE = 0;
static const int EM_M32 = 1;
static const int EM_SPARC = 2;
static const int EM_386 = 3;
static const int EM_68K = 4;
static const int EM_88K = 5;
static const int EM_860 = 7;
static const int EM_MIPS = 8;
static const int EM_S370 = 9;
static const int EM_MIPS_RS3_LE = 10;
static const int EM_PARISC = 15;
static const int EM_VPP500 = 17;
static const int EM_SPARC32PLUS = 18;
static const int EM_960 = 19;
static const int EM_PPC = 20;
static const int EM_PPC64 = 21;
static const int EM_S390 = 22;
static const int EM_V800 = 36;
static const int EM_FR20 = 37;
static const int EM_RH32 = 38;
static const int EM_RCE = 39;
static const int EM_ARM = 40;
static const int EM_FAKE_ALPHA = 41;
static const int EM_SH = 42;
static const int EM_SPARCV9 = 43;
static const int EM_TRICORE = 44;
static const int EM_ARC = 45;
static const int EM_H8_300 = 46;
static const int EM_H8_300H = 47;
static const int EM_H8S = 48;
static const int EM_H8_500 = 49;
static const int EM_IA_64 = 50;
static const int EM_MIPS_X = 51;
static const int EM_COLDFIRE = 52;
static const int EM_68HC12 = 53;
static const int EM_MMA = 54;
static const int EM_PCP = 55;
static const int EM_NCPU = 56;
static const int EM_NDR1 = 57;
static const int EM_STARCORE = 58;
static const int EM_ME16 = 59;
static const int EM_ST100 = 60;
static const int EM_TINYJ = 61;
static const int EM_X86_64 = 62;
static const int EM_PDSP = 63;
static const int EM_FX66 = 66;
static const int EM_ST9PLUS = 67;
static const int EM_ST7 = 68;
static const int EM_68HC16 = 69;
static const int EM_68HC11 = 70;
static const int EM_68HC08 = 71;
static const int EM_68HC05 = 72;
static const int EM_SVX = 73;
static const int EM_ST19 = 74;
static const int EM_VAX = 75;
static const int EM_CRIS = 76;
static const int EM_JAVELIN = 77;
static const int EM_FIREPATH = 78;
static const int EM_ZSP = 79;
static const int EM_MMIX = 80;
static const int EM_HUANY = 81;
static const int EM_PRISM = 82;
static const int EM_AVR = 83;
static const int EM_FR30 = 84;
static const int EM_D10V = 85;
static const int EM_D30V = 86;
static const int EM_V850 = 87;
static const int EM_M32R = 88;
static const int EM_MN10300 = 89;
static const int EM_MN10200 = 90;
static const int EM_PJ = 91;
static const int EM_OR1K = 92;
static const int EM_ARC_A5 = 93;
static const int EM_XTENSA = 94;
static const int EM_AARCH64 = 183;
static const int EM_TILEPRO = 188;
static const int EM_MICROBLAZE = 189;
static const int EM_TILEGX = 191;
static const int EM_NUM = 192;
static const int EM_ALPHA = 0x9026;
static const int EV_NONE = 0;
static const int EV_CURRENT = 1;
static const int EV_NUM = 2;
]]


ffi.cdef[[
typedef struct {
  Elf32_Word	sh_name;
  Elf32_Word	sh_type;
  Elf32_Word	sh_flags;
  Elf32_Addr	sh_addr;
  Elf32_Off	sh_offset;
  Elf32_Word	sh_size;
  int R_SPARC_6 = 45;
static const int R_SPARC_DISP64 = 46;
static const int R_SPARC_PLT64 = 47;
static const int R_SPARC_HIX22 = 48;
static const int R_SPARC_LOX10 = 49;
static const int R_SPARC_H44 = 50;
static const int R_SPARC_M44 = 51;
static const int R_SPARC_L44 = 52;
static const int R_SPARC_REGISTER = 53;
static const int R_SPARC_UA64 = 54;
static const int R_SPARC_UA16 = 55;
static const int R_SPARC_TLS_GD_HI22 = 56;
static const int R_SPARC_TLS_GD_LO10 = 57;
static const int R_SPARC_TLS_GD_ADD = 58;
static const int R_SPARC_TLS_GD_CALL = 59;
static const int R_SPARC_TLS_LDM_HI22 = 60;
static const int R_SPARC_TLS_LDM_LO10 = 61;
static const int R_SPARC_TLS_LDM_ADD = 62;
static const int R_SPARC_TLS_LDM_CALL = 63;
static const int R_SPARC_TLS_LDO_HIX22 = 64;
static const int R_SPARC_TLS_LDO_LOX10 = 65;
static const int R_SPARC_TLS_LDO_ADD = 66;
static const int R_SPARC_TLS_IE_HI22 = 67;
static const int R_SPARC_TLS_IE_LO10 = 68;
static const int R_SPARC_TLS_IE_LD = 69;
static const int R_SPARC_TLS_IE_LDX = 70;
static const int R_SPARC_TLS_IE_ADD = 71;
static const int R_SPARC_TLS_LE_HIX22 = 72;
static const int R_SPARC_TLS_LE_LOX10 = 73;
static const int R_SPARC_TLS_DTPMOD32 = 74;
static const int R_SPARC_TLS_DTPMOD64 = 75;
static const int R_SPARC_TLS_DTPOFF32 = 76;
static const int R_SPARC_TLS_DTPOFF64 = 77;
static const int R_SPARC_TLS_TPOFF32 = 78;
static const int R_SPARC_TLS_TPOFF64 = 79;
static const int R_SPARC_GOTDATA_HIX22 = 80;
static const int R_SPARC_GOTDATA_LOX10 = 81;
static const int R_SPARC_GOTDATA_OP_HIX22 = 82;
static const int R_SPARC_GOTDATA_OP_LOX10 = 83;
static const int R_SPARC_GOTDATA_OP = 84;
static const int R_SPARC_H34 = 85;
static const int R_SPARC_SIZE32 = 86;
static const int R_SPARC_SIZE64 = 87;
static const int R_SPARC_GNU_VTINHERIT = 250;
static const int R_SPARC_GNU_VTENTRY = 251;
static const int R_SPARC_REV32 = 252;
static const int R_SPARC_NUM = 253;
static const int DT_SPARC_REGISTER = 0x70000001;
static const int DT_SPARC_NUM = 2;
static const int EF_MIPS_NOREORDER = 1;
static const int EF_MIPS_PIC = 2;
static const int EF_MIPS_CPIC = 4;
static const int EF_MIPS_XGOT = 8;
static const int EF_MIPS_64BIT_WHIRL = 16;
static const int EF_MIPS_ABI2 = 32;
static const int EF_MIPS_ABI_ON32 = 64;
static const int EF_MIPS_NAN2008 = 1024;
static const int EF_MIPS_ARCH = 0xf0000000;
static const int EF_MIPS_ARCH_1 = 0x00000000;
static const int EF_MIPS_ARCH_2 = 0x10000000;
static const int EF_MIPS_ARCH_3 = 0x20000000;
static const int EF_MIPS_ARCH_4 = 0x30000000;
static const int EF_MIPS_ARCH_5 = 0x40000000;
static const int EF_MIPS_ARCH_32 = 0x50000000;
static const int EF_MIPS_ARCH_64 = 0x60000000;
static const int EF_MIPS_ARCH_32R2 = 0x70000000;
static const int EF_MIPS_ARCH_64R2 = 0x80000000;
static const int E_MIPS_ARCH_1 = 0x00000000;
static const int E_MIPS_ARCH_2 = 0x10000000;
static const int E_MIPS_ARCH_3 = 0x20000000;
static const int E_MIPS_ARCH_4 = 0x30000000;
static const int E_MIPS_ARCH_5 = 0x40000000;
static const int E_MIPS_ARCH_32 = 0x50000000;
static const int E_MIPS_ARCH_64 = 0x60000000;
static const int SHN_MIPS_ACOMMON = 0xff00;
static const int SHN_MIPS_TEXT = 0xff01;
static const int SHN_MIPS_DATA = 0xff02;
static const int SHN_MIPS_SCOMMON = 0xff03;
static const int SHN_MIPS_SUNDEFINED = 0xff04;
static const int SHT_MIPS_LIBLIST = 0x70000000;
static const int SHT_MIPS_MSYM = 0x70000001;
static const int SHT_MIPS_CONFLICT = 0x70000002;
static const int SHT_MIPS_GPTAB = 0x70000003;
static const int SHT_MIPS_UCODE = 0x70000004;
static const int SHT_MIPS_DEBUG = 0x70000005;
static const int SHT_MIPS_REGINFO = 0x70000006;
static const int SHT_MIPS_PACKAGE = 0x70000007;
static const int SHT_MIPS_PACKSYM = 0x70000008;
static const int SHT_MIPS_RELD = 0x70000009;
static const int SHT_MIPS_IFACE = 0x7000000b;
static const int SHT_MIPS_CONTENT = 0x7000000c;
static const int SHT_MIPS_OPTIONS = 0x7000000d;
static const int SHT_MIPS_SHDR = 0x70000010;
static const int SHT_MIPS_FDESC = 0x70000011;
static const int SHT_MIPS_EXTSYM = 0x70000012;
static const int SHT_MIPS_DENSE = 0x70000013;
static const int SHT_MIPS_PDESC = 0x70000014;
static const int SHT_MIPS_LOCSYM = 0x70000015;
static const int SHT_MIPS_AUXSYM = 0x70000016;
static const int SHT_MIPS_OPTSYM = 0x70000017;
static const int SHT_MIPS_LOCSTR = 0x70000018;
static const int SHT_MIPS_LINE = 0x70000019;
static const int SHT_MIPS_RFDESC = 0x7000001a;
static const int SHT_MIPS_DELTASYM = 0x7000001b;
static const int SHT_MIPS_DELTAINST = 0x7000001c;
static const int SHT_MIPS_DELTACLASS = 0x7000001d;
static const int SHT_MIPS_DWARF = 0x7000001e;
static const int SHT_MIPS_DELTADECL = 0x7000001f;
static const int SHT_MIPS_SYMBOL_LIB = 0x70000020;
static const int SHT_MIPS_EVENTS = 0x70000021;
static const int SHT_MIPS_TRANSLATE = 0x70000022;
static const int SHT_MIPS_PIXIE = 0x70000023;
static const int SHT_MIPS_XLATE = 0x70000024;
static const int SHT_MIPS_XLATE_DEBUG = 0x70000025;
static const int SHT_MIPS_WHIRL = 0x70000026;
static const int SHT_MIPS_EH_REGION = 0x70000027;
static const int SHT_MIPS_XLATE_OLD = 0x70000028;
static const int SHT_MIPS_PDR_EXCEPTION = 0x70000029;
static const int SHF_MIPS_GPREL = 0x10000000;
static const int SHF_MIPS_MERGE = 0x20000000;
static const int SHF_MIPS_ADDR = 0x40000000;
static const int SHF_MIPS_STRINGS = 0x80000000;
static const int SHF_MIPS_NOSTRIP = 0x08000000;
static const int SHF_MIPS_LOCAL = 0x04000000;
static const int SHF_MIPS_NAMES = 0x02000000;
static const int SHF_MIPS_NODUPE = 0x01000000;
static const int STO_MIPS_DEFAULT = 0x0;
static const int STO_MIPS_INTERNAL = 0x1;
static const int STO_MIPS_HIDDEN = 0x2;
static const int STO_MIPS_PROTECTED = 0x3;
static const int STO_MIPS_PLT = 0x8;
static const int STO_MIPS_SC_ALIGN_UNUSED = 0xff;
]]

ffi.cdef[[
typedef union {
  struct {
      Elf32_Word gt_current_g_value;
      Elf32_Word gt_unused;
  } gt_header;
  struct {
      Elf32_Word gt_g_value;
      Elf32_Word gt_bytes;
  } gt_entry;
} Elf32_gptab;
typedef struct {
  Elf32_Word	ri_gprmask;
  Elf32_Word	ri_cprmask[4];
  Elf32_Sword	ri_gp_value;
} Elf32_RegInfo;
typedef struct {
  unsigned char kind;
  unsigned char size;
  Elf32_Section section;
  Elf32_Word info;
} Elf_Options;
]]

ffi.cdef[[
static const int ODK_NULL = 0;
static const int ODK_REGINFO = 1;
static const int ODK_EXCEPTIONS = 2;
static const int ODK_PAD = 3;
static const int ODK_HWPATCH = 4;
static const int ODK_FILL = 5;
static const int ODK_TAGS = 6;
otatic const int ODK_HWAND = 7;
static const int ODK_HWOR = 8;
static const int OEX_FPU_MIN = 0x1f;
static const int OEX_FPU_MAX = 0x1f00;
static const int OEX_PAGE0 = 0x10000;
static const int OEX_SMM = 0x20000;
static const int OEX_FPDBUG = 0x40000;
static const int OEX_PRECISEFP = OEX_FPDBUG;
static const int OEX_DISMISS = 0x80000;
static const int OEX_FPU_INVAL = 0x10;
static const int OEX_FPU_DIV0 = 0x08;
static const int OEX_FPU_OFLO = 0x04;
static const int OEX_FPU_UFLO = 0x02;
static const int OEX_FPU_INEX = 0x01;
static const int OHW_R4KEOP = 0x1;
static const int OHW_R8KPFETCH = 0x2;
static const int OHW_R5KEOP = 0x4;
static const int OHW_R5KCVTL = 0x8;
static const int OPAD_PREFIX = 0x1;
static const int OPAD_POSTFIX = 0x2;
]]


ffi.cdef[[
typedef struct {
  Elf32_Word hwp_flags1;
  Elf32_Word hwp_flags2;
} Elf_Options_Hw;
]]

ffi.cdef[[
static const int OHWA0_R4KEOP_CHECKED = 0x00000001;
static const int OHWA1_R4KEOP_CLEAN = 0x00000002;
static const int R_MIPS_NONE = 0;
static const int R_MIPS_16 = 1;
static const int R_MIPS_32 = 2;
static const int R_MIPS_REL32 = 3;
static const int R_MIPS_26 = 4;
static const int R_MIPS_HI16 = 5;
static const int R_MIPS_LO16 = 6;
static const int R_MIPS_GPREL16 = 7;
static const int R_MIPS_LITERAL = 8;
static const int R_MIPS_GOT16 = 9;
static const int R_MIPS_PC16 = 10;
static const int R_MIPS_CALL16 = 11;
static const int R_MIPS_GPREL32 = 12;
static const int R_MIPS_SHIFT5 = 16;
static const int R_MIPS_SHIFT6 = 17;
static const int R_MIPS_64 = 18;
static const int R_MIPS_GOT_DISP = 19;
static const int R_MIPS_GOT_PAGE = 20;
static const int R_MIPS_GOT_OFST = 21;
static const int R_MIPS_GOT_HI16 = 22;
static const int R_MIPS_GOT_LO16 = 23;
static const int R_MIPS_SUB = 24;
static const int R_MIPS_INSERT_A = 25;
static const int R_MIPS_INSERT_B = 26;
static const int R_MIPS_DELETE = 27;
static const int R_MIPS_HIGHER = 28;
static const int R_MIPS_HIGHEST = 29;
static const int R_MIPS_CALL_HI16 = 30;
static const int R_MIPS_CALL_LO16 = 31;
static const int R_MIPS_SCN_DISP = 32;
static const int R_MIPS_REL16 = 33;
static const int R_MIPS_ADD_IMMEDIATE = 34;
static const int R_MIPS_PJUMP = 35;
static const int R_MIPS_RELGOT = 36;
static const int R_MIPS_JALR = 37;
static const int R_MIPS_TLS_DTPMOD32 = 38;
static const int R_MIPS_TLS_DTPREL32 = 39;
static const int R_MIPS_TLS_DTPMOD64 = 40;
static const int R_MIPS_TLS_DTPREL64 = 41;
static const int R_MIPS_TLS_GD = 42;
static const int R_MIPS_TLS_LDM = 43;
static const int R_MIPS_TLS_DTPREL_HI16 = 44;
static const int R_MIPS_TLS_DTPREL_LO16 = 45;
static const int R_MIPS_TLS_GOTTPREL = 46;
static const int R_MIPS_TLS_TPREL32 = 47;
static const int R_MIPS_TLS_TPREL64 = 48;
static const int R_MIPS_TLS_TPREL_HI16 = 49;
static const int R_MIPS_TLS_TPREL_LO16 = 50;
static const int R_MIPS_GLOB_DAT = 51;
static const int R_MIPS_COPY = 126;
static const int R_MIPS_JUMP_SLOT = 127;
static const int R_MIPS_NUM = 128;
static const int PT_MIPS_REGINFO = 0x70000000;
static const int PT_MIPS_RTPROC = 0x70000001;
static const int PT_MIPS_OPTIONS = 0x70000002;
static const int PF_MIPS_LOCAL = 0x10000000;
static const int DT_MIPS_RLD_VERSION = 0x70000001;
static const int DT_MIPS_TIME_STAMP = 0x70000002;
static const int DT_MIPS_ICHECKSUM = 0x70000003;
static const int DT_MIPS_IVERSION = 0x70000004;
static const int DT_MIPS_FLAGS = 0x70000005;
static const int DT_MIPS_BASE_ADDRESS = 0x70000006;
static const int DT_MIPS_MSYM = 0x70000007;
static const int DT_MIPS_CONFLICT = 0x70000008;
static const int DT_MIPS_LIBLIST = 0x70000009;
static const int DT_MIPS_LOCAL_GOTNO = 0x7000000a;
static const int DT_MIPS_CONFLICTNO = 0x7000000b;
static const int DT_MIPS_LIBLISTNO = 0x70000010;
static const int DT_MIPS_SYMTABNO = 0x70000011;
static const int DT_MIPS_UNREFEXTNO = 0x70000012;
static const int DT_MIPS_GOTSYM = 0x70000013;
static const int DT_MIPS_HIPAGENO = 0x70000014;
static const int DT_MIPS_RLD_MAP = 0x70000016;
static const int DT_MIPS_DELTA_CLASS = 0x70000017;
static const int DT_MIPS_DELTA_CLASS_NO = 0x70000018;
static const int DT_MIPS_DELTA_INSTANCE = 0x70000019;
static const int DT_MIPS_DELTA_INSTANCE_NO = 0x7000001a;
static const int DT_MIPS_DELTA_RELOC = 0x7000001b;
static const int DT_MIPS_DELTA_RELOC_NO = 0x7000001c;
static const int DT_MIPS_DELTA_SYM = 0x7000001d;
static const int DT_MIPS_DELTA_SYM_NO = 0x7000001e;
static const int DT_MIPS_DELTA_CLASSSYM = 0x70000020;
static const int DT_MIPS_DELTA_CLASSSYM_NO = 0x70000021;
static const int DT_MIPS_CXX_FLAGS = 0x70000022;
static const int DT_MIPS_PIXIE_INIT = 0x70000023;
static const int DT_MIPS_SYMBOL_LIB = 0x70000024;
static const int DT_MIPS_LOCALPAGE_GOTIDX = 0x70000025;
static const int DT_MIPS_LOCAL_GOTIDX = 0x70000026;
static const int DT_MIPS_HIDDEN_GOTIDX = R_PARISC_LTOFF_FPTR64 = 120;
static const int R_PARISC_LTOFF_FPTR14WR = 123;
static const int R_PARISC_LTOFF_FPTR14DR = 124;
static const int R_PARISC_LTOFF_FPTR16F = 125;
static const int R_PARISC_LTOFF_FPTR16WF = 126;
static const int R_PARISC_LTOFF_FPTR16DF = 127;
static const int R_PARISC_LORESERVE = 128;
static const int R_PARISC_COPY = 128;
static const int R_PARISC_IPLT = 129;
static const int R_PARISC_EPLT = 130;
static const int R_PARISC_TPREL32 = 153;
static const int R_PARISC_TPREL21L = 154;
static const int R_PARISC_TPREL14R = 158;
static const int R_PARISC_LTOFF_TP21L = 162;
static const int R_PARISC_LTOFF_TP14R = 166;
static const int R_PARISC_LTOFF_TP14F = 167;
static const int R_PARISC_TPREL64 = 216;
static const int R_PARISC_TPREL14WR = 219;
static const int R_PARISC_TPREL14DR = 220;
static const int R_PARISC_TPREL16F = 221;
static const int R_PARISC_TPREL16WF = 222;
static const int R_PARISC_TPREL16DF = 223;
static const int R_PARISC_LTOFF_TP64 = 224;
static const int R_PARISC_LTOFF_TP14WR = 227;
static const int R_PARISC_LTOFF_TP14DR = 228;
static const int R_PARISC_LTOFF_TP16F = 229;
static const int R_PARISC_LTOFF_TP16WF = 230;
static const int R_PARISC_LTOFF_TP16DF = 231;
static const int R_PARISC_GNU_VTENTRY = 232;
static const int R_PARISC_GNU_VTINHERIT = 233;
static const int R_PARISC_TLS_GD21L = 234;
static const int R_PARISC_TLS_GD14R = 235;
static const int R_PARISC_TLS_GDCALL = 236;
static const int R_PARISC_TLS_LDM21L = 237;
static const int R_PARISC_TLS_LDM14R = 238;
static const int R_PARISC_TLS_LDMCALL = 239;
static const int R_PARISC_TLS_LDO21L = 240;
static const int R_PARISC_TLS_LDO14R = 241;
static const int R_PARISC_TLS_DTPMOD32 = 242;
static const int R_PARISC_TLS_DTPMOD64 = 243;
static const int R_PARISC_TLS_DTPOFF32 = 244;
static const int R_PARISC_TLS_DTPOFF64 = 245;
static const int R_PARISC_TLS_LE21L = R_PARISC_TPREL21L;
static const int R_PARISC_TLS_LE14R = R_PARISC_TPREL14R;
static const int R_PARISC_TLS_IE21L = R_PARISC_LTOFF_TP21L;
static const int R_PARISC_TLS_IE14R = R_PARISC_LTOFF_TP14R;
static const int R_PARISC_TLS_TPREL32 = R_PARISC_TPREL32;
static const int R_PARISC_TLS_TPREL64 = R_PARISC_TPREL64;
static const int R_PARISC_HIRESERVE = 255;
static const int PT_PARISC_ARCHEXT = 0x70000000;
static const int PT_PARISC_UNWIND = 0x70000001;
static const int PF_PARISC_SBP = 0x08000000;
static const int PF_HP_PAGE_SIZE = 0x00100000;
static const int PF_HP_FAR_SHARED = 0x00200000;
static const int PF_HP_NEAR_SHARED = 0x00400000;
static const int PF_HP_CODE = 0x01000000;
static const int PF_HP_MODIFY = 0x02000000;
static const int PF_HP_LAZYSWAP = 0x04000000;
static const int PF_HP_SBP = 0x08000000;
static const int EF_ALPHA_32BIT = 1;
static const int EF_ALPHA_CANRELAX = 2;
static const int SHT_ALPHA_DEBUG = 0x70000001;
static const int SHT_ALPHA_REGINFO = 0x70000002;
static const int SHF_ALPHA_GPREL = 0x10000000;
static const int STO_ALPHA_NOPV = 0x80;
static const int STO_ALPHA_STD_GPLOAD = 0x88;
static const int R_ALPHA_NONE = 0;
static const int R_ALPHA_REFLONG = 1;
static const int R_ALPHA_REFQUAD = 2;
static const int R_ALPHA_GPREL32 = 3;
static const int R_ALPHA_LITERAL = 4;
static const int R_ALPHA_LITUSE = 5;
static const int R_ALPHA_GPDISP = 6;
static const int R_ALPHA_BRADDR = 7;
static const int R_ALPHA_HINT = 8;
static const int R_ALPHA_SREL16 = 9;
static const int R_ALPHA_SREL32 = 10;
static const int R_ALPHA_SREL64 = 11;
static const int R_ALPHA_GPRELHIGH = 17;
static const int R_ALPHA_GPRELLOW = 18;
static const int R_ALPHA_GPREL16 = 19;
static const int R_ALPHA_COPY = 24;
static const int R_ALPHA_GLOB_DAT = 25;
static const int R_ALPHA_JMP_SLOT = 26;
static const int R_ALPHA_RELATIVE = 27;
static const int R_ALPHA_TLS_GD_HI = 28;
static const int R_ALPHA_TLSGD = 29;
static const int R_ALPHA_TLS_LDM = 30;
static const int R_ALPHA_DTPMOD64 = 31;
static const int R_ALPHA_GOTDTPREL = 32;
static const int R_ALPHA_DTPREL64 = 33;
static const int R_ALPHA_DTPRELHI = 34;
static const int R_ALPHA_DTPRELLO = 35;
static const int R_ALPHA_DTPREL16 = 36;
static const int R_ALPHA_GOTTPREL = 37;
static const int R_ALPHA_TPREL64 = 38;
static const int R_ALPHA_TPRELHI = 39;
static const int R_ALPHA_TPRELLO = 40;
static const int R_ALPHA_TPREL16 = 41;
static const int R_ALPHA_NUM = 46;
static const int LITUSE_ALPHA_ADDR = 0;
static const int LITUSE_ALPHA_BASE = 1;
static const int LITUSE_ALPHA_BYTOFF = 2;
static const int LITUSE_ALPHA_JSR = 3;
static const int LITUSE_ALPHA_TLS_GD = 4;
static const int LITUSE_ALPHA_TLS_LDM = 5;
static const int DT_ALPHA_NUM = 1;
static const int EF_PPC_EMB = 0x80000000;
static const int EF_PPC_RELOCATABLE = 0x00010000;
static const int EF_PPC_RELOCATABLE_LIB = 0x00008000;
static const int R_PPC_NONE = 0;
static const int R_PPC_ADDR32 = 1;
static const int R_PPC_ADDR24 = 2;
static const int R_PPC_ADDR16 = 3;
static const int R_PPC_ADDR16_LO = 4;
static const int R_PPC_ADDR16_HI = 5;
static const int R_PPC_ADDR16_HA = 6;
static const int R_PPC_ADDR14 = 7;
static const int R_PPC_ADDR14_BRTAKEN = 8;
static const int R_PPC_ADDR14_BRNTAKEN = 9;
static const int R_PPC_REL24 = 10;
static const int R_PPC_REL14 = 11;
static const int R_PPC_REL14_BRTAKEN = 12;
static const int R_PPC_REL14_BRNTAKEN = 13;
static const int R_PPC_GOT16 = 14;
static const int R_PPC_GOT16_LO = 15;
static const int R_PPC_GOT16_HI = 16;
static const int R_PPC_GOT16_HA = 17;
static const int R_PPC_PLTREL24 = 18;
static const int R_PPC_COPY = 19;
static const int R_PPC_GLOB_DAT = 20;
static const int R_PPC_JMP_SLOT = 21;
static const int R_PPC_RELATIVE = 22;
static const int R_PPC_LOCAL24PC = 23;
static const int R_PPC_UADDR32 = 24;
static const int R_PPC_UADDR16 = 25;
static const int R_PPC_REL32 = 26;
static const int R_PPC_PLT32 = 27;
static const int R_PPC_PLTREL32 = 28;
static const int R_PPC_PLT16_LO = 29;
static const int R_PPC_PLT16_HI = 30;
static const int R_PPC_PLT16_HA = 31;
static const int R_PPC_SDAREL16 = 32;
static const int R_PPC_SECTOFF = 33;
static const int R_PPC_SECTOFF_LO = 34;
static const int R_PPC_SECTOFF_HI = 35;
static const int R_PPC_SECTOFF_HA = 36;
static const int R_PPC_TLS = 67;
static const int R_PPC_DTPMOD32 = 68;
static const int R_PPC_TPREL16 = 69;
static const int R_PPC_TPREL16_LO = 70;
static const int R_PPC_TPREL16_HI = 71;
static const int R_PPC_TPREL16_HA = 72;
static const int R_PPC_TPREL32 = 73;
static const int R_PPC_DTPREL16 = 74;
static const int R_PPC_DTPREL16_LO = 75;
static const int R_PPC_DTPREL16_HI = 76;
static const int R_PPC_DTPREL16_HA = 77;
static const int R_PPC_DTPREL32 = 78;
static const int R_PPC_GOT_TLSGD16 = 79;
static const int R_PPC_GOT_TLSGD16_LO = 80;
static const int R_PPC_GOT_TLSGD16_HI = 81;
static const int R_PPC_GOT_TLSGD16_HA = 82;
static const int R_PPC_GOT_TLSLD16 = 83;
static const int R_PPC_GOT_TLSLD16_LO = 84;
static const int R_PPC_GOT_TLSLD16_HI = 85;
static const int R_PPC_GOT_TLSLD16_HA = 86;
static const int R_PPC_GOT_TPREL16 = 87;
static const int R_PPC_GOT_TPREL16_LO _GNU_VTENTRY = 12;
static const int R_MICROBLAZE_GOTPC_64 = 13;
static const int R_MICROBLAZE_GOT_64 = 14;
static const int R_MICROBLAZE_PLT_64 = 15;
static const int R_MICROBLAZE_REL = 16;
static const int R_MICROBLAZE_JUMP_SLOT = 17;
static const int R_MICROBLAZE_GLOB_DAT = 18;
static const int R_MICROBLAZE_GOTOFF_64 = 19;
static const int R_MICROBLAZE_GOTOFF_32 = 20;
static const int R_MICROBLAZE_COPY = 21;
static const int R_MICROBLAZE_TLS = 22;
static const int R_MICROBLAZE_TLSGD = 23;
static const int R_MICROBLAZE_TLSLD = 24;
static const int R_MICROBLAZE_TLSDTPMOD32 = 25;
static const int R_MICROBLAZE_TLSDTPREL32 = 26;
static const int R_MICROBLAZE_TLSDTPREL64 = 27;
static const int R_MICROBLAZE_TLSGOTTPREL32 = 28;
static const int R_MICROBLAZE_TLSTPREL32 = 29;
static const int R_OR1K_NONE = 0;
static conts int R_OR1K_32 = 1;
static const int R_OR1K_16 = 2;
static const int R_OR1K_8 = 3;
static const int R_OR1K_LO_16_IN_INSN = 4;
static const int R_OR1K_HI_16_IN_INSN = 5;
static const int R_OR1K_INSN_REL_26 = 6;
static const int R_OR1K_GNU_VTENTRY = 7;
static const int R_OR1K_GNU_VTINHERIT = 8;
static const int R_OR1K_32_PCREL = 9;
static const int R_OR1K_16_PCREL = 10;
static const int R_OR1K_8_PCREL = 11;
static const int R_OR1K_GOTPC_HI16 = 12;
static const int R_OR1K_GOTPC_LO16 = 13;
static const int R_OR1K_GOT16 = 14;
static const int R_OR1K_PLT26 = 15;
static const int R_OR1K_GOTOFF_HI16 = 16;
static const int R_OR1K_GOTOFF_LO16 = 17;
static const int R_OR1K_COPY = 18;
static const int R_OR1K_GLOB_DAT = 19;
static const int R_OR1K_JMP_SLOT = 20;
static const int R_OR1K_RELATIVE = 21;
static const int R_OR1K_TLS_GD_HI16 = 22;
static const int R_OR1K_TLS_GD_LO16 = 23;
static const int R_OR1K_TLS_LDM_HI16 = 24;
static const int R_OR1K_TLS_LDM_LO16 = 25;
static const int R_OR1K_TLS_LDO_HI16 = 26;
static const int R_OR1K_TLS_LDO_LO16 = 27;
static const int R_OR1K_TLS_IE_HI16 = 28;
static const int R_OR1K_TLS_IE_LO16 = 29;
static const int R_OR1K_TLS_LE_HI16 = 30;
static const int R_OR1K_TLS_LE_LO16 = 31;
static const int R_OR1K_TLS_TPOFF = 32;
static const int R_OR1K_TLS_DTPOFF = 33;
]]

return E
