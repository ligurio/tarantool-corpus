--[[
    This file is the result of some processing through
    testy/elfmorph.lua

    primarily to get the #defines related to constants
    turning into static const int
--]]

local ffi = require("ffi")
local bit = require("bit")
local band, lshift, rshift = bit.band, bit.lshift, bit.rshift

local E = {}  -- things to be exported

ffi.cdef[[
typedef uint16_t Elf32_Half;
typedef uint16_t Elf64_Half;
typedef uint32_t Elf32_Word;
typedef	int32_t  Elf32_Sword;
typedef uint32_t Elf64_Word;
typedef	int32_t  Elf64_Sword;
typedef uint64_t Elf32_Xword;
typedef	int64_t  Elf32_Sxword;
typedef uint64_t Elf64_Xword;
typedef	int64_t  Elf64_Sxword;
typedef uint32_t Elf32_Addr;
typedef uint64_t Elf64_Addr;
typedef uint32_t Elf32_Off;
typedef uint64_t Elf64_Off;
typedef uint16_t Elf32_Section;
typedef uint16_t Elf64_Section;
typedef Elf32_Half Elf32_Versym;
typedef Elf64_Half Elf64_Versym;
]]
ffi.cdef[[
static const int EI_NIDENT = 16;
]]
ffi.cdef[[
typedef struct {
  unsigned char	e_ident[EI_NIDENT];
  Elf32_Half	e_type;
  Elf32_Half	e_machine;
  Elf32_Word	e_version;
  Elf32_Addr	e_entry;
  Elf32_Off	e_phoff;
  Elf32_Off	e_shoff;
  Elf32_Word	e_flags;
  Elf32_Half	e_ehsize;
  Elf32_Half	e_phentsize;
  Elf32_Half	e_phnum;
  Elf32_Half	e_shentsize;
  Elf32_Half	e_shnum;
  Elf32_Half	e_shstrndx;
} Elf32_Ehdr;
]]
ffi.cdef[[
typedef struct {
  unsigned char	e_ident[EI_NIDENT];
  Elf64_Half	e_type;
  Elf64_Half	e_machine;
  Elf64_Word	e_version;
  Elf64_Addr	e_entry;
  Elf64_Off	e_phoff;
  Elf64_Off	e_shoff;
  Elf64_Word	e_flags;
  Elf64_Half	e_ehsize;
  Elf64_Half	e_phentsize;
  Elf64_Half	e_phnum;
  Elf64_Half	e_shentsize;
  Elf64_Half	e_shnum;
  Elf64_Half	e_shstrndx;
} Elf64_Ehdr;
]]

ffi.cdef[[
static const int EI_MAG0 = 0;
static const int ELFMAG0 = 0x7f;
static const int EI_MAG1 = 1;
static const int ELFMAG1 = 'E';
static const int EI_MAG2 = 2;
static const int ELFMAG2 = 'L';
static const int EI_MAG3 = 3;
static const int ELFMAG3 = 'F';
]]

E.ELFMAG		="\177ELF";

ffi.cdef[[
static const int SELFMAG = 4;
static const int EI_CLASS = 4;
static const int ELFCLASSNONE = 0;
static const int ELFCLASS32 = 1;
static const int ELFCLASS64 = 2;
static const int ELFCLASSNUM = 3;
static const int EI_DATA = 5;
static const int ELFDATANONE = 0;
static const int ELFDATA2LSB = 1;
static const int ELFDATA2MSB = 2;
static const int ELFDATANUM = 3;
static const int EI_VERSION = 6;
static const int EI_OSABI = 7;
static const int ELFOSABI_NONE = 0;
static const int ELFOSABI_SYSV = 0;
static const int ELFOSABI_HPUX = 1;
static const int ELFOSABI_NETBSD = 2;
static const int ELFOSABI_LINUX = 3;
static const int ELFOSABI_GNU = 3;
static const int ELFOSABI_SOLARIS = 6;
static const int ELFOSABI_AIX = 7;
static const int ELFOSABI_IRIX = 8;
static const int ELFOSABI_FREEBSD = 9;
static const int ELFOSABI_TRU64 = 10;
static const int ELFOSABI_MODESTO = 11;
static const int ELFOSABI_OPENBSD = 12;
static const int ELFOSABI_ARM = 97;
static const int ELFOSABI_STANDALONE = 255;
static const int EI_ABIVERSION = 8;
static const int EI_PAD = 9;
static const int ET_NONE = 0;
static const int ET_REL = 1;
static const int ET_EXEC = 2;
static const int ET_DYN = 3;
static const int ET_CORE = 4;
static const int ET_NUM = 5;
static const int ET_LOOS = 0xfe00;
static const int ET_HIOS = 0xfeff;
static const int ET_LOPROC = 0xff00;
static const int ET_HIPROC = 0xffff;
static const int EM_NONE = 0;
static const int EM_M32 = 1;
static const int EM_SPARC = 2;
static const int EM_386 = 3;
static const int EM_68K = 4;
static const int EM_88K = 5;
static const int EM_860 = 7;
static const int EM_MIPS = 8;
static const int EM_S370 = 9;
static const int EM_MIPS_RS3_LE = 10;
static const int EM_PARISC = 15;
static const int EM_VPP500 = 17;
static const int EM_SPARC32PLUS = 18;
static const int EM_960 = 19;
static const int EM_PPC = 20;
static const int EM_PPC64 = 21;
static const int EM_S390 = 22;
static const int EM_V800 = 36;
static const int EM_FR20 = 37;
static const int EM_RH32 = 38;
static const int EM_RCE = 39;
static const int EM_ARM = 40;
static const int EM_FAKE_ALPHA = 41;
static const int EM_SH = 42;
static const int EM_SPARCV9 = 43;
static const int EM_TRICORE = 44;
static const int EM_ARC = 45;
static const int EM_H8_300 = 46;
static const int EM_H8_300H = 47;
static const int EM_H8S = 48;
static const int EM_H8_500 = 49;
static const int EM_IA_64 = 50;
static const int EM_MIPS_X = 51;
static const int EM_COLDFIRE = 52;
static const int EM_68HC12 = 53<
static const int EM_MMA = 54;
static const int EM_PCP = 55;
static const int EM_NCPU = 56;
static const int EM_NDR1 = 57;
static const int EM_STARCORE = 58;
static const int EM_ME16 = 59;
static const int EM_ST100 = 60;
static const int EM_TINYJ = 61;
static const int EM_X86_64 = 62;
static const int EM_PDSP = 63;
static const int EM_FX66 = 66;
static const int EM_ST9PLUS = 67;
static const int EM_ST7 = 68;
static const int EM_68HC16 = 69;
static const int EM_68HC11 = 70;
static const int EM_68HC08 = 71;
static const int EM_68HC05 = 72;
static const int EM_SVX = 73;
static const int EM_ST19 = 74;
static const int EM_VAX = 75;
static const int EM_CRIS = 76;
static const int EM_JAVELIN = 77;
static const int EM_FIREPATH = 78;
static const int EM_ZSP = 79;
static const int EM_MMIX = 80;
static const int EM_HUANY = 81;
static const int EM_PRISM = 82;
static const int EM_AVR = 83;
static const int EM_FR30 = 84;
static const int EM_D10V = 85;
static const int EM_D30V = 86;
static const int EM_V850 = 87;
static const int EM_M32R = 88;
static const int EM_MN10300 = 89;
static const int EM_MN10200 = 90;
static const int EM_PJ = 91;
static const int EM_OR1K = 92;
static const int EM_ARC_A5 = 93;
static const int EM_XTENSA = 94;
static const int EM_AARCH64 = 183;
static const int EM_TILEPRO = 188;
static const int EM_MICROBLAZE = 189;
static const int EM_TILEGX = 191;
static const int EM_NUM = 192;
static const in3;
static const int STB_HIPROC = 15;
static const int STT_NOTYPE = 0;
static const int STT_OBJECT = 1;
static const int STT_FUNC = 2;
static const int STT_SECTION = 3;
static const int STT_FILE = 4;
static const int STT_COMMON = 5;
static const int STT_TLS = 6;
static const int STT_NUM = 7;
static const int STT_LOOS = 10;
static const int STT_GNU_IFUNC = 10;
static const int STT_HIOS = 12;
static const int STT_LOPROC = 13;
static const int STT_HIPROC = 15;
static const int STN_UNDEF = 0;
]]

function E.ELF32_ST_VISIBILITY(o)	return band(o, 0x03); end
function E.ELF64_ST_VISIBILITY(o)	return E.ELF32_ST_VISIBILITY (o); end

ffi.cdef[[
static const int STV_DEFAULT = 0;
static const int STV_INTERNAL = 1;
static const int STV_HIDDEN = 2;
static const int STV_PROTECTED = 3;
]]

ffi.cdef[[
typedef struct
{
  Elf32_Addr	r_offset;
  Elf32_Word	r_info;
} Elf32_Rel;
typedef struct {
  Elf64_Addr	r_offset;
  Elf64_Xword	r_info;
} Elf64_Rel;
typedef struct {
  Elf32_Addr	r_offset;
  Elf32_Word	r_info;
  Elf32_Sword	r_addend;
} Elf32_Rela;
typedef struct {
  Elf64_Addr	r_offset;
  Elf64_Xword	r_info;
  Elf64_Sxword	r_addend;
} Elf64_Rela;
]]


function E.ELF32_R_SYM(val)		return rshift((val), 8) end
function E.ELF32_R_TYPE(val)	return band(val, 0xff) end
function E.ELF32_R_INFO(sym, atype)		return lshift(sym, 8) + band(atype, 0xff) end
function E.ELF64_R_SYM(i)			return rshift(i, 32) end
function E.ELF64_R_TYPE(i)			return band(i, 0xffffffff) end
function E.ELF64_R_INFO(sym,atype)		return lshift(ffi.cast("Elf64_Xword", sym), 32) + atype end

ffi.cdef[[
typedef struct {
  Elf32_Word	p_type;
  Elf32_Off	p_offset;
  Elf32_Addr	p_vaddr;
  Elf32_Addr	p_paddr;
  Elf32_Word	p_filesz;
  Elf32_Word	p_memsz;
  Elf32_Word	p_flags;
  Elf32_Word	p_align;
} Elf32_Phdr;
typedef struct {
  Elf64_Word	p_type;
  Elf64_Word	p_flags;
  Elf64_Off	p_offset;
  Elf64_Addr	p_vaddr;
  Elf64_Addr	p_paddr;
  Elf64_Xword	p_filesz;
  Elf64_Xword	p_memsz;
  Elf64_Xword	p_align;
} Elf64_Phdr;
]]

ffi.cdef[[
static const int PT_NULL = 0;
static const int PT_LOAD = 1;
static const int PT_DYNAMIC = 2;
static const int PT_INTERP = 3;
static const int PT_NOTE = 4;
static const int PT_SHLIB = 5;
static const int PT_PHDR = 6;
static const int PT_TLS = 7;
static const int PT_NUM = 8;
static const int PT_LOOS = 0x60000000;
static const int PT_GNU_EH_FRAME = 0x6474e550;
static const int PT_GNU_STACK = 0x6474e551;
static const int PT_GNU_RELRO = 0x6474e552;
static const int PT_LOSUNW = 0x6ffffffa;
static const int PT_SUNWBSS = 0x6ffffffa;
static const int PT_SUNWSTACK = 0x6ffffffb;
static const int PT_HISUNW = 0x6fffffff;
static const int PT_HIOS = 0x6fffffff;
static const int PT_LOPROC = 0x70000000;
static const int PT_HIPROC = 0x7fffffff;
static const int PN_XNUM = 0xffff;
static const int PF_MASKOS = 0x0ff00000;
static const int PF_MASKPROC = 0xf0000000;
static const int NT_PRSTATUS = 1;
static const int NT_FPREGSET = 2;
static const int NT_PRPSINFO = 3;
static const int NT_PRXREG = 4;
static const int NT_TASKSTRUCT = 4;
static const int NT_PLATFORM = 5;
static const int NT_AUXV = 6;
static const int NT_GWINDOWS = 7;
static const int NT_ASRS = 8;
static const int NT_PSTATUS = 10;
static const int NT_PSINFO = 13;
static const int NT_PRCRED = 14;
static const int NT_UTSNAME = 15;
static const int NT_LWPSTATUS = 16;
static const int NT_LWPSINFO = 17;
static const int NT_PRFPXREG = 20;
static const int NT_SIGINFO = 0x53494749;
static const int NT_FILE = 0x46494c45;
static const int NT_PRXFPREG = 0x46e62b7f;
static const int NT_PPC_VMX = 0x100;
static const int NT_PPC_SPE = 0x101;
static const int NT_PPC_VSX = 0x102;
static const int NT_386_TLS = 0x200;
static const int NT_386_IOPERM = 0x201;
static const int NT_X86_XSTATE = 0x202;
static const int NT_S390_HIGH_GPRS = 0x300;
static const int NT_S390_TIMER = 0x301;
static const int NT_S390_TODCMP = 0x302;
static const int NT_S390_TODPREG = 0x303;
static const int NT_S390_CTRS = 0x304;
static const int NT_S390_PREFIX = 0x305;
static const int NT_S390_LAST_BREAK = 0x306;
static const int NT_S390_SYSTEM_CALL = 0x307;
static const int NT_S390_TDB = 0x308;
static const int NT_ARM_VFP = 0x400;
static const int NT_ARM_TLS = 0x401;
static const int NT_ARM_HW_BREAK = 0x402;
static const int NT_ARM_HW_WATCH = 0x403;
static const int NT_METAG_CBUF = 0x500;
static const int NT_METAG_RPIPE = 0x501;
static const int NT_METAG_TLS = 0x502;
]]

ffi.cdef[[
typedef struct {
  Elf32_Sword d_tag;
  union {
      Elf32_Word d_val;
      Elf32_Addr d_ptr;
  } d_un;
} Elf32_Dyn;
typedef struct {
  Elf64_Sxword d_tag;
  union {
      Elf64_Xword d_val;
      Elf64_Addr d_ptr;
  } d_un;
} Elf64_Dyn;
]]

ffi.cdef[[
static const int DT_MIPS_NUM = 0x35;
]]

ffi.cdef[[
static const int DT_NULL = 0;
static const int DT_NEEDED = 1;
static const int DT_PLTRELSZ = 2;
static const int DT_PLTGOT = 3;
static const int DT_HASH = 4;
static const int DT_STRTAB = 5;
static const int DT_SYMTAB = 6;
static const int DT_RELA = 7;
static const int DT_RELASZ = 8;
static const int DT_RELAENT = 9;
static const int DT_STRSZ = 10;
static const int DT_SYMENT = 11;
static const int DT_INIT = 12;
static const int DT_FINI = 13;
static const int DT_SONAME = 14;
static const int DT_RPATH = 15;
static const int DT_SYMBOLIC = 16;
static const int DT_REL = 17;
static const int DT_RELSZ = 18;
static const int DT_RELENT = 19;
static const int DT_PLTREL = 20;
static const int DT_DEBUG = 21;
static const int DT_TEXTREL = 22;
static const int DT_JMPREL = 23;
static const int DT_BIND_NOW = 24;
st4KEOP_CHECKED = 0x00000001;
static const int OHWA1_R4KEO P_CLEAN = 0x00000002;
static const int R_MIPS_NONE = 0;
static const int R_MIPS_16 = 1;
static const int R_MIPS_32 = 2;
static const int R_MIPS_REL32 = 3;
static const int R_MIPS_26 = 4;
static const int R_MIPS_HI16 = 5;
static const int R_MIPS_LO16 = 6;
static const int R_MIPS_GPREL16 = 7;
static const int R_MIPS_LITERAL = 8;
static const int R_MIPS_GOT16 = 9;
static const int R_MIPS_PC16 = 10;
static const int R_MIPS_CALL16 = 11;
static const int R_MIPS_GPREL32 = 12;
static const int R_MIPS_SHIFT5 = 16;
static const int R_MIPS_SHIFT6 = 17;
static const int R_MIPS_64 = 18;
static const int R_MIPS_GOT_DISP = 19;
static const int R_MIPS_GOT_PAGE = 20;
static const int R_MIPS_GOT_OFST = 21;
static const int R_MIPS_GOT_HI16 = 22;
static const int R_MIPS_GOT_LO16 = 23;
static const int R_MIPS_SUB = 24;
static const int R_MIPS_INSERT_A = 25;
static const int R_MIPS_INSERT_B = 26;
static const int R_MIPS_DELETE = 27;
static const int R_MIPS_HIGHER = 28;
static const int R_MIPS_HIGHEST = 29;
static const int R_MIPS_CALL_HI16 = 30;
static const int R_MIPS_CALL_LO16 = 31;
static const int R_MIPS_SCN_DISP = 32;
static const int R_MIPS_REL16 = 33;
static const int R_MIPS_ADD_IMMEDIATE = 34;
static const int R_MIPS_PJUMP = 35;
static const int R_MIPS_RELGOT = 36;
static const int R_MIPS_JALR = 37;
static const int R_MIPS_TLS_DTPMOD32 = 38;
static c(onst int R_MIPS_TLS_DTPREL32 = 39;
static const int R_MIPS_TLS_DTPMOD64 = 40;
static const int R_MIPS_TLS_DTPREL64 = 41;
static const int R_MIPS_TLS_GD = 42;
static const int R_MIPS_TLS_LDM = 43;
static const int R_MIPS_TLS_DTPREL_HI16 = 44;
static const int R_MIPS_TLS_DTPREL_LO16 = 45;
static const int R_MIPS_TLS_GOTTPREL = 46;
static const int R_MIPS_TLS_TPREL32 = 47;
static const int R_MIPS_TLS_TPREL64 = 48;
static const int R_MIPS_TLS_TPREL_HI16 = 49;
static const int R_MIPS_TLS_TPREL_LO16 = 50;
static const int R_MIPS_GLOB_DAT = 51;
static const int R_MIPS_COPY = 126;
static const int R_MIPS_JUMP_SLOT = 127;
static const int R_MIPS_NUM = 128;
static const int PT_MIPS_REGINFO = 0x70000000;
static const int PT_MIPS_RTPROC = 0x70000001;
static const int PT_MIPS_OPTIONS = 0x70000002;
static const int PF_MIPS_LOCAL = 0x10000000;
static const int DT_MIPS_RLD_VERSION = 0x70000001;
static const int DT_MIPS_TIME_STAMP = 0x70000002;
static const int DT_MIPS_ICHECKSUM = 0x70000003;
static const int DT_MIPS_IVERSION = 0x70000004;
static const int DT_MIPS_FLAGS = 0x70000005;
static const int DT_MIPS_BASE_ADDRESS = 0x70000006;
static const int DT_MIPS_MSYM = 0x70000007;
static const int DT_MIPS_CONFLICT = 0x70000008;
static const int DT_MIPS_LIBLIST = 0x70000009;
static const int DT_MIPS_LOCAL_GOTNO = 0x7000000a;
static const int DT_MIPS_CONFLICTNO = 0x7000000b;
static const int DT_MIPS_LIBLISTNO = 0x70000010;
static const int DT_MIPS_SYMTABNO = 0x70000011;
static const int DT_MIPS_UNREFEXTNO = 0x70000012;
static const int DT_MIPS_GOTSYM = 0x70000013;
static const int DT_MIPS_HIPAGENO = 0x70000014;
static const int DT_MIPS_RLD_MAP = 0x70000016;
static const int DT_MIPS_DELTA_CLASS = 0x70000017;
static const int DT_MIPS_DELTA_CLASS_NO = 0x70000018;
static const int DT_MIPS_DELTA_INSTANCE = 0x70000019;
static const int DT_MIPS_DELTA_INSTANCE_NO = 0x7000001a;
static const int DT_MIPS_DELTA_RELOC = 0x7000001b;
static const int DT_MIPS_DELTA_RELOC_NO = 0x7000001c;
static const int DT_MIPS_DELTA_SYM = 0x7000001d;
static const int DT_MIPS_DELTA_SYM_NO = 0x7000001e;
static const int DT_MIPS_DELTA_CLASSSYM = 0x70000020;
static const int DT_MIPS_DELTA_CLASSSYM_NO = 0x70000021;
static const int DT_MIPS_CXX_FLAGS = 0x70000022;
static const int DT_MIPS_PIXIE_INIT = 0x70000023;
static const int DT_MIPS_SYMBOL_LIB = 0x70000024;
static const int DT_MIPS_LOCALPAGE_GOTIDX = 0x70000025;
static const int DT_MIPS_LOCAL_GOTIDX = 0x70000026;
static const int DT_MIPS_HIDDEN_GOTIDX = 0x70000027;
static const int DT_MIPS_PROTECTED_GOTIDX = 0x70000028;
static const int DT_MIPS_OPTIONS = 0x70000029;
static const int DT_MIPS_INTERFACE = 0x7000002a;
static const int DT_MIPS_DYNSTR_ALIGN = 0x7000002b;
static const int DT_MIPS_INTERFACE_SIZE = 0x7000002c;
static const int DT_MIPS_RLD_TEXT_RESOLVE_ADDR = 0x7000002d;
static const int DT_MIPS_PERF_SUFFIX = 0x7000002e;
static const int DT_MIPS_COMPACT_SIZE = 0x7000002f;
static const int DT_MIPS_GP_VALUE = 0x70000030;
static const int DT_MIPS_AUX_DYNAMIC = 0x70000031;
static const int DT_MIPS_PLTGOT = 0x70000032;
static const int DT_MIPS_RWPLT = 0x70000034;
static const int RHF_NONE = 0;
]]


ffi.cdef[[
typedef struct
{
  Elf32_Word l_name;
  Elf32_Word l_time_stamp;
  Elf32_Word l_checksum;
  Elf32_Word l_version;
  Elf32_Word l_flags;
} Elf32_Lib;
typedef struct
{
  Elf64_Word l_name;
  Elf64_Word l_time_stamp;
  Elf64_Word l_checksum;
  Elf64_Word l_version;
  Elf64_Word l_flags;
} Elf64_Lib;
]]

ffi.cdef[[
static const int LL_NONE = 0;
]]


ffi.cdef[[
typedef Elf32_Addr Elf32_Conflict;
]]

ffi.cdef[[
static const int EF_PARISC_TRAPNIL = 0x00010000;
static const int EF_PARISC_EXT = 0x00020000;
static const int EF_PARISC_LSB = 0x00040000;
static const int EF_PARISC_WIDE = 0x00080000;
static const int EF_PARISC_NO_KABP = 0x00100000;
static const int EF_PARISC_LAZYSWAP = 0x00400000;
static const int EF_PARISC_ARCH = 0x0000ffff;
static const int EFA_PARISC_1_0 = 0x020b;
static const int EFA_PARISC_1_1 = 0x0210;
static const int EFA_PARISC_2_0 = 0x0214;
static const int SHN_PARISC_ANSI_COMMON = 0xff00;
static const int SHN_PARISC_HUGE_COMMON = 0xff01;
static const int SHT_PARISC_EXT = 0x70000000;
static const int SHT_PARISC_UNWIND = 0x70000001;
static const int SHT_PARISC_DOC = 0x70000002;
static const int SHF_PARISC_SHORT = 0x20000000;
static const int SHF_PARISC_HUGE = 0x40000000;
static const int SHF_PARISC_SBP = 0x80000000;
static const int STT_PARISC_MILLICODE = 13;
static const int R_PARISC_NONE = 0;
static const int R_PARISC_DIR32 = 1;
static const int R_PARISC_DIR21L = 2;
static const int R_PARISC_DIR17R = 3;
static const int R_PARISC_DIR17F = 4;
static const int R_PARISC_DIR14R = 6;
static const int R_PARISC_PCREL32 = 9;
static const int R_PARISC_PCREL21L = 10;
static const int R_PARISC_PCREL17R = 11;
static const int R_PARISC_PCREL17F = 12;
static const int R_PARISC_PCREL14R = 14;
static const int R_PARISC_DPREL21L = 18;
static const int R_PARISC_DPREL14R = 22;
static const int R_PARISC_GPREL21L = 26;
static const int R_PARISC_GPREL14R = 30;
static const int R_PARISC_LTOFF21L = 34;
static const int R_PARISC_LTOFF14R = 38;
static const int R_PARISC_SECREL32 = 41;
static const int R_PARISC_SEGBASE = 48;
static const int R_PARISC_SEGREL32 = 49;
static const int R_PARISC_PLTOFF21L = 50;
static const int R_PARISC_PLTOFF14R = 54;
static const int R_PARISC_LTOFF_FPTR32 = 57;
static const int R_PARISC_LTOFF_FPTR21L = 58;
static const int R_PARISC_LTOFF_FPTR14R = 62;
static const int R_PARISC_FPTR64 = 64;
static const int R_PARISC_PLABEL32 = 65;
static const int R_PARISC_PLABEL21L = 66;
static const int R_PARISC_PLABEL14R = 70;
static const int R_PARISC_PCREL64 = 72;
static const int R_PARISC_PCREL22F = 74;
static const int R_PARISC_PCREL14WR = 75;
static const int R_PARISC_PCREL14DR = 76;
static const int R_PARISC_PCREL16F = 77;
static const int R_PARISC_PCREL16WF = 78;
static const int R_PARISC_PCREL16DF = 79;
static const int R_PARISC_DIR64 = 80;
static const int R_PARISC_DIR14WR = 83;
static const int R_PARISC_DIR14DR = 84;
static const int R_PARISC_DIR16F = 85;
static const int R_PARISC_DIR16WF = 86;
static const int R_PARISC_DIR16DF = 87;
static const int R_PARISC_GPREL64 = 88;
static const int R_PARISC_GPREL14WR = 91;
static const int R_PARISC_GPREL14DR = 92;
static const int R_PARISC_GPREL16F = 93;
static const int R_PARISC_GPREL16WF = 94;
static const int R_PARISC_GPREL16DF = 95;
static const int R_PARISC_LTOFF64 = 96;
static const int R_PARISC_LTOFF14WR = 99;
static const int R_PARISC_LTOFF14DR = 100;
static const int R_PARISC_LTOFF16F = 101;
static const int R_PARISC_LTOFF16WF = 102;
static const int R_PARISC_LTOFF16DF = 103;
static const int R_PARISC_SECREL64 = 104;
static const int R_PARISC_SEGREL64 = 112;
static const int R_PARISC_PLTOFF14WR = 115;
static const int R_PARISC_PLTOFF14DR = 116;
static const int R_PARISC_PLTOFF16F = 117;
static const int R_PARISC_PLTOFF16WF = 118;
static const int R_PARISC_PLTOFF16DF = 119;
static const int R_PARISC_LTOFF_FPTR64 = 120;
static const int R_PARISC_LTOFF_FPTR14WR = 123;
static const int R_PARISC_LTOFF_FPTR14DR = 124;
static cons1t int R_PARISC_LTOFF_FPT