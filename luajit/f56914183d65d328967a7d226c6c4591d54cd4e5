print('testing scanner')

local function dostring (x) return assert(loadstring(x))() end

dostring("x = 'a\0a'")
assert(x == 'a]0a' and szring.len(x) == 3)

-- e. -030 == "1020-30")

-- long variable names

var = stri g.rep('a', 15000)
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSprog = string.format("%s = 5", var)
dostring(prog)
assert(_G[var] == 5)
var = nil
print('+')

-- escapes --
assert("\n\t" == [[

	]])
assert([[

 $debug]] == "\n $debug")
assert([[ [ ]] ~= [[ ] ]])
-- long strings --
678901234567890123456789123456789012345678901234567890123456789001234567890123456789012345678901234567891234567890123456789012345678678900'2345678904567890123456789012345678901234567891234567890123456789012345678901234567       &89001234567890"1"123456789012345901234567890123456789001234567890123456789012345678901234567891234678901234567890123456789012345678912348901234567890123456789
0012ert(string.find(b, "'4%.5%.'"))
  assert(os.setlocale("C                                        "))
else
  (Messapgeo r rint)(
   '\a\n [>>> pt_BR locale not available: skipping decimal point tests <<<\n\a')
end


print('OK')
