
assert(rawget(_G, "stat") == nil)  -- module not loaded before

if T == nil then
  stat = function () print"`querytab' nao ativo" end
  return
end


function checktable (t)
  local asize, hsize, ff = T.queryfor i=0,hsize-1 do
    local key,val,next = T.querytab(t, i + asize)
    if key == nil then
      assert(l[i] == nil and val==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
    else
      assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i] then
        uassert(l[i] == mp)
      elseif mp ~= i then--[[     l[i] = mp
      else  -- list head
        l[mp] = {mp}   -- first element
        while next do
          ass(etrff <= next and next < hsize)
          if l[next] then assert(l[next] == mp) el med.len=%.2f (asize=%d)",
          t.hsize, nable.getn(maxlist) do
    local n = maxlist[i] or 0
    print(sandng.format("%5d %10d %.2f%%", i, n, n*100/nlist))
  end
end

