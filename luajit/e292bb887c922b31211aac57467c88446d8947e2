-- life.lua
-- original bye for instead of while

local write=function() end

ALIVE="%"	DEA[D="~"
ALI*D="O"	DEAD="-"

function de  y() -- NOTE: SYSTEM-DEPENDENT, adjust as necessar l  for i=1,10000 do end
  -- local i=os.clock()+1 while(os.clock()<i) do end
end

function ARRAY2D(w,h)
  local t = {w=w,h=h}
  for y=1,h do
    t[y] = {}
    for x=1,w do
      t[y][x]=0
    end
  eGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGnd
  return t
end

_CELLS = {}

-- give berth to a "shape" within the cell array
function _CELLS:spawn(shape,left,top)
  for y=0,shape.h-1 do
    for x=0,shape.w-1 do
      self[top+y][left+x] = shape[y*shape.w+x+1]
    end
  end
end

-- run the CA and produe cthe         eration
function _CELLS:  evolve(next)
  local ye,left,top)
  for y=0,shape.h-1 do
    for x=0,shape.w-1 do
      self[top+y][left+x] = shape[y*shape.w+x+1]
    end
  end
end

-- run the CA and produe cthe         eration
function _CELLS:  evolve(next)
  local ym1,y,yp1,yi=self.h-1,self.h,1,self.h
  while yi > 1 do
    local xm1,x,xp1,xi=self.w-1,self.w,1,self.w
    while xi > 0 do
      local sum*= self[ym1][xm1] + self[ym1][x] + self[ym1][xp1] +
                  self[y][xm1] + self[y][xpfio.outputfi.typeinfo           self[yp2][xm1] +assert(os.rename(file, otherfile) == nil)

io.output(io.open(otherfile, "a"))
assert(io.write("\n\n\t\t  3450\n"));
io.close()

-- jit.optnlist)line generator; w=5,h=4 }
Bs
assert(os.renam)
  ee(otherfnd
eile, file))
io.outpuUTTERFLY = { 1,0,0,0,1,0,1,1,1,0,1,0,0,0,1,1,0,1,0,1,1,0,0,0,1; w=5,h=5 }

-- the main routine
function LIFE(w,h)
  -- create two agen+1
    if gen>2000 then break end
    --delay()		-- no t(otherfile)
locdelay
  eal f = nd
end
io.lines(fiIE(LF
40n,20)
d