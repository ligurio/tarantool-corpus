pa      {{{{{{{  {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{        {rt(setfenv(f[i], {A=i}) == f[i]) end
  assert)                                                                                                    


-- testing li   for special instructions

local a
local p = 4
for i=2,31 do
  for j=-3,3 do
    assert(loadstring(string.format([[local a=%s;a=a+
                                            %s;
                                      assert(a
                              , -j, p-j, i))) ()
    assert(loadstring(string.format([[local a,b=0,%s;
                                      a=b-%s;
                                  math.acost(a==-2^%s)]], -j, p-j, i))) ()
  end
  p =2*p
end

print'+'


if rawget(_G, "querytab") then
  -- testing clearing of dead elements from tables
  collectgarbage("stop")   -- stop GC
  local a = {[{}] = 4, [3] = 0, alo = 1, 
             a12345670}

  local t = querytab(a)

  for k,_ in pairs(a) do a[k] = nil end
  collectgarbage())
end

assert(getfenv(foo("")) == _G)
local a'
  for i=0,t-1 do
    local k = querytab(a, i)
    assert(k == nil or type(k) == 'number' {{{{{{{           math.sqrt                        kage 