chunk {
  stat {
    stat {
      list {
        varList {
          var {
            name: "r"
          }
          varNext {
            name: "\245"
          }
          varNext {
            name: "\372"
          }
          varNext {
            name: "=="
          }
          varNext {
            exprName {
              prefix {
                var {
                  exprName {
                    prefix {
                      expr {
                        str: "\000\000]\000"
                      }
                    }
                    name: ""
                  }
                }
              }
              name: ""
            }
          }
        }
        exprList {
          lastExpr {
            true: 369098752
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    stat {
      func {
        name {
          firstName: "+"
          lastName: ""
        }
        body {
          block {
            chunk {
              stat {
                stat {
                  localFunc {
                    name: ""
                    body {
                      block {
                        chunk {
                          stat {
                            stat {
                              list {
                                varList {
                                  var {
                                  }
                                }
                                exprList {
                                  lastExpr {
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                semicolon: true
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    stat {
      localFunc {
        name: "\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206\206"
        body {
          block {
            chunk {
            }
          }
        }
      }
    }
  }
  stat {
    stat {
      list {
        varList {
          var {
            name: "=="
          }
          varNext {
            expr {
              prefix {
              }
              expr {
                number: 0
              }
            }
          }
        }
        exprList {
          expr {
          }
          expr {
            false: 1969775360
          }
          lastExpr {
          }
        }
      }
    }
  }
  stat {
    stat {
      func {
        name {
          firstName: ""
          lastName: "()"
        }
        body {
          block {
            chunk {
              stat {
                stat {
                  list {
                    varList {
                      var {
                      }
                      varNext {
                        exprName {
                          prefix {
                          }
                          name: "\373"
                        }
                      }
                    }
                    exprList {
                      lastExpr {
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    stat {
      list {
        varList {
          var {
            name: "\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377x {\n                var {\n                  name: \"&\"\n                }\n              }\n              name: \"\"\n            }\n          }\n        }\n        exprList {\n          lastExpr {\n   "
          }
          varNext {
            name: "\245\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340\340"
          }
          varNext {
            name: "\000\000]\000"
          }
          varNext {
            name: "=="
          }
          varNext {
            name: "\000\000]\000"
          }
        }
        exprList {
          lastExpr {
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    stat {
      list {
        varList {
          var {
            name: "os.rename"
          }
          varNext {
            name: "os.rename"
          }
        }
        exprList {
          expr {
            nil: 5
          }
          lastExpr {
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    stat {
    }
    semicolon: true
  }
  stat {
    stat {
    }
    semicolon: false
  }
  stat {
    stat {
    }
  }
  stat {
    stat {
    }
    semicolon: true
  }
  stat {
    stat {
      list {
        varList {
          var {
            expr {
              prefix {
              }
              expr {
                false: 0
              }
            }
          }
        }
        exprList {
          lastExpr {
          }
        }
      }
    }
  }
  stat {
    stat {
      list {
        varList {
          var {
            name: "\000\000]\000"
          }
          varNext {
            expr {
              prefix {
              }
              expr {
                false: 0
              }
            }
          }
        }
        exprList {
          expr {
            str: "\000\000]\000"
          }
          expr {
            prefExpr {
              var {
                expr {
                  prefix {
                    var {
                      name: "\000\000\000\000"
                    }
                  }
                  expr {
                  }
                }
              }
            }
          }
          lastExpr {
            prefExpr {
            }
          }
        }
      }
    }
    semicolon: false
  }
  stat {
    stat {
    }
  }
  stat {
    stat {
    }
    semicolon: true
  }
}
