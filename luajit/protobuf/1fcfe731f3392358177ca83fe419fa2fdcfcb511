chunk {
  stat {
    stat {
      varList {
        var {
          expr {
            prefix {
              expr {
                str: "lua_grammar.Chunk"
              }
            }
            expr {
              true: 524288
            }
          }
        }
        varNext {
          expr {
            prefix {
              expr {
              }
            }
            expr {
              false: 524288
            }
          }
        }
        varNext {
        }
      }
      exprList {
        expr {
          true: 0
        }
        lastExpr {
        }
      }
    }
  }
  stat {
    stat {
      varList {
        var {
          name: "\377\377"
        }
        varNext {
          expr {
            prefix {
              expr {
              }
            }
            expr {
            }
          }
        }
        varNext {
          name: ")"
        }
      }
      exprList {
        expr {
          str: "&"
        }
        lastExpr {
        }
      }
    }
  }
  stat {
    stat {
      varList {
        var {
          name: "+"
        }
        varNext {
          expr {
            prefix {
              expr {
              }
            }
            expr {
            }
          }
        }
      }
      exprList {
        lastExpr {
        }
      }
    }
    semicolon: true
  }
  stat {
    stat {
      varList {
        var {
          name: "("
        }
      }
      exprList {
        lastExpr {
        }
      }
    }
  }
  stat {
    stat {
      varList {
        var {
        }
        varNext {
          expr {
            prefix {
              expr {
              }
            }
            expr {
              str: ")"
            }
          }
        }
        varNext {
          name: "+"
        }
      }
      exprList {
        lastExpr {
          str: "&"
        }
      }
    }
  }
  stat {
    stat {
      varList {
        var {
          name: ")"
        }
        varNext {
          expr {
            prefix {
              expr {
              }
            }
            expr {
            }
          }
        }
      }
      exprList {
        expr {
          str: "\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364\364"
        }
        lastExpr {
        }
      }
    }
  }
  stat {
    stat {
      varList {
        var {
          name: "+"
        }
        varNext {
          expr {
            prefix {
              expr {
                number: 10496
              }
            }
            expr {
            }
          }
        }
      }
      exprList {
        lastExpr {
        }
      }
    }
  }
  stat {
    stat {
      varList {
        var {
        }
        varNext {
          name: ")"
        }
        varNext {
          name: "math.exp"
        }
      }
      exprList {
        lastExpr {
        }
      }
    }
    semicolon: true
  }
  last {
    stat {
    }
    semicolon: true
  }
}
