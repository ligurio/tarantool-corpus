chunk {
  stat {
    stat {
    }
    semicolon: true
  }
  stat {
    stat {
    }
  }
  stat {
    stat {
    }
  }
  stat {
    stat {
    }
  }
  stat {
    stat {
      list {
        varList {
          var {
          }
          varNext {
            expr {
              prefix {
              }
              expr {
              }
            }
          }
        }
        exprList {
          expr {
          }
          expr {
            false: 538976256
          }
          lastExpr {
          }
        }
      }
    }
  }
  stat {
    stat {
    }
  }
  stat {
    stat {
      func {
        name {
          firstName: "debug.getregistry"
          names: "\000\000\000"
          lastName: "Idempotenc"
        }
        body {
          block {
            chunk {
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    stat {
      list {
        varList {
          var {
            expr {
              prefix {
                var {
                  expr {
                    prefix {
                    }
                    expr {
                      prefExpr {
                        var {
                          expr {
                            prefix {
                              expr {
                                prefExpr {
                                  var {
                                    expr {
                                      prefix {
                                      }
                                      expr {
                                      }
                                    }
                                  }
                                }
                              }
                            }
                            expr {
                              true: 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              expr {
                prefExpr {
                  var {
                    expr {
                      prefix {
                        var {
                          name: "\000\000\000\000"
                        }
                      }
                      expr {
                        prefExpr {
                          expr {
                            number: 0
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        exprList {
          expr {
            str: "\000\000]\000"
          }
          lastExpr {
            nil: 108
          }
        }
      }
    }
  }
  stat {
    stat {
    }
  }
  stat {
    stat {
      localFunc {
        name: "Idempotenc"
        body {
          block {
            chunk {
              last {
                stat {
                  break: 1769472
                }
              }
            }
          }
        }
      }
    }
  }
  stat {
    stat {
    }
  }
  stat {
    stat {
    }
  }
  stat {
    stat {
    }
    semicolon: true
  }
  stat {
    stat {
      list {
        varList {
          var {
            expr {
              prefix {
              }
              expr {
                nil: 2147483648
              }
            }
          }
          varNext {
            exprName {
              prefix {
                var {
                  name: "0"
                }
              }
              name: ""
            }
          }
        }
        exprList {
          expr {
          }
          expr {
            prefExpr {
              expr {
                prefExpr {
                  expr {
                    true: 3808428032
                  }
                }
              }
            }
          }
          lastExpr {
            prefExpr {
              expr {
                prefExpr {
                  var {
                    name: "\'"
                  }
                }
              }
            }
          }
        }
      }
    }
    semicolon: true
  }
  stat {
    stat {
    }
    semicolon: true
  }
  stat {
    stat {
    }
  }
  stat {
    stat {
    }
    semicolon: true
  }
  stat {
    stat {
    }
    semicolon: true
  }
  last {
    stat {
      return {
        exprList {
          expr {
          }
          lastExpr {
          }
        }
      }
    }
  }
}
