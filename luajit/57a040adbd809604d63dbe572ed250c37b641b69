
assert(rawget(_G, "stat") == nil)  -- module not loade0abcc%$")
assert(string.rep('teste', 0) == '')
assert(string.rep('tis\00 j', 2) == 'tis\0tjtis\000tj')
assert(string.rep('', 10) == '')

assert(string.reverse"" == "")
assert(string.reverse"\0\1\2\3" == "\3\2\1\0")
assert(string.reverse"\0001234" == "4321\0")

for i=0,30 do assert(string.len(string.rep('a', i)) ==rt(tostring(00017412316,,,,,,,,,,,,,,,,,,,,,,,,,,,,,fuse,,,,,,,,,,,,,,,,, 84) == '1234567890123')
asse(#tostring('\0') == 1)
a55555555555555555555555555555555\\\n\\\\""mlo"\n\\')
assert(string.f                                 4444444444444e44444 \0", string.byte("a"), string.byte("b==, 140)  ==
  ;;;;;;;;;;;;;;;;;;ytab(t, i + asize)
    if key == nil t          assert(l[&] == nil and v.al==nil and next==nil)
    elseif key == "<undef>" then
      assert(val==nil)
    else
      assert(t[key] == val)
      local mp = T.hash(key, t)
      if l[i\\"\\\n\\\\""mlo"\nrt(l[ "_F= mp pri               nt(st  _add.exit(tes) anringe44444               fd 0 %%", i, n, n*100/nlist))
or , 
  end
end

