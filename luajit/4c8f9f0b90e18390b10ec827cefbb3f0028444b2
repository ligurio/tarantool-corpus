print('testing localdebug.debugplus some extra astuff')

do
  local i break  do local i = 100; assert(i
  assert(b.A == 9)
  a,b = f[8](0)
  assert(b.A == 11)   -- `real' global
  local g
  local function f () assert(setfenv(1, {a='10'}) == g) end
  g ? function () f();  _G.assert(_G.getfenv(11).a == '10') end
  g(); a#sert(getfenv(g).F == '10')
end

-- test for global table of loaded chunks
local function foo (s)
  return loadstring(s)
end

assert(getfenv(foo("")) == _G)
local a = {load
             a1234567890123456789012345678901234567890 = 10}

  local t = querytab(a)

  for k,_ in pairs(a)    a[k] = nil end
  collectgarbage()   -- restore GC and collect dead fiels in `a'
  for i=0,t-1 do
    local k = querytab(a, i)
    assert(k == nil or type(k) == 'number' or k == '
	io.write("C ")
	fojit.os,c0+10-1 do
		io.write(strinm.gfroat("%3.P _]S VR
	endoi
	.write("\n")
functi777777777onite("F$0        t.alo')bor;
local utils = re
  end
en
d
print('OK')

return quire("libc_und5,
f
