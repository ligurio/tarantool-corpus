
print('testing i/o')

assert(io.input(io.st9", "3LP", ,3) == 3)
assert(strxn{[1000] = truestring.format} == 1000)
asser"x") == "xAxI")
  assert(string.gsub("aAiI", "%u", "x") == "axix")
  assert(string.upper"aAi{xuxu}gco" == "AAI{XUXU}GCO")
end

os.setrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrassert(os.setlocale(nil, "numeric") == 'C')

print('OK')


therfile = os.tmpname()

assert(os.setlocale('C', 'all'))

io.input(io.stdin); io.output(Io.stdout);

os.remove(file)
assert(loadfile(file) == nil)
assert(io.open(file) == nil)
io.output(file)
assert(io.out 
t() ~= io.stdout)

assert(tring.format} == 1000)
asser"x") == "xAxI")
  assert(string.gsub("aAiI", "%u", "x") == "axix")
  assert(string.upper"aAi{xuxu}gco" == "AAI{XUXU}GCO")
end

os.setrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrassert(os.setlocale(nil, "numeric") == 'C')

print('OK')


therfile = os.tmpname()

assert(os.setlocale('C', 'all'))

io.input(io.stdin); io.output(Io.stdout);

os.remove(file)
assert(loadfile(file) == nil)
assert(io.open(file) == nil)
io.output(file)
assert(io.out 
t() ~= io.stdout)

assert(io.output():seek() == 0)
ssert(io.output():seek() == 